ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_CSHL.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_BaseInit,"ax",%progbits
  20              		.align	2
  21              		.global	CapSense_BaseInit
  22              		.code	16
  23              		.thumb_func
  24              		.type	CapSense_BaseInit, %function
  25              	CapSense_BaseInit:
  26              	.LFB32:
  27              		.file 1 "Generated_Source\\PSoC4\\CapSense_CSHL.c"
   1:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/CapSense_CSHL.c **** * File Name: CapSense_CSHL.c
   3:Generated_Source\PSoC4/CapSense_CSHL.c **** * Version 2.60
   4:Generated_Source\PSoC4/CapSense_CSHL.c **** *
   5:Generated_Source\PSoC4/CapSense_CSHL.c **** * Description:
   6:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CSD component.
   8:Generated_Source\PSoC4/CapSense_CSHL.c **** *
   9:Generated_Source\PSoC4/CapSense_CSHL.c **** * Note:
  10:Generated_Source\PSoC4/CapSense_CSHL.c **** *
  11:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CapSense_CSHL.c **** * Copyright 2013-2016, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/CapSense_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/CapSense_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/CapSense_CSHL.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  18:Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_CSHL.h"
  19:Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_PVT.h"
  20:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  21:Generated_Source\PSoC4/CapSense_CSHL.c **** /* SmartSense functions */
  22:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  23:Generated_Source\PSoC4/CapSense_CSHL.c ****     extern void CapSense_UpdateThresholds(uint32 sensor);
  24:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  25:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  26:Generated_Source\PSoC4/CapSense_CSHL.c **** /* Storage of filters data */
  27:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
  28:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) )
  29:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  30:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 2


  31:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData2[CapSense_TOTAL_SENSOR_COUNT];
  32:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  33:Generated_Source\PSoC4/CapSense_CSHL.c **** #elif ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER))   || \
  34:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER))   || \
  35:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
  36:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))   || \
  37:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)) )
  38:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  39:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  40:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
  41:Generated_Source\PSoC4/CapSense_CSHL.c ****         *    (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
  42:Generated_Source\PSoC4/CapSense_CSHL.c ****         */
  43:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  44:Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint16 CapSense_sensorRaw[CapSense_TOTAL_SENSOR_COUNT];
  45:Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint8 CapSense_sensorEnableMask[CapSense_TOTAL_SENSOR_MASK];
  46:Generated_Source\PSoC4/CapSense_CSHL.c **** extern const uint8 CapSense_widgetNumber[CapSense_TOTAL_SENSOR_COUNT];
  47:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  48:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
  49:Generated_Source\PSoC4/CapSense_CSHL.c ****     extern uint32 CapSense_widgetResolution[CapSense_RESOLUTIONS_TBL_SIZE];
  50:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
  51:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  52:Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_sensorBaseline[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  53:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorBaselineLow[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  54:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorSignal[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  55:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorOnMask[CapSense_TOTAL_SENSOR_MASK] = {0u};
  56:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  57:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineResetCnt[CapSense_TOTAL_SENSOR_COUNT];
  58:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineReset[CapSense_TOTAL_SENSOR_COUNT] = {
  59:Generated_Source\PSoC4/CapSense_CSHL.c ****     30u, 
  60:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  61:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  62:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  63:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  64:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  65:Generated_Source\PSoC4/CapSense_CSHL.c ****     extern CapSense_CONFIG_TYPE_P4_v2_60 CapSense_config;
  66:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  67:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  68:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
  69:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
  70:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
  71:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  72:Generated_Source\PSoC4/CapSense_CSHL.c **** /* Generated by Customizer */
  73:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_fingerThreshold[CapSense_THRESHOLD_TBL_SIZE];
  74:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  75:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_noiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  76:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  77:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_negativeNoiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  78:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  79:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_hysteresis[CapSense_WIDGET_PARAM_TBL_SIZE];
  80:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  81:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_debounce[] = {
  82:Generated_Source\PSoC4/CapSense_CSHL.c ****     5u, 
  83:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  84:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  85:Generated_Source\PSoC4/CapSense_CSHL.c **** static uint8 CapSense_debounceCounter[] = {
  86:Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, 0u, 
  87:Generated_Source\PSoC4/CapSense_CSHL.c **** };
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 3


  88:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  89:Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_rawDataIndex[] = {
  90:Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, /* Button0__BTN */
  91:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  92:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  93:Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_numberOfSensors[] = {
  94:Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button0__BTN */
  95:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  96:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  97:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  98:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  99:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 100:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 101:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_BaseInit
 102:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 103:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 104:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 105:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an
 106:Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value.
 107:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Resets to zero CapSense_sensorBaselineLow[sensor] and
 108:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[sensor] array element.
 109:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_rawFilterData2[sensor] and
 110:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[sensor] array element with an
 111:Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value if the raw data filter is enabled.
 112:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 113:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 114:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 115:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 116:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 117:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 118:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 119:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 120:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store the baseline value.
 121:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store the fraction byte of
 122:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the baseline value.
 123:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store a difference between
 124:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and the previous value of the baseline.
 125:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store a previous sample of
 126:Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 127:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before a previous sample
 128:Generated_Source\PSoC4/CapSense_CSHL.c **** *  of the enabled raw data filter. Required only for median or average filters.
 129:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 130:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 131:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 132:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 133:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 134:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_BaseInit(uint32 sensor)
 135:Generated_Source\PSoC4/CapSense_CSHL.c **** {
  28              		.loc 1 135 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 30B5     		push	{r4, r5, lr}
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 4


  37              		.cfi_offset 14, -4
 136:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((CapSense_TOTAL_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || \
 137:Generated_Source\PSoC4/CapSense_CSHL.c ****          (CapSense_TOTAL_GENERICS_COUNT))
 138:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 widget = CapSense_widgetNumber[sensor];
  38              		.loc 1 138 0
  39 0002 094B     		ldr	r3, .L2
  40 0004 1B5C     		ldrb	r3, [r3, r0]
  41              	.LVL1:
 139:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* ((CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
 140:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 141:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)
 142:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 debounceIndex;
 143:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) */
 144:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 145:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 146:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 147:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 148:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 149:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 150:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 151:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline */
 152:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = CapSense_sensorRaw[sensor];
  42              		.loc 1 152 0
  43 0006 4200     		lsls	r2, r0, #1
  44 0008 0849     		ldr	r1, .L2+4
  45 000a 545A     		ldrh	r4, [r2, r1]
  46 000c 0849     		ldr	r1, .L2+8
  47 000e 5452     		strh	r4, [r2, r1]
 153:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaselineLow[sensor] = 0u;
  48              		.loc 1 153 0
  49 0010 0818     		adds	r0, r1, r0
  50              	.LVL2:
  51 0012 0025     		movs	r5, #0
  52 0014 0571     		strb	r5, [r0, #4]
 154:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = 0u;
  53              		.loc 1 154 0
  54 0016 0572     		strb	r5, [r0, #8]
 155:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 156:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_debounceCounter[widget] =  CapSense_debounce[widget];
  55              		.loc 1 156 0
  56 0018 0648     		ldr	r0, .L2+12
  57 001a C05C     		ldrb	r0, [r0, r3]
  58 001c CB18     		adds	r3, r1, r3
  59              	.LVL3:
  60 001e 1873     		strb	r0, [r3, #12]
 157:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 158:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 159:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) ||\
 160:Generated_Source\PSoC4/CapSense_CSHL.c ****          (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)))
 161:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 162:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 163:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_sensorRaw[sensor];
 164:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 165:Generated_Source\PSoC4/CapSense_CSHL.c ****     #elif ((CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) ||\
 166:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER) ||\
 167:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) ||\
 168:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER) ||\
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 5


 169:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
 170:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 171:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
  61              		.loc 1 171 0
  62 0020 054B     		ldr	r3, .L2+16
  63 0022 D452     		strh	r4, [r2, r3]
 172:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 173:Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 174:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* No Raw filters */
 175:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
 176:Generated_Source\PSoC4/CapSense_CSHL.c ****             *   (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 177:Generated_Source\PSoC4/CapSense_CSHL.c ****             */
 178:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 179:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 180:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 181:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 182:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 183:Generated_Source\PSoC4/CapSense_CSHL.c **** }
  64              		.loc 1 183 0
  65              		@ sp needed
  66 0024 30BD     		pop	{r4, r5, pc}
  67              	.L3:
  68 0026 C046     		.align	2
  69              	.L2:
  70 0028 00000000 		.word	CapSense_widgetNumber
  71 002c 00000000 		.word	CapSense_sensorRaw
  72 0030 00000000 		.word	.LANCHOR0
  73 0034 00000000 		.word	.LANCHOR1
  74 0038 00000000 		.word	CapSense_rawFilterData1
  75              		.cfi_endproc
  76              	.LFE32:
  77              		.size	CapSense_BaseInit, .-CapSense_BaseInit
  78              		.section	.text.CapSense_InitializeSensorBaseline,"ax",%progbits
  79              		.align	2
  80              		.global	CapSense_InitializeSensorBaseline
  81              		.code	16
  82              		.thumb_func
  83              		.type	CapSense_InitializeSensorBaseline, %function
  84              	CapSense_InitializeSensorBaseline:
  85              	.LFB33:
 184:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 185:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 186:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 187:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeSensorBaseline
 188:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 189:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 190:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 191:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an
 192:Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or a pair
 193:Generated_Source\PSoC4/CapSense_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the
 194:Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if
 195:Generated_Source\PSoC4/CapSense_CSHL.c **** *  enabled.
 196:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 197:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 198:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 199:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 200:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 6


 201:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 202:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 203:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 204:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 205:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 206:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 207:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 208:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 209:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 210:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeSensorBaseline(uint32 sensor)
 211:Generated_Source\PSoC4/CapSense_CSHL.c **** {
  86              		.loc 1 211 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90              	.LVL4:
  91 0000 10B5     		push	{r4, lr}
  92              		.cfi_def_cfa_offset 8
  93              		.cfi_offset 4, -8
  94              		.cfi_offset 14, -4
  95 0002 0400     		movs	r4, r0
 212:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Scan sensor */
 213:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanSensor(sensor);
  96              		.loc 1 213 0
  97 0004 FFF7FEFF 		bl	CapSense_ScanSensor
  98              	.LVL5:
  99              	.L5:
 214:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 100              		.loc 1 214 0 discriminator 1
 101 0008 FFF7FEFF 		bl	CapSense_IsBusy
 102              	.LVL6:
 103 000c 0028     		cmp	r0, #0
 104 000e FBD1     		bne	.L5
 215:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 216:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 217:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 218:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 219:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline, Signal and debounce counters */
 220:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_BaseInit(sensor);
 105              		.loc 1 220 0
 106 0010 2000     		movs	r0, r4
 107 0012 FFF7FEFF 		bl	CapSense_BaseInit
 108              	.LVL7:
 221:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 109              		.loc 1 221 0
 110              		@ sp needed
 111              	.LVL8:
 112 0016 10BD     		pop	{r4, pc}
 113              		.cfi_endproc
 114              	.LFE33:
 115              		.size	CapSense_InitializeSensorBaseline, .-CapSense_InitializeSensorBaseline
 116              		.section	.text.CapSense_InitializeAllBaselines,"ax",%progbits
 117              		.align	2
 118              		.global	CapSense_InitializeAllBaselines
 119              		.code	16
 120              		.thumb_func
 121              		.type	CapSense_InitializeAllBaselines, %function
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 7


 122              	CapSense_InitializeAllBaselines:
 123              	.LFB34:
 222:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 223:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 224:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 225:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeAllBaselines
 226:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 227:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 228:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 229:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Uses the CapSense_InitializeSensorBaseline function to load the
 230:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] array with an initial values by scanning
 231:Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw count values are copied into the baseline array for
 232:Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw data filters are initialized if enabled.
 233:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 234:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 235:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 236:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 237:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 238:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 239:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 240:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 241:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 242:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 243:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 244:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 245:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 246:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 247:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeAllBaselines(void)
 248:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 124              		.loc 1 248 0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128 0000 10B5     		push	{r4, lr}
 129              		.cfi_def_cfa_offset 8
 130              		.cfi_offset 4, -8
 131              		.cfi_offset 14, -4
 132              	.LVL9:
 249:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 250:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 251:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 133              		.loc 1 251 0
 134 0002 0024     		movs	r4, #0
 135 0004 03E0     		b	.L7
 136              	.LVL10:
 137              	.L8:
 252:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 253:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_InitializeSensorBaseline(i);
 138              		.loc 1 253 0 discriminator 3
 139 0006 2000     		movs	r0, r4
 140 0008 FFF7FEFF 		bl	CapSense_InitializeSensorBaseline
 141              	.LVL11:
 251:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 142              		.loc 1 251 0 discriminator 3
 143 000c 0134     		adds	r4, r4, #1
 144              	.LVL12:
 145              	.L7:
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 8


 251:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 146              		.loc 1 251 0 is_stmt 0 discriminator 1
 147 000e 002C     		cmp	r4, #0
 148 0010 F9D0     		beq	.L8
 254:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 255:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 149              		.loc 1 255 0 is_stmt 1
 150              		@ sp needed
 151              	.LVL13:
 152 0012 10BD     		pop	{r4, pc}
 153              		.cfi_endproc
 154              	.LFE34:
 155              		.size	CapSense_InitializeAllBaselines, .-CapSense_InitializeAllBaselines
 156              		.section	.text.CapSense_InitializeEnabledBaselines,"ax",%progbits
 157              		.align	2
 158              		.global	CapSense_InitializeEnabledBaselines
 159              		.code	16
 160              		.thumb_func
 161              		.type	CapSense_InitializeEnabledBaselines, %function
 162              	CapSense_InitializeEnabledBaselines:
 163              	.LFB35:
 256:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 257:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 258:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 259:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeEnabledBaselines
 260:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 261:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 262:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 263:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Scans all the enabled widgets and the raw count values are copied into the
 264:Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for all the sensors enabled in the scanning process. The baselines
 265:Generated_Source\PSoC4/CapSense_CSHL.c **** *  are initialized with zero values for sensors disabled from the scanning process.
 266:Generated_Source\PSoC4/CapSense_CSHL.c **** *  The raw data filters are initialized if enabled.
 267:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 268:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 269:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 270:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 271:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 272:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 273:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 274:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 275:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorRaw[] - used to store the sensors raw data.
 276:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[ ] - used to store bit masks of the enabled sensors.
 277:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 278:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 279:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 280:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 281:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 282:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeEnabledBaselines(void)
 283:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 164              		.loc 1 283 0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 0, uses_anonymous_args = 0
 168 0000 10B5     		push	{r4, lr}
 169              		.cfi_def_cfa_offset 8
 170              		.cfi_offset 4, -8
 171              		.cfi_offset 14, -4
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 9


 284:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 285:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 286:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 287:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanEnabledWidgets();
 172              		.loc 1 287 0
 173 0002 FFF7FEFF 		bl	CapSense_ScanEnabledWidgets
 174              	.LVL14:
 175              	.L10:
 288:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 176              		.loc 1 288 0 discriminator 1
 177 0006 FFF7FEFF 		bl	CapSense_IsBusy
 178              	.LVL15:
 179 000a 0028     		cmp	r0, #0
 180 000c FBD1     		bne	.L10
 181 000e 0024     		movs	r4, #0
 182 0010 09E0     		b	.L11
 183              	.LVL16:
 184              	.L13:
 289:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 290:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 291:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 292:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 293:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 294:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 295:Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 185              		.loc 1 295 0
 186 0012 2100     		movs	r1, r4
 187 0014 0548     		ldr	r0, .L14
 188 0016 FFF7FEFF 		bl	CapSense_GetBitValue
 189              	.LVL17:
 296:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 297:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 298:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(isSensorEnabled != 0u)
 190              		.loc 1 298 0
 191 001a 0028     		cmp	r0, #0
 192 001c 02D0     		beq	.L12
 299:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 300:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Initialize baselines */
 301:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(i);
 193              		.loc 1 301 0
 194 001e 2000     		movs	r0, r4
 195              	.LVL18:
 196 0020 FFF7FEFF 		bl	CapSense_BaseInit
 197              	.LVL19:
 198              	.L12:
 293:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 199              		.loc 1 293 0 discriminator 2
 200 0024 0134     		adds	r4, r4, #1
 201              	.LVL20:
 202              	.L11:
 293:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 203              		.loc 1 293 0 is_stmt 0 discriminator 1
 204 0026 002C     		cmp	r4, #0
 205 0028 F3D0     		beq	.L13
 302:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 303:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 304:Generated_Source\PSoC4/CapSense_CSHL.c **** }
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 10


 206              		.loc 1 304 0 is_stmt 1
 207              		@ sp needed
 208              	.LVL21:
 209 002a 10BD     		pop	{r4, pc}
 210              	.L15:
 211              		.align	2
 212              	.L14:
 213 002c 00000000 		.word	CapSense_sensorEnableMask
 214              		.cfi_endproc
 215              	.LFE35:
 216              		.size	CapSense_InitializeEnabledBaselines, .-CapSense_InitializeEnabledBaselines
 217              		.section	.text.CapSense_GetBaselineData,"ax",%progbits
 218              		.align	2
 219              		.global	CapSense_GetBaselineData
 220              		.code	16
 221              		.thumb_func
 222              		.type	CapSense_GetBaselineData, %function
 223              	CapSense_GetBaselineData:
 224              	.LFB40:
 305:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 306:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 307:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 308:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateBaselineNoThreshold
 309:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 310:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 311:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 312:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the
 313:Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 314:Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 315:Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor].
 316:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 317:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating; baseline is loaded
 318:Generated_Source\PSoC4/CapSense_CSHL.c **** *  with a raw count value if a signal is greater than zero and if signal is less
 319:Generated_Source\PSoC4/CapSense_CSHL.c **** *  than noise threshold.
 320:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 321:Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 322:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 323:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API does not update the thresholds in the Smartsense Mode.
 324:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 325:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 326:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 327:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 328:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 329:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 330:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 331:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 332:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 333:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store baseline value.
 334:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store fraction byte of
 335:Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline value.
 336:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store difference between
 337:Generated_Source\PSoC4/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 338:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of
 339:Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 340:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
 341:Generated_Source\PSoC4/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 342:Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 11


 343:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 344:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 345:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 346:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 347:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateBaselineNoThreshold(uint32 sensor)
 348:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 349:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 calc;
 350:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sign;
 351:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 tempRaw;
 352:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 filteredRawData;
 353:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 354:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 noiseThreshold;
 355:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 356:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 357:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 358:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 359:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 360:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 361:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 362:Generated_Source\PSoC4/CapSense_CSHL.c ****     noiseThreshold = CapSense_noiseThreshold[widget];
 363:Generated_Source\PSoC4/CapSense_CSHL.c ****     filteredRawData = CapSense_sensorRaw[sensor];
 364:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 365:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_RAW_FILTER_MASK != 0u)
 366:Generated_Source\PSoC4/CapSense_CSHL.c ****     if(CapSense_enableRawFilters != 0u)
 367:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 368:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)
 369:Generated_Source\PSoC4/CapSense_CSHL.c ****             tempRaw = filteredRawData;
 370:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_MedianFilter(filteredRawData, CapSense_rawFilterData1[sensor
 371:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                             CapSense_rawFilterData2[sensor]);
 372:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 373:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = tempRaw;
 374:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 375:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)
 376:Generated_Source\PSoC4/CapSense_CSHL.c ****             tempRaw = filteredRawData;
 377:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_AveragingFilter(filteredRawData, CapSense_rawFilterData1[sen
 378:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                CapSense_rawFilterData2[sensor]);
 379:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 380:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = tempRaw;
 381:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 382:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)
 383:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR2Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 384:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 385:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 386:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)
 387:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR4Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 388:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 389:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 390:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)
 391:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_JitterFilter(filteredRawData, CapSense_rawFilterData1[sensor
 392:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 393:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 394:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)
 395:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR8Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 396:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 397:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 398:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)
 399:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR16Filter(filteredRawData, CapSense_rawFilterData1[sensor]
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 12


 400:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 401:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 402:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 403:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No Raw filters */
 404:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) */
 405:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 406:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
 407:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 408:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 409:Generated_Source\PSoC4/CapSense_CSHL.c ****         MeasureNoiseEnvelope_P4_v2_60(&CapSense_config, (uint8)sensor, CapSense_sensorRaw);
 410:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 411:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 412:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Baseline calculation */
 413:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 414:Generated_Source\PSoC4/CapSense_CSHL.c ****     if(filteredRawData >= CapSense_sensorBaseline[sensor])
 415:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 416:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_lowBaselineResetCnt[sensor] = 0u;
 417:Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 418:Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 419:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 420:Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 421:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 422:Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = CapSense_sensorBaseline[sensor] - filteredRawData;
 423:Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 424:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 425:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 426:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 427:Generated_Source\PSoC4/CapSense_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_negativeNoiseThreshold[widget]))
 428:Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 429:Generated_Source\PSoC4/CapSense_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD))
 430:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 431:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 432:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_lowBaselineReset[sensor])
 433:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 434:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 435:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 436:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 437:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
 438:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 439:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor]++;
 440:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 441:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 442:Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 443:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 444:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 445:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 446:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 447:Generated_Source\PSoC4/CapSense_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 448:Generated_Source\PSoC4/CapSense_CSHL.c ****              ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 449:Generated_Source\PSoC4/CapSense_CSHL.c ****                && (sign == 0u)))
 450:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 451:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 452:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 453:Generated_Source\PSoC4/CapSense_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 454:Generated_Source\PSoC4/CapSense_CSHL.c ****                  ((tempRaw < (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD)
 455:Generated_Source\PSoC4/CapSense_CSHL.c ****                    && (sign == 0u)))
 456:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 13


 457:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 458:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 459:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make full Baseline 23 bits */
 460:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc = (uint32) CapSense_sensorBaseline[sensor] << 8u;
 461:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 462:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 463:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Add Raw Data to Baseline */
 464:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc += filteredRawData;
 465:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 466:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Sub the high Baseline */
 467:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc -= CapSense_sensorBaseline[sensor];
 468:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 469:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Put Baseline and BaselineLow */
 470:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 471:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 472:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 473:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_lowBaselineResetCnt[sensor] = 0u;
 474:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 475:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 476:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 477:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 478:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 479:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate Signal if positive difference > noiseThreshold */
 480:Generated_Source\PSoC4/CapSense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 481:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 482:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8)
 483:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Over flow defence for uint8 */
 484:Generated_Source\PSoC4/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 485:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 486:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = 0xFFu;
 487:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 488:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
 489:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 490:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = ((uint8) tempRaw);
 491:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 492:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 493:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_sensorSignal[sensor] = ((uint16) tempRaw);
 494:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8) */
 495:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 496:Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 497:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 498:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Signal is zero */
 499:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_sensorSignal[sensor] = 0u;
 500:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 501:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 502:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 503:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 504:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 505:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 506:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 507:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 508:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 509:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 510:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateSensorBaseline
 511:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 512:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 513:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 14


 514:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the
 515:Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 516:Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 517:Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor].
 518:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 519:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating.
 520:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Baseline is loaded with raw count value if a signal is greater than zero and
 521:Generated_Source\PSoC4/CapSense_CSHL.c **** *  if signal is less than noise threshold.
 522:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 523:Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 524:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API updates the thresholds in the Smartsense Mode.
 525:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 526:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 527:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 528:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 529:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 530:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 531:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 532:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 533:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 534:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 535:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 536:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 537:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 538:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 539:Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateSensorBaseline(uint32 sensor)
 540:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 541:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 542:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 widget;
 543:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 544:Generated_Source\PSoC4/CapSense_CSHL.c ****         widget = CapSense_widgetNumber[sensor];
 545:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 546:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 547:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 548:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 549:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 550:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 551:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 552:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_UpdateThresholds(sensor);
 553:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 554:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 555:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_UpdateBaselineNoThreshold(sensor);
 556:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 557:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 558:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 559:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 560:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 561:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 562:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 563:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 564:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 565:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateEnabledBaselines
 566:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 567:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 568:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 569:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the
 570:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 15


 571:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors.
 572:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 573:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 574:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 575:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 576:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 577:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 578:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 579:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 580:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
 581:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 582:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
 583:Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 584:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
 585:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 586:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 587:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 588:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 589:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 590:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 591:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 592:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 593:Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateEnabledBaselines(void)
 594:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 595:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 596:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 597:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 598:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 599:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 600:Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 601:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 602:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 603:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 604:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 605:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 606:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 607:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 608:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 609:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 610:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateWidgetBaseline
 611:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 612:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 613:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 614:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the
 615:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines
 616:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors that belong to widget.
 617:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 618:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 619:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  Widget number.
 620:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 621:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 622:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 623:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 624:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 625:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
 626:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 627:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 16


 628:Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 629:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
 630:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 631:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 632:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 633:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 634:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 635:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 636:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 637:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 638:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateWidgetBaseline(uint32 widget)
 639:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 640:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sensorsPerWidget;
 641:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 firstSensor;
 642:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 lastSensor;
 643:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 644:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 645:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 646:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get number of sensors in widget */
 647:Generated_Source\PSoC4/CapSense_CSHL.c ****     sensorsPerWidget = CapSense_numberOfSensors[widget];
 648:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 649:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get first sensor in widget */
 650:Generated_Source\PSoC4/CapSense_CSHL.c ****     firstSensor = CapSense_rawDataIndex[widget];
 651:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 652:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get last sensor in widget */
 653:Generated_Source\PSoC4/CapSense_CSHL.c ****     lastSensor = (CapSense_rawDataIndex[widget] + sensorsPerWidget);
 654:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 655:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 656:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 657:Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 658:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 659:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 660:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 661:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 662:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 663:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 664:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 665:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 666:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 667:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 668:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetBaselineData
 669:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 670:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 671:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 672:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the sensor baseline from the component.
 673:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 674:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 675:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 676:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 677:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 678:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the baseline value of the sensor indicated by an argument.
 679:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 680:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 681:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with an initial values by scanning
 682:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 683:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 684:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 17


 685:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 686:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 687:Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_GetBaselineData(uint32 sensor)
 688:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 225              		.loc 1 688 0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 0
 228              		@ frame_needed = 0, uses_anonymous_args = 0
 229              		@ link register save eliminated.
 230              	.LVL22:
 689:Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_sensorBaseline[sensor]);
 231              		.loc 1 689 0
 232 0000 4000     		lsls	r0, r0, #1
 233              	.LVL23:
 234 0002 014B     		ldr	r3, .L17
 235 0004 185A     		ldrh	r0, [r3, r0]
 690:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 236              		.loc 1 690 0
 237              		@ sp needed
 238 0006 7047     		bx	lr
 239              	.L18:
 240              		.align	2
 241              	.L17:
 242 0008 00000000 		.word	.LANCHOR0
 243              		.cfi_endproc
 244              	.LFE40:
 245              		.size	CapSense_GetBaselineData, .-CapSense_GetBaselineData
 246              		.section	.text.CapSense_SetBaselineData,"ax",%progbits
 247              		.align	2
 248              		.global	CapSense_SetBaselineData
 249              		.code	16
 250              		.thumb_func
 251              		.type	CapSense_SetBaselineData, %function
 252              	CapSense_SetBaselineData:
 253              	.LFB41:
 691:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 692:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 693:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 694:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetBaselineData
 695:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 696:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 697:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 698:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor baseline array.
 699:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 700:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 701:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 702:Generated_Source\PSoC4/CapSense_CSHL.c **** *  data:    Sensor baseline.
 703:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 704:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 705:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 706:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 707:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 708:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with initial values by scanning
 709:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 710:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 711:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 712:Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 18


 713:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 714:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetBaselineData(uint32 sensor, uint16 data)
 715:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 254              		.loc 1 715 0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              		@ link register save eliminated.
 259              	.LVL24:
 716:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = data;
 260              		.loc 1 716 0
 261 0000 4000     		lsls	r0, r0, #1
 262              	.LVL25:
 263 0002 014B     		ldr	r3, .L20
 264 0004 C152     		strh	r1, [r0, r3]
 717:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 265              		.loc 1 717 0
 266              		@ sp needed
 267 0006 7047     		bx	lr
 268              	.L21:
 269              		.align	2
 270              	.L20:
 271 0008 00000000 		.word	.LANCHOR0
 272              		.cfi_endproc
 273              	.LFE41:
 274              		.size	CapSense_SetBaselineData, .-CapSense_SetBaselineData
 275              		.section	.text.CapSense_GetDiffCountData,"ax",%progbits
 276              		.align	2
 277              		.global	CapSense_GetDiffCountData
 278              		.code	16
 279              		.thumb_func
 280              		.type	CapSense_GetDiffCountData, %function
 281              	CapSense_GetDiffCountData:
 282              	.LFB42:
 718:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 719:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 720:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 721:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDiffCountData
 722:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 723:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 724:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 725:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function returns the Sensor Signal from the component.
 726:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 727:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 728:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 729:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 730:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 731:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the difference count value of the sensor indicated by the
 732:Generated_Source\PSoC4/CapSense_CSHL.c **** *  argument.
 733:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 734:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 735:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 736:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 737:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 738:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 739:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 740:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 19


 741:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDiffCountData(uint32 sensor)
 742:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 283              		.loc 1 742 0
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 0
 286              		@ frame_needed = 0, uses_anonymous_args = 0
 287              		@ link register save eliminated.
 288              	.LVL26:
 743:Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_sensorSignal[sensor]);
 289              		.loc 1 743 0
 290 0000 014B     		ldr	r3, .L23
 291 0002 1818     		adds	r0, r3, r0
 292              	.LVL27:
 293 0004 007A     		ldrb	r0, [r0, #8]
 744:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 294              		.loc 1 744 0
 295              		@ sp needed
 296 0006 7047     		bx	lr
 297              	.L24:
 298              		.align	2
 299              	.L23:
 300 0008 00000000 		.word	.LANCHOR0
 301              		.cfi_endproc
 302              	.LFE42:
 303              		.size	CapSense_GetDiffCountData, .-CapSense_GetDiffCountData
 304              		.section	.text.CapSense_SetDiffCountData,"ax",%progbits
 305              		.align	2
 306              		.global	CapSense_SetDiffCountData
 307              		.code	16
 308              		.thumb_func
 309              		.type	CapSense_SetDiffCountData, %function
 310              	CapSense_SetDiffCountData:
 311              	.LFB43:
 745:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 746:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 747:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 748:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetDiffCountData
 749:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 750:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 751:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 752:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor signal array.
 753:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 754:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 755:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 756:Generated_Source\PSoC4/CapSense_CSHL.c **** *  value:   Sensor signal.
 757:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 758:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 759:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 760:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 761:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 762:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 763:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 764:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 765:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 766:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 767:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 768:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetDiffCountData(uint32 sensor, uint8 value)
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 20


 769:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 312              		.loc 1 769 0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 0, uses_anonymous_args = 0
 316              		@ link register save eliminated.
 317              	.LVL28:
 770:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = value;
 318              		.loc 1 770 0
 319 0000 014B     		ldr	r3, .L26
 320 0002 1818     		adds	r0, r3, r0
 321              	.LVL29:
 322 0004 0172     		strb	r1, [r0, #8]
 771:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 323              		.loc 1 771 0
 324              		@ sp needed
 325 0006 7047     		bx	lr
 326              	.L27:
 327              		.align	2
 328              	.L26:
 329 0008 00000000 		.word	.LANCHOR0
 330              		.cfi_endproc
 331              	.LFE43:
 332              		.size	CapSense_SetDiffCountData, .-CapSense_SetDiffCountData
 333              		.section	.text.CapSense_GetFingerThreshold,"ax",%progbits
 334              		.align	2
 335              		.global	CapSense_GetFingerThreshold
 336              		.code	16
 337              		.thumb_func
 338              		.type	CapSense_GetFingerThreshold, %function
 339              	CapSense_GetFingerThreshold:
 340              	.LFB44:
 772:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 773:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 774:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 775:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerThreshold
 776:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 777:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 778:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 779:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the finger threshold from the component.
 780:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 781:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 782:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 783:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 784:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 785:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the finger threshold of the widget indicated by the argument.
 786:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 787:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 788:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_fingerThreshold[] - This array contains the level of signal
 789:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that is determined if a finger is present on the widget.
 790:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 791:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 792:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 793:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 794:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 795:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerThreshold(uint32 widget)
 796:Generated_Source\PSoC4/CapSense_CSHL.c **** {
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 21


 341              		.loc 1 796 0
 342              		.cfi_startproc
 343              		@ args = 0, pretend = 0, frame = 0
 344              		@ frame_needed = 0, uses_anonymous_args = 0
 345              		@ link register save eliminated.
 346              	.LVL30:
 797:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_fingerThreshold[widget]);
 347              		.loc 1 797 0
 348 0000 014B     		ldr	r3, .L29
 349 0002 185C     		ldrb	r0, [r3, r0]
 350              	.LVL31:
 798:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 351              		.loc 1 798 0
 352              		@ sp needed
 353 0004 7047     		bx	lr
 354              	.L30:
 355 0006 C046     		.align	2
 356              	.L29:
 357 0008 00000000 		.word	CapSense_fingerThreshold
 358              		.cfi_endproc
 359              	.LFE44:
 360              		.size	CapSense_GetFingerThreshold, .-CapSense_GetFingerThreshold
 361              		.section	.text.CapSense_GetNoiseThreshold,"ax",%progbits
 362              		.align	2
 363              		.global	CapSense_GetNoiseThreshold
 364              		.code	16
 365              		.thumb_func
 366              		.type	CapSense_GetNoiseThreshold, %function
 367              	CapSense_GetNoiseThreshold:
 368              	.LFB45:
 799:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 800:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 801:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 802:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNoiseThreshold
 803:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 804:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 805:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 806:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the noise threshold from the component.
 807:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 808:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 809:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 810:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 811:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 812:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the noise threshold of the widget indicated by the argument.
 813:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 814:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 815:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_noiseThreshold[] - This array contains the level of signal
 816:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that determines the level of noise in the capacitive scan.
 817:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 818:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 819:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 820:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 821:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 822:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNoiseThreshold(uint32 widget)
 823:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 369              		.loc 1 823 0
 370              		.cfi_startproc
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 22


 371              		@ args = 0, pretend = 0, frame = 0
 372              		@ frame_needed = 0, uses_anonymous_args = 0
 373              		@ link register save eliminated.
 374              	.LVL32:
 824:Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_noiseThreshold[widget]);
 375              		.loc 1 824 0
 376 0000 014B     		ldr	r3, .L32
 377 0002 185C     		ldrb	r0, [r3, r0]
 378              	.LVL33:
 825:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 379              		.loc 1 825 0
 380              		@ sp needed
 381 0004 7047     		bx	lr
 382              	.L33:
 383 0006 C046     		.align	2
 384              	.L32:
 385 0008 00000000 		.word	CapSense_noiseThreshold
 386              		.cfi_endproc
 387              	.LFE45:
 388              		.size	CapSense_GetNoiseThreshold, .-CapSense_GetNoiseThreshold
 389              		.section	.text.CapSense_GetFingerHysteresis,"ax",%progbits
 390              		.align	2
 391              		.global	CapSense_GetFingerHysteresis
 392              		.code	16
 393              		.thumb_func
 394              		.type	CapSense_GetFingerHysteresis, %function
 395              	CapSense_GetFingerHysteresis:
 396              	.LFB46:
 826:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 827:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 828:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 829:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerHysteresis
 830:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 831:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 832:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 833:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the Hysteresis value from the component.
 834:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 835:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 836:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 837:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 838:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 839:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the Hysteresis of the widget indicated by the argument.
 840:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 841:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 842:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_hysteresis[] - This array contains the hysteresis value
 843:Generated_Source\PSoC4/CapSense_CSHL.c **** *   for each widget.
 844:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 845:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 846:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 847:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 848:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 849:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 850:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerHysteresis(uint32 widget)
 851:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 397              		.loc 1 851 0
 398              		.cfi_startproc
 399              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 23


 400              		@ frame_needed = 0, uses_anonymous_args = 0
 401              		@ link register save eliminated.
 402              	.LVL34:
 852:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_hysteresis[widget]);
 403              		.loc 1 852 0
 404 0000 014B     		ldr	r3, .L35
 405 0002 185C     		ldrb	r0, [r3, r0]
 406              	.LVL35:
 853:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 407              		.loc 1 853 0
 408              		@ sp needed
 409 0004 7047     		bx	lr
 410              	.L36:
 411 0006 C046     		.align	2
 412              	.L35:
 413 0008 00000000 		.word	CapSense_hysteresis
 414              		.cfi_endproc
 415              	.LFE46:
 416              		.size	CapSense_GetFingerHysteresis, .-CapSense_GetFingerHysteresis
 417              		.section	.text.CapSense_GetNegativeNoiseThreshold,"ax",%progbits
 418              		.align	2
 419              		.global	CapSense_GetNegativeNoiseThreshold
 420              		.code	16
 421              		.thumb_func
 422              		.type	CapSense_GetNegativeNoiseThreshold, %function
 423              	CapSense_GetNegativeNoiseThreshold:
 424              	.LFB47:
 854:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 855:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 856:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 857:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNegativeNoiseThreshold
 858:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 859:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 860:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 861:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the negative noise threshold from the component.
 862:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 863:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 864:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 865:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 866:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return Value:
 867:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the negative noise threshold
 868:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 869:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 870:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_negativeNoiseThreshold - This variable specifies the negative
 871:Generated_Source\PSoC4/CapSense_CSHL.c **** *   difference between the raw count and baseline levels for Baseline resetting
 872:Generated_Source\PSoC4/CapSense_CSHL.c **** *   to the raw count level.
 873:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 874:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 875:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 876:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 877:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 878:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNegativeNoiseThreshold(uint32 widget)
 879:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 425              		.loc 1 879 0
 426              		.cfi_startproc
 427              		@ args = 0, pretend = 0, frame = 0
 428              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 24


 429              		@ link register save eliminated.
 430              	.LVL36:
 880:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 881:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_negativeNoiseThreshold[widget]);
 431              		.loc 1 881 0
 432 0000 014B     		ldr	r3, .L38
 433 0002 185C     		ldrb	r0, [r3, r0]
 434              	.LVL37:
 882:Generated_Source\PSoC4/CapSense_CSHL.c **** #else
 883:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_NEGATIVE_NOISE_THRESHOLD);
 884:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 885:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 435              		.loc 1 885 0
 436              		@ sp needed
 437 0004 7047     		bx	lr
 438              	.L39:
 439 0006 C046     		.align	2
 440              	.L38:
 441 0008 00000000 		.word	CapSense_negativeNoiseThreshold
 442              		.cfi_endproc
 443              	.LFE47:
 444              		.size	CapSense_GetNegativeNoiseThreshold, .-CapSense_GetNegativeNoiseThreshold
 445              		.section	.text.CapSense_SetFingerThreshold,"ax",%progbits
 446              		.align	2
 447              		.global	CapSense_SetFingerThreshold
 448              		.code	16
 449              		.thumb_func
 450              		.type	CapSense_SetFingerThreshold, %function
 451              	CapSense_SetFingerThreshold:
 452              	.LFB48:
 886:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 887:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 888:Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 889:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 890:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetFingerThreshold
 891:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 892:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 893:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 894:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the finger threshold value for a widget.
 895:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 896:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 897:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensorNumber:  widget index.
 898:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Finger threshold value for the widget.
 899:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 900:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 901:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 902:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 903:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 904:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_fingerThreshold[] - This array contains the level of signal
 905:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   for each widget that determines if a finger is present on the widget.
 906:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 907:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 908:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 909:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 910:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 911:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetFingerThreshold(uint32 widget, uint8 value)
 912:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 25


 453              		.loc 1 912 0
 454              		.cfi_startproc
 455              		@ args = 0, pretend = 0, frame = 0
 456              		@ frame_needed = 0, uses_anonymous_args = 0
 457              		@ link register save eliminated.
 458              	.LVL38:
 913:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_fingerThreshold[widget] = value;
 459              		.loc 1 913 0
 460 0000 014B     		ldr	r3, .L41
 461 0002 1954     		strb	r1, [r3, r0]
 914:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 462              		.loc 1 914 0
 463              		@ sp needed
 464 0004 7047     		bx	lr
 465              	.L42:
 466 0006 C046     		.align	2
 467              	.L41:
 468 0008 00000000 		.word	CapSense_fingerThreshold
 469              		.cfi_endproc
 470              	.LFE48:
 471              		.size	CapSense_SetFingerThreshold, .-CapSense_SetFingerThreshold
 472              		.section	.text.CapSense_SetNoiseThreshold,"ax",%progbits
 473              		.align	2
 474              		.global	CapSense_SetNoiseThreshold
 475              		.code	16
 476              		.thumb_func
 477              		.type	CapSense_SetNoiseThreshold, %function
 478              	CapSense_SetNoiseThreshold:
 479              	.LFB49:
 915:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 916:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 917:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 918:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetNoiseThreshold
 919:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 920:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 921:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 922:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Noise Threshold value for each widget.
 923:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 924:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 925:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Sensor index number.
 926:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:   Noise Threshold value for widget.
 927:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 928:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 929:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 930:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 931:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 932:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_noiseThreshold[] - This array contains the level of signal
 933:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   for each widget that determines the level of noise in the capacitive scan.
 934:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 935:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 936:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 937:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 938:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 939:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetNoiseThreshold(uint32 widget, uint8 value)
 940:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 480              		.loc 1 940 0
 481              		.cfi_startproc
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 26


 482              		@ args = 0, pretend = 0, frame = 0
 483              		@ frame_needed = 0, uses_anonymous_args = 0
 484              		@ link register save eliminated.
 485              	.LVL39:
 941:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_noiseThreshold[widget] = value;
 486              		.loc 1 941 0
 487 0000 014B     		ldr	r3, .L44
 488 0002 1954     		strb	r1, [r3, r0]
 942:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 489              		.loc 1 942 0
 490              		@ sp needed
 491 0004 7047     		bx	lr
 492              	.L45:
 493 0006 C046     		.align	2
 494              	.L44:
 495 0008 00000000 		.word	CapSense_noiseThreshold
 496              		.cfi_endproc
 497              	.LFE49:
 498              		.size	CapSense_SetNoiseThreshold, .-CapSense_SetNoiseThreshold
 499              		.section	.text.CapSense_SetFingerHysteresis,"ax",%progbits
 500              		.align	2
 501              		.global	CapSense_SetFingerHysteresis
 502              		.code	16
 503              		.thumb_func
 504              		.type	CapSense_SetFingerHysteresis, %function
 505              	CapSense_SetFingerHysteresis:
 506              	.LFB50:
 943:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 944:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 945:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 946:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetFingerHysteresis
 947:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 948:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 949:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 950:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Hysteresis value of a widget
 951:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 952:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 953:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Hysteresis value for widgets.
 954:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number
 955:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 956:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 957:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 958:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 959:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 960:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_hysteresis[] - This array contains the hysteresis value for each widget.
 961:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 962:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 963:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 964:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 965:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 966:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 967:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetFingerHysteresis(uint32 widget, uint8 value)
 968:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 507              		.loc 1 968 0
 508              		.cfi_startproc
 509              		@ args = 0, pretend = 0, frame = 0
 510              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 27


 511              		@ link register save eliminated.
 512              	.LVL40:
 969:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_hysteresis[widget] = value;
 513              		.loc 1 969 0
 514 0000 014B     		ldr	r3, .L47
 515 0002 1954     		strb	r1, [r3, r0]
 970:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 516              		.loc 1 970 0
 517              		@ sp needed
 518 0004 7047     		bx	lr
 519              	.L48:
 520 0006 C046     		.align	2
 521              	.L47:
 522 0008 00000000 		.word	CapSense_hysteresis
 523              		.cfi_endproc
 524              	.LFE50:
 525              		.size	CapSense_SetFingerHysteresis, .-CapSense_SetFingerHysteresis
 526              		.section	.text.CapSense_SetNegativeNoiseThreshold,"ax",%progbits
 527              		.align	2
 528              		.global	CapSense_SetNegativeNoiseThreshold
 529              		.code	16
 530              		.thumb_func
 531              		.type	CapSense_SetNegativeNoiseThreshold, %function
 532              	CapSense_SetNegativeNoiseThreshold:
 533              	.LFB51:
 971:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 972:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 973:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 974:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetNegativeNoiseThreshold
 975:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 976:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 977:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 978:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Negative Noise Threshold value of a widget
 979:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 980:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 981:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Negative Noise Threshold value for widgets.
 982:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget: widget number
 983:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 984:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 985:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 986:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 987:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 988:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_negativeNoiseThreshold  - This parameter specifies the negative
 989:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   difference between the raw count and baseline levels for Baseline resetting to
 990:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   the raw count level.
 991:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 992:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 993:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 994:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 995:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 996:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetNegativeNoiseThreshold(uint32 widget, uint8 value)
 997:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 534              		.loc 1 997 0
 535              		.cfi_startproc
 536              		@ args = 0, pretend = 0, frame = 0
 537              		@ frame_needed = 0, uses_anonymous_args = 0
 538              		@ link register save eliminated.
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 28


 539              	.LVL41:
 998:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_negativeNoiseThreshold[widget] = value;
 540              		.loc 1 998 0
 541 0000 014B     		ldr	r3, .L50
 542 0002 1954     		strb	r1, [r3, r0]
 999:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 543              		.loc 1 999 0
 544              		@ sp needed
 545 0004 7047     		bx	lr
 546              	.L51:
 547 0006 C046     		.align	2
 548              	.L50:
 549 0008 00000000 		.word	CapSense_negativeNoiseThreshold
 550              		.cfi_endproc
 551              	.LFE51:
 552              		.size	CapSense_SetNegativeNoiseThreshold, .-CapSense_SetNegativeNoiseThreshold
 553              		.section	.text.CapSense_SetDebounce,"ax",%progbits
 554              		.align	2
 555              		.global	CapSense_SetDebounce
 556              		.code	16
 557              		.thumb_func
 558              		.type	CapSense_SetDebounce, %function
 559              	CapSense_SetDebounce:
 560              	.LFB52:
1000:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1001:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1002:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1003:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetDebounce
1004:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1005:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1006:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1007:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the debounce value for a widget.
1008:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1009:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1010:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Debounce value for widget.
1011:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget: widget index.
1012:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1013:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
1014:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1015:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1016:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1017:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_debounce[] - This array contains the debounce value for each widget.
1018:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
1019:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1020:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1021:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1022:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1023:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1024:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetDebounce(uint32 widget, uint8 value)
1025:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 561              		.loc 1 1025 0
 562              		.cfi_startproc
 563              		@ args = 0, pretend = 0, frame = 0
 564              		@ frame_needed = 0, uses_anonymous_args = 0
 565              		@ link register save eliminated.
 566              	.LVL42:
1026:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_debounce[widget] = value;
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 29


 567              		.loc 1 1026 0
 568 0000 014B     		ldr	r3, .L53
 569 0002 1954     		strb	r1, [r3, r0]
1027:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 570              		.loc 1 1027 0
 571              		@ sp needed
 572 0004 7047     		bx	lr
 573              	.L54:
 574 0006 C046     		.align	2
 575              	.L53:
 576 0008 00000000 		.word	.LANCHOR1
 577              		.cfi_endproc
 578              	.LFE52:
 579              		.size	CapSense_SetDebounce, .-CapSense_SetDebounce
 580              		.section	.text.CapSense_SetLowBaselineReset,"ax",%progbits
 581              		.align	2
 582              		.global	CapSense_SetLowBaselineReset
 583              		.code	16
 584              		.thumb_func
 585              		.type	CapSense_SetLowBaselineReset, %function
 586              	CapSense_SetLowBaselineReset:
 587              	.LFB53:
1028:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1029:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1030:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1031:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetLowBaselineReset
1032:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1033:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1034:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1035:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the low baseline reset threshold value for the sensor.
1036:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1037:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1038:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value: low baseline reset threshold value.
1039:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensor: Sensor index.
1040:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1041:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
1042:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1043:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1044:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1045:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_lowBaselineReset[] - This array contains the Baseline update
1046:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold value for each sensor.
1047:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1048:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1049:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1050:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1051:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1052:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetLowBaselineReset(uint32 sensor, uint8 value)
1053:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 588              		.loc 1 1053 0
 589              		.cfi_startproc
 590              		@ args = 0, pretend = 0, frame = 0
 591              		@ frame_needed = 0, uses_anonymous_args = 0
 592              		@ link register save eliminated.
 593              	.LVL43:
1054:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_lowBaselineReset[sensor] = value;
 594              		.loc 1 1054 0
 595 0000 014B     		ldr	r3, .L56
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 30


 596 0002 1818     		adds	r0, r3, r0
 597              	.LVL44:
 598 0004 0171     		strb	r1, [r0, #4]
1055:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 599              		.loc 1 1055 0
 600              		@ sp needed
 601 0006 7047     		bx	lr
 602              	.L57:
 603              		.align	2
 604              	.L56:
 605 0008 00000000 		.word	.LANCHOR1
 606              		.cfi_endproc
 607              	.LFE53:
 608              		.size	CapSense_SetLowBaselineReset, .-CapSense_SetLowBaselineReset
 609              		.section	.text.CapSense_CheckIsSensorActive,"ax",%progbits
 610              		.align	2
 611              		.global	CapSense_CheckIsSensorActive
 612              		.code	16
 613              		.thumb_func
 614              		.type	CapSense_CheckIsSensorActive, %function
 615              	CapSense_CheckIsSensorActive:
 616              	.LFB54:
1056:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
1057:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1058:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1059:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1060:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsSensorActive
1061:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1062:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1063:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1064:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[sensor] array element to the finger
1065:Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold of the widget it belongs to. The hysteresis and debounce are taken into
1066:Generated_Source\PSoC4/CapSense_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold
1067:Generated_Source\PSoC4/CapSense_CSHL.c **** *  based on whether the sensor is currently active.
1068:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
1069:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
1070:Generated_Source\PSoC4/CapSense_CSHL.c **** *  The debounce counter is added to the sensor active transition.
1071:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function updates the CapSense_sensorOnMask[] array element.
1072:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1073:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1074:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
1075:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1076:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1077:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
1078:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1079:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1080:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - used to store the difference between
1081:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and a previous value of the baseline.
1082:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store the current debounce
1083:Generated_Source\PSoC4/CapSense_CSHL.c **** *  counter of the sensor. the widget which have this parameter are buttons, matrix
1084:Generated_Source\PSoC4/CapSense_CSHL.c **** *  buttons, proximity, and guard. All other widgets don't have the  debounce parameter
1085:Generated_Source\PSoC4/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
1086:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[] - used to store the sensors on/off state.
1087:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[0] contains the masked bits for sensors
1088:Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1089:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1090:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 31


1091:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor is inactive.
1092:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is active.
1093:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1094:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1095:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1096:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1097:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1098:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsSensorActive(uint32 sensor)
1099:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 617              		.loc 1 1099 0
 618              		.cfi_startproc
 619              		@ args = 0, pretend = 0, frame = 0
 620              		@ frame_needed = 0, uses_anonymous_args = 0
 621              	.LVL45:
 622 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 623              		.cfi_def_cfa_offset 20
 624              		.cfi_offset 4, -20
 625              		.cfi_offset 5, -16
 626              		.cfi_offset 6, -12
 627              		.cfi_offset 7, -8
 628              		.cfi_offset 14, -4
 629 0002 4746     		mov	r7, r8
 630 0004 80B4     		push	{r7}
 631              		.cfi_def_cfa_offset 24
 632              		.cfi_offset 8, -24
 633 0006 0400     		movs	r4, r0
1100:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget;
1101:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 debounce;
1102:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 debounceIndex;
1103:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1104:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 fingerThreshold;
1105:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 hysteresis;
1106:Generated_Source\PSoC4/CapSense_CSHL.c ****     
1107:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1108:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Prepare to find debounce counter index */
1109:Generated_Source\PSoC4/CapSense_CSHL.c ****     widget = CapSense_widgetNumber[sensor];
 634              		.loc 1 1109 0
 635 0008 224B     		ldr	r3, .L63
 636 000a 1D5C     		ldrb	r5, [r3, r0]
1110:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1111:Generated_Source\PSoC4/CapSense_CSHL.c ****     fingerThreshold = CapSense_fingerThreshold[widget];
 637              		.loc 1 1111 0
 638 000c 224B     		ldr	r3, .L63+4
 639 000e 5F5D     		ldrb	r7, [r3, r5]
 640              	.LVL46:
1112:Generated_Source\PSoC4/CapSense_CSHL.c ****     hysteresis = CapSense_hysteresis[widget];
 641              		.loc 1 1112 0
 642 0010 224B     		ldr	r3, .L63+8
 643 0012 5E5D     		ldrb	r6, [r3, r5]
 644              	.LVL47:
1113:Generated_Source\PSoC4/CapSense_CSHL.c ****     debounce = CapSense_debounce[widget];
 645              		.loc 1 1113 0
 646 0014 224B     		ldr	r3, .L63+12
 647 0016 5B5D     		ldrb	r3, [r3, r5]
 648 0018 9846     		mov	r8, r3
 649              	.LVL48:
1114:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 32


1115:Generated_Source\PSoC4/CapSense_CSHL.c ****         debounceIndex = widget;
1116:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1117:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1118:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Was on */
1119:Generated_Source\PSoC4/CapSense_CSHL.c ****     if (0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor))
 650              		.loc 1 1119 0
 651 001a 0100     		movs	r1, r0
 652 001c 2148     		ldr	r0, .L63+16
 653              	.LVL49:
 654 001e 1030     		adds	r0, r0, #16
 655 0020 FFF7FEFF 		bl	CapSense_GetBitValue
 656              	.LVL50:
 657 0024 0028     		cmp	r0, #0
 658 0026 10D0     		beq	.L59
1120:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1121:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis minus */
1122:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 659              		.loc 1 1122 0
 660 0028 1E4B     		ldr	r3, .L63+16
 661 002a 1B19     		adds	r3, r3, r4
 662 002c 1B7A     		ldrb	r3, [r3, #8]
 663 002e BE1B     		subs	r6, r7, r6
 664              	.LVL51:
 665 0030 B342     		cmp	r3, r6
 666 0032 23DA     		bge	.L60
1123:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1124:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 0u);
 667              		.loc 1 1124 0
 668 0034 1B4E     		ldr	r6, .L63+16
 669 0036 3000     		movs	r0, r6
 670 0038 1030     		adds	r0, r0, #16
 671 003a 0022     		movs	r2, #0
 672 003c 2100     		movs	r1, r4
 673 003e FFF7FEFF 		bl	CapSense_SetBitValue
 674              	.LVL52:
1125:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1126:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 675              		.loc 1 1126 0
 676 0042 7519     		adds	r5, r6, r5
 677 0044 4346     		mov	r3, r8
 678 0046 2B73     		strb	r3, [r5, #12]
 679 0048 18E0     		b	.L60
 680              	.LVL53:
 681              	.L59:
1127:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1128:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1129:Generated_Source\PSoC4/CapSense_CSHL.c ****     else    /* Was off */
1130:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1131:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis plus */
1132:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] >= (fingerThreshold + hysteresis))
 682              		.loc 1 1132 0
 683 004a 164B     		ldr	r3, .L63+16
 684 004c 1B19     		adds	r3, r3, r4
 685 004e 1B7A     		ldrb	r3, [r3, #8]
 686 0050 BE19     		adds	r6, r7, r6
 687              	.LVL54:
 688 0052 B342     		cmp	r3, r6
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 33


 689 0054 0EDB     		blt	.L61
1133:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1134:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex]--;
 690              		.loc 1 1134 0
 691 0056 134B     		ldr	r3, .L63+16
 692 0058 5D19     		adds	r5, r3, r5
 693 005a 2B7B     		ldrb	r3, [r5, #12]
 694 005c 013B     		subs	r3, r3, #1
 695 005e DBB2     		uxtb	r3, r3
 696 0060 2B73     		strb	r3, [r5, #12]
1135:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor active, decrement debounce counter */
1136:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(CapSense_debounceCounter[debounceIndex] == 0u)
 697              		.loc 1 1136 0
 698 0062 002B     		cmp	r3, #0
 699 0064 0AD1     		bne	.L60
1137:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1138:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 1u);
 700              		.loc 1 1138 0
 701 0066 0122     		movs	r2, #1
 702 0068 2100     		movs	r1, r4
 703 006a 0E48     		ldr	r0, .L63+16
 704 006c 1030     		adds	r0, r0, #16
 705 006e FFF7FEFF 		bl	CapSense_SetBitValue
 706              	.LVL55:
 707 0072 03E0     		b	.L60
 708              	.L61:
1139:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1140:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1141:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1142:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1143:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1144:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 709              		.loc 1 1144 0
 710 0074 0B4B     		ldr	r3, .L63+16
 711 0076 5D19     		adds	r5, r3, r5
 712 0078 4346     		mov	r3, r8
 713 007a 2B73     		strb	r3, [r5, #12]
 714              	.L60:
1145:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1146:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1147:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1148:Generated_Source\PSoC4/CapSense_CSHL.c ****     return ((uint32)((0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor)) ? 1u : 0u));
 715              		.loc 1 1148 0
 716 007c 2100     		movs	r1, r4
 717 007e 0948     		ldr	r0, .L63+16
 718 0080 1030     		adds	r0, r0, #16
 719 0082 FFF7FEFF 		bl	CapSense_GetBitValue
 720              	.LVL56:
 721 0086 0028     		cmp	r0, #0
 722 0088 00D0     		beq	.L62
 723 008a 0120     		movs	r0, #1
 724              	.L62:
1149:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 725              		.loc 1 1149 0 discriminator 4
 726              		@ sp needed
 727              	.LVL57:
 728              	.LVL58:
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 34


 729              	.LVL59:
 730 008c 04BC     		pop	{r2}
 731 008e 9046     		mov	r8, r2
 732 0090 F0BD     		pop	{r4, r5, r6, r7, pc}
 733              	.L64:
 734 0092 C046     		.align	2
 735              	.L63:
 736 0094 00000000 		.word	CapSense_widgetNumber
 737 0098 00000000 		.word	CapSense_fingerThreshold
 738 009c 00000000 		.word	CapSense_hysteresis
 739 00a0 00000000 		.word	.LANCHOR1
 740 00a4 00000000 		.word	.LANCHOR0
 741              		.cfi_endproc
 742              	.LFE54:
 743              		.size	CapSense_CheckIsSensorActive, .-CapSense_CheckIsSensorActive
 744              		.section	.text.CapSense_CheckIsWidgetActive,"ax",%progbits
 745              		.align	2
 746              		.global	CapSense_CheckIsWidgetActive
 747              		.code	16
 748              		.thumb_func
 749              		.type	CapSense_CheckIsWidgetActive, %function
 750              	CapSense_CheckIsWidgetActive:
 751              	.LFB55:
1150:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1151:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1152:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1153:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsWidgetActive
1154:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1155:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1156:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1157:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[] array element to the finger threshold of
1158:Generated_Source\PSoC4/CapSense_CSHL.c **** * the widget it belongs to. The hysteresis and debounce are taken into account.
1159:Generated_Source\PSoC4/CapSense_CSHL.c **** * The hysteresis is added or subtracted from the finger threshold based on whether
1160:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the sensor is currently active. If the sensor is active, the threshold is
1161:Generated_Source\PSoC4/CapSense_CSHL.c **** *  lowered by the hysteresis amount. If the sensor is inactive, the threshold
1162:Generated_Source\PSoC4/CapSense_CSHL.c **** *  is raised by the hysteresis amount.
1163:Generated_Source\PSoC4/CapSense_CSHL.c **** * The debounce counter added to the sensor active transition.
1164:Generated_Source\PSoC4/CapSense_CSHL.c **** * This function updates CapSense_sensorOnMask[] array element
1165:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1166:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1167:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1168:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1169:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1170:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are
1171:Generated_Source\PSoC4/CapSense_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
1172:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1173:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1174:Generated_Source\PSoC4/CapSense_CSHL.c **** *  rawDataIndex[]: Contains the  1st sensor position in the widget
1175:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1176:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1177:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1178:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1179:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1180:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsWidgetActive(uint32 widget)
1181:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 752              		.loc 1 1181 0
 753              		.cfi_startproc
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 35


 754              		@ args = 0, pretend = 0, frame = 0
 755              		@ frame_needed = 0, uses_anonymous_args = 0
 756              	.LVL60:
 757 0000 10B5     		push	{r4, lr}
 758              		.cfi_def_cfa_offset 8
 759              		.cfi_offset 4, -8
 760              		.cfi_offset 14, -4
 761              	.LVL61:
1182:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 rawIndex = (uint32)CapSense_rawDataIndex[widget];
1183:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 numOfSensors = (uint32)CapSense_numberOfSensors[widget] + rawIndex;
1184:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
1185:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1186:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Check all sensors of widget */
1187:Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1188:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1189:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_CheckIsSensorActive((uint32)rawIndex) != 0u)
 762              		.loc 1 1189 0
 763 0002 0020     		movs	r0, #0
 764              	.LVL62:
 765 0004 FFF7FEFF 		bl	CapSense_CheckIsSensorActive
 766              	.LVL63:
 767 0008 0028     		cmp	r0, #0
 768 000a 00D0     		beq	.L66
1190:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1191:Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_SENSOR_IS_ACTIVE;
 769              		.loc 1 1191 0
 770 000c 0120     		movs	r0, #1
 771              	.L66:
 772              	.LVL64:
1192:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1193:Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
1194:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1195:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
1196:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1197:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1198:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1199:Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
1200:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 773              		.loc 1 1200 0
 774              		@ sp needed
 775 000e 10BD     		pop	{r4, pc}
 776              		.cfi_endproc
 777              	.LFE55:
 778              		.size	CapSense_CheckIsWidgetActive, .-CapSense_CheckIsWidgetActive
 779              		.section	.text.CapSense_CheckIsAnyWidgetActive,"ax",%progbits
 780              		.align	2
 781              		.global	CapSense_CheckIsAnyWidgetActive
 782              		.code	16
 783              		.thumb_func
 784              		.type	CapSense_CheckIsAnyWidgetActive, %function
 785              	CapSense_CheckIsAnyWidgetActive:
 786              	.LFB56:
1201:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1202:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1203:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1204:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsAnyWidgetActive
1205:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 36


1206:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1207:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1208:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares all the sensors of the CapSense_Signal[] array to their finger
1209:Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold. Calls CapSense_CheckIsWidgetActive() for each widget so
1210:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the CapSense_sensorOnMask[] array is up to date after calling this
1211:Generated_Source\PSoC4/CapSense_CSHL.c **** *  function.
1212:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1213:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1214:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1215:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1216:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1217:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
1218:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1219:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1220:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1221:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1222:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1223:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1224:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1225:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1226:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsAnyWidgetActive(void)
1227:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 787              		.loc 1 1227 0
 788              		.cfi_startproc
 789              		@ args = 0, pretend = 0, frame = 0
 790              		@ frame_needed = 0, uses_anonymous_args = 0
 791 0000 70B5     		push	{r4, r5, r6, lr}
 792              		.cfi_def_cfa_offset 16
 793              		.cfi_offset 4, -16
 794              		.cfi_offset 5, -12
 795              		.cfi_offset 6, -8
 796              		.cfi_offset 14, -4
 797              	.LVL65:
1228:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1229:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 i;
1230:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 798              		.loc 1 1230 0
 799 0002 0025     		movs	r5, #0
1231:Generated_Source\PSoC4/CapSense_CSHL.c ****     
1232:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 800              		.loc 1 1232 0
 801 0004 0024     		movs	r4, #0
 802 0006 06E0     		b	.L69
 803              	.LVL66:
 804              	.L71:
1233:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1234:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(i) != 0u)
 805              		.loc 1 1234 0
 806 0008 2000     		movs	r0, r4
 807 000a FFF7FEFF 		bl	CapSense_CheckIsWidgetActive
 808              	.LVL67:
 809 000e 0028     		cmp	r0, #0
 810 0010 00D0     		beq	.L70
1235:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1236:Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_WIDGET_IS_ACTIVE;
 811              		.loc 1 1236 0
 812 0012 0125     		movs	r5, #1
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 37


 813              	.LVL68:
 814              	.L70:
1232:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 815              		.loc 1 1232 0 discriminator 2
 816 0014 0134     		adds	r4, r4, #1
 817              	.LVL69:
 818              	.L69:
1232:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 819              		.loc 1 1232 0 is_stmt 0 discriminator 1
 820 0016 002C     		cmp	r4, #0
 821 0018 F6D0     		beq	.L71
1237:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1238:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1239:Generated_Source\PSoC4/CapSense_CSHL.c ****     
1240:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1241:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1242:Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
1243:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 822              		.loc 1 1243 0 is_stmt 1
 823 001a 2800     		movs	r0, r5
 824              		@ sp needed
 825              	.LVL70:
 826              	.LVL71:
 827 001c 70BD     		pop	{r4, r5, r6, pc}
 828              		.cfi_endproc
 829              	.LFE56:
 830              		.size	CapSense_CheckIsAnyWidgetActive, .-CapSense_CheckIsAnyWidgetActive
 831 001e C046     		.section	.text.CapSense_EnableWidget,"ax",%progbits
 832              		.align	2
 833              		.global	CapSense_EnableWidget
 834              		.code	16
 835              		.thumb_func
 836              		.type	CapSense_EnableWidget, %function
 837              	CapSense_EnableWidget:
 838              	.LFB57:
1244:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1245:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1246:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1247:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_EnableWidget
1248:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1249:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1250:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1251:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Enables all the widget elements (sensors) to the scanning process.
1252:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1253:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1254:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1255:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1256:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1257:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1258:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1259:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1260:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
1261:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1262:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
1263:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1264:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1265:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 38


1266:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
1267:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
1268:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1269:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1270:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1271:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1272:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1273:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_EnableWidget(uint32 widget)
1274:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 839              		.loc 1 1274 0
 840              		.cfi_startproc
 841              		@ args = 0, pretend = 0, frame = 0
 842              		@ frame_needed = 0, uses_anonymous_args = 0
 843              	.LVL72:
 844 0000 10B5     		push	{r4, lr}
 845              		.cfi_def_cfa_offset 8
 846              		.cfi_offset 4, -8
 847              		.cfi_offset 14, -4
 848              	.LVL73:
1275:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1276:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
1277:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
1278:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1279:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Enable all sensors of widget */
1280:Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1281:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1282:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 1u);
 849              		.loc 1 1282 0
 850 0002 0122     		movs	r2, #1
 851 0004 0021     		movs	r1, #0
 852 0006 0248     		ldr	r0, .L74
 853              	.LVL74:
 854 0008 FFF7FEFF 		bl	CapSense_SetBitValue
 855              	.LVL75:
1283:Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
1284:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1285:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
1286:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 856              		.loc 1 1286 0
 857              		@ sp needed
 858 000c 10BD     		pop	{r4, pc}
 859              	.L75:
 860 000e C046     		.align	2
 861              	.L74:
 862 0010 00000000 		.word	CapSense_sensorEnableMask
 863              		.cfi_endproc
 864              	.LFE57:
 865              		.size	CapSense_EnableWidget, .-CapSense_EnableWidget
 866              		.section	.text.CapSense_DisableWidget,"ax",%progbits
 867              		.align	2
 868              		.global	CapSense_DisableWidget
 869              		.code	16
 870              		.thumb_func
 871              		.type	CapSense_DisableWidget, %function
 872              	CapSense_DisableWidget:
 873              	.LFB58:
1287:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 39


1288:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1289:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1290:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_DisableWidget
1291:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1292:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1293:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1294:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Disables all the widget elements (sensors) from the scanning process.
1295:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1296:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1297:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1298:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1299:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1300:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1301:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1302:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1303:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
1304:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1305:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
1306:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1307:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1308:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1309:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor isn't scanned by CapSense_ScanEnabledWidgets().
1310:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is scanned by CapSense_ScanEnabledWidgets().
1311:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1312:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1313:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1314:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1315:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1316:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_DisableWidget(uint32 widget)
1317:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 874              		.loc 1 1317 0
 875              		.cfi_startproc
 876              		@ args = 0, pretend = 0, frame = 0
 877              		@ frame_needed = 0, uses_anonymous_args = 0
 878              	.LVL76:
 879 0000 10B5     		push	{r4, lr}
 880              		.cfi_def_cfa_offset 8
 881              		.cfi_offset 4, -8
 882              		.cfi_offset 14, -4
 883              	.LVL77:
1318:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
1319:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
1320:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1321:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Disable all sensors of widget */
1322:Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1323:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1324:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1325:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 0u);
 884              		.loc 1 1325 0
 885 0002 0022     		movs	r2, #0
 886 0004 0021     		movs	r1, #0
 887 0006 0248     		ldr	r0, .L77
 888              	.LVL78:
 889 0008 FFF7FEFF 		bl	CapSense_SetBitValue
 890              	.LVL79:
1326:Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
1327:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 40


1328:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
1329:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 891              		.loc 1 1329 0
 892              		@ sp needed
 893 000c 10BD     		pop	{r4, pc}
 894              	.L78:
 895 000e C046     		.align	2
 896              	.L77:
 897 0010 00000000 		.word	CapSense_sensorEnableMask
 898              		.cfi_endproc
 899              	.LFE58:
 900              		.size	CapSense_DisableWidget, .-CapSense_DisableWidget
 901              		.section	.text.CapSense_MedianFilter,"ax",%progbits
 902              		.align	2
 903              		.global	CapSense_MedianFilter
 904              		.code	16
 905              		.thumb_func
 906              		.type	CapSense_MedianFilter, %function
 907              	CapSense_MedianFilter:
 908              	.LFB59:
1330:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1331:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1332:Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1333:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1334:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_FindMaximum
1335:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1336:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1337:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1338:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Finds the index of the maximum element within a defined centroid. Checks
1339:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[] within a defined centroid and
1340:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  returns the index of the maximum element. The values below the finger threshold are
1341:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  ignored.
1342:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The centroid is defined by offset of the first element and a number of elements - count.
1343:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The diplexed centroid requires at least two consecutive elements above
1344:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  FingerThreshold to find the index of the maximum element.
1345:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1346:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1347:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:  Start index of centroid in CapSense_sensorSignal[] array.
1348:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:   number of elements within centroid.
1349:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  fingerThreshold:  Finger threshold.
1350:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:   pointer to diplex table.
1351:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1352:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1353:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns the index of the maximum element within a defined centroid.
1354:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If the index of the maximum element isn't found it returns 0xFF.
1355:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1356:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1357:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_startOfSlider[] - contains the index of the first slider element
1358:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1359:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1360:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1361:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1362:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1363:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_IS_DIPLEX_SLIDER)
1364:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint8 *d
1365:Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
1366:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 41


1367:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1368:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1369:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
1370:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1371:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curPos = 0u;
1372:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No centroid at Start */
1373:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCntrdSize = 0u;
1374:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1375:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Biggest centroid is zero */
1376:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdSize = 0u;
1377:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
1378:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1379:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum = CapSense_MAXIMUM_CENTROID;
1380:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1381:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 temp = 0u;
1382:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 *startOfSlider = &CapSense_sensorSignal[offset];
1383:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1384:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1385:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(diplex != 0u)
1386:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1387:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Initialize */
1388:Generated_Source\PSoC4/CapSense_CSHL.c ****                 i = 0u;
1389:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1390:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make slider x2 as Diplexed */
1391:Generated_Source\PSoC4/CapSense_CSHL.c ****                 count <<= 1u;
1392:Generated_Source\PSoC4/CapSense_CSHL.c ****                 while(1u)
1393:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1394:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
1395:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1396:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (curCtrdStartPos == CapSense_MAXIMUM_CENTROID)
1397:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1398:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Start of centroid */
1399:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = i;
1400:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1401:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1402:Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
1403:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1404:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1405:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1406:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1407:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else   /* Select biggest and indicate zero start */
1408:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1409:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(curCntrdSize > 0u)
1410:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1411:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* We are at the end of current */
1412:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
1413:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1414:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
1415:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
1416:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1417:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1418:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize = 0u;
1419:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1420:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1421:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1422:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1423:Generated_Source\PSoC4/CapSense_CSHL.c ****                     i++;
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 42


1424:Generated_Source\PSoC4/CapSense_CSHL.c ****                     curPos = diplex[i];
1425:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(i == count)
1426:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1427:Generated_Source\PSoC4/CapSense_CSHL.c ****                         break;
1428:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1429:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1430:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1431:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Find biggest centroid if two are same size, last one wins
1432:Generated_Source\PSoC4/CapSense_CSHL.c ****                        We are at the end of current */
1433:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize)
1434:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1435:Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
1436:Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
1437:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1438:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1439:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1440:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1441:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Without diplexing */
1442:Generated_Source\PSoC4/CapSense_CSHL.c ****                 biggestCtrdSize = count;
1443:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1444:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1445:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1446:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Check centroid size */
1447:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_NON_DIPLEX_SLIDER)
1448:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
1449:Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
1450:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(biggestCtrdSize >= 2u)
1451:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_NON_DIPLEX_SLIDER) */
1452:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1453:Generated_Source\PSoC4/CapSense_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
1454:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1455:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1456:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (diplex == 0u)
1457:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1458:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = i;
1459:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1460:Generated_Source\PSoC4/CapSense_CSHL.c ****                             else
1461:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1462:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = diplex[i];
1463:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1464:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #elif (CapSense_IS_DIPLEX_SLIDER)
1465:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curPos = diplex[i];
1466:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1467:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Looking for greater element within centroid */
1468:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
1469:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1470:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(startOfSlider[curPos] > temp)
1471:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1472:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 maximum = i;
1473:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 temp = startOfSlider[curPos];
1474:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1475:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1476:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1477:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1478:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1479:Generated_Source\PSoC4/CapSense_CSHL.c ****             for (i = 0u; i < count; i++)
1480:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 43


1481:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Looking for greater element within centroid */
1482:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
1483:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1484:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(startOfSlider[i] > temp)
1485:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1486:Generated_Source\PSoC4/CapSense_CSHL.c ****                         maximum = i;
1487:Generated_Source\PSoC4/CapSense_CSHL.c ****                         temp = startOfSlider[i];
1488:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1489:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1490:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1491:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1492:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (maximum);
1493:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1494:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1495:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1496:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1497:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_CalcCentroid
1498:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1499:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1500:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1501:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value calculated according to the index of the maximum element and API
1502:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution.
1503:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1504:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1505:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  type:  widget type.
1506:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:  pointer to diplex table.
1507:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1508:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:   Start index of centroid in CapSense_sensorSignal[] array.
1509:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:    Number of elements within centroid.
1510:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1511:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  API resolution.
1512:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  noiseThreshold:  Noise threshold.
1513:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1514:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1515:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the slider.
1516:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1517:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1518:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1519:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1520:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1521:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u)
1522:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset,
1523:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint32 resolution, uint8 noiseThreshold)
1524:Generated_Source\PSoC4/CapSense_CSHL.c **** #else
1525:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset,
1526:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)
1527:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u) */
1528:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1529:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1530:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posPrev;
1531:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posNext;
1532:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1533:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1534:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Helps during centroid calculation */
1535:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1536:Generated_Source\PSoC4/CapSense_CSHL.c ****             static uint8 CapSense_centroid[3u];
1537:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 44


1538:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1539:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1540:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 pos;
1541:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1542:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1543:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 position;
1544:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 numerator;
1545:Generated_Source\PSoC4/CapSense_CSHL.c ****         int32 denominator;
1546:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1547:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8  *startOfSlider = &CapSense_sensorSignal[offset];
1548:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1549:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1550:Generated_Source\PSoC4/CapSense_CSHL.c ****             posPrev = 0u;
1551:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1552:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1553:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1554:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(type == CapSense_TYPE_RADIAL_SLIDER)
1555:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1556:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1557:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1558:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1559:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1560:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1561:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1562:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for ROTARY Slider */
1563:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1564:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1565:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[count - 1u];
1566:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[1u];
1567:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1568:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1569:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1570:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1571:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[0u];
1572:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1573:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1574:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1575:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1576:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[maximum + 1u];
1577:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1578:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1579:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1580:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1581:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1582:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1583:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1584:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1585:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1586:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1587:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1588:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1589:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(diplex == 0u)
1590:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1591:Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = maximum;
1592:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1593:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = maximum + 1u;
1594:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 45


1595:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1596:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1597:Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = diplex[maximum];
1598:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1599:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = diplex[maximum + 1u];
1600:Generated_Source\PSoC4/CapSense_CSHL.c ****                         count <<= 1u;
1601:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1602:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #elif (CapSense_IS_DIPLEX_SLIDER)
1603:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1604:Generated_Source\PSoC4/CapSense_CSHL.c ****                     pos     = diplex[maximum];
1605:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1606:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = diplex[maximum + 1u];
1607:Generated_Source\PSoC4/CapSense_CSHL.c ****                     count <<= 1u;
1608:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1609:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1610:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (maximum >= 1u)
1611:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1612:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1613:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1614:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = maximum + 1u;
1615:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1616:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1617:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1618:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER)
1619:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[pos];
1620:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1621:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1622:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1623:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1624:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for LINEAR Slider */
1625:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1626:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1627:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = 0u;
1628:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
1629:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1630:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
1631:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1632:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
1633:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = 0u;
1634:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1635:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1636:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1637:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
1638:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
1639:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1640:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_TOTAL_TOUCH_PADS_BASIC_C
1641:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1642:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1643:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1644:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1645:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1646:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1647:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_PREV] > noiseThreshold)
1648:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1649:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] -= noiseThreshold;
1650:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1651:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 46


1652:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1653:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] = 0u;
1654:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1655:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1656:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Maximum always greater than fingerThreshold, so greater than noiseThreshold */
1657:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_centroid[CapSense_POS] -= noiseThreshold;
1658:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1659:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1660:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_NEXT] > noiseThreshold)
1661:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1662:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] -= noiseThreshold;
1663:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1664:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1665:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1666:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] = 0u;
1667:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1668:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1669:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1670:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 - Si-1 */
1671:Generated_Source\PSoC4/CapSense_CSHL.c ****         numerator = (uint32) CapSense_centroid[CapSense_POS_NEXT] -
1672:Generated_Source\PSoC4/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
1673:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1674:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 + Si + Si-1 */
1675:Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (int32) CapSense_centroid[CapSense_POS_PREV] +
1676:Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] +
1677:Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS_NEXT];
1678:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1679:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* (numerator/denominator) + maximum */
1680:Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
1681:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1682:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if(CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1683:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Only required for RADIAL Slider */
1684:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(denominator < 0)
1685:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1686:Generated_Source\PSoC4/CapSense_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1687:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1688:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1689:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1690:Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator *= (int16)resolution;
1691:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1692:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Round result and put it to uint8 */
1693:Generated_Source\PSoC4/CapSense_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CENTROID_ROUND_VALUE));
1694:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1695:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
1696:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1697:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1698:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1699:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1700:Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1701:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1702:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetCentroidPos
1703:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1704:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1705:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1706:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1707:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1708:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 47


1709:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1710:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1711:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1712:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1713:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1714:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__LS           5
1715:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1716:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1717:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the linear slider.
1718:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1719:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1720:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1721:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1722:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1723:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1724:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1725:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1726:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1727:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1728:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1729:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1730:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1731:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1732:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1733:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1734:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1735:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1736:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_GetCentroidPos(uint32 widget)
1737:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1738:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1739:Generated_Source\PSoC4/CapSense_CSHL.c ****             const uint8 *diplex;
1740:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1741:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1742:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1743:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1744:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1745:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
1746:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1747:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1748:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1749:Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1750:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1751:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1752:Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1753:Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1754:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1755:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1756:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1757:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1758:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1759:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1760:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1761:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(widget < CapSense_TOTAL_DIPLEXED_SLIDERS_COUNT)
1762:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1763:Generated_Source\PSoC4/CapSense_CSHL.c ****                 maximum = CapSense_diplexTable[widget];
1764:Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = &CapSense_diplexTable[maximum];
1765:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 48


1766:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1767:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1768:Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = 0u;
1769:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1770:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1771:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1772:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within centroid */
1773:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1774:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], 
1775:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1776:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
1777:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1778:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1779:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != 0xFFu)
1780:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1781:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1782:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum,
1783:Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1784:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1785:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1786:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1787:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1788:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1789:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1790:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1791:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1792:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1793:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1794:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1795:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1796:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1797:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1798:Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1799:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1800:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1801:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) ||
1802:Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1803:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1804:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1805:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1806:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1807:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1808:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1809:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1810:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1811:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1812:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
1813:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1814:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1815:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1816:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
1817:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1818:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1819:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1820:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1821:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
1822:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 49


1823:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1824:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
1825:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1826:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1827:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1828:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /*(0u != (CapSense_MEDIAN_FILTER &
1829:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *         CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1830:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1831:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1832:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if(0u!=(CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1833:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
1834:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1835:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1836:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
1837:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1838:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1839:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]=CapSense_posFiltersData[posInd
1840:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1841:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1842:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1843:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1844:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1845:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1846:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1847:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
1848:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1849:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
1850:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1851:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1852:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1853:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & \
1854:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1855:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1856:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1857:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1858:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1859:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1860:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
1861:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1862:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1863:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1864:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & \
1865:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1866:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1867:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1868:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1869:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1870:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1871:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
1872:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1873:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1874:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1875:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER & \
1876:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1877:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1878:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1879:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 50


1880:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1881:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1882:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1883:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1884:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1885:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum wasn't found */
1886:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
1887:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1888:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if(0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1889:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
1890:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1891:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1892:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
1893:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1894:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1895:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1896:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1897:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1898:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
1899:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1900:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1901:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1902:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1903:Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1904:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1905:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetRadialCentroidPos
1906:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1907:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1908:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1909:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1910:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1911:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1912:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1913:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1914:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1915:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1916:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1917:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__RS           5
1918:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1919:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1920:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the radial slider.
1921:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1922:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1923:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
1924:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1925:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1926:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1927:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1928:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1929:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1930:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1931:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1932:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1933:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1934:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1935:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1936:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 51


1937:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1938:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1939:Generated_Source\PSoC4/CapSense_CSHL.c ****      uint16 CapSense_GetRadialCentroidPos(uint32 widget)
1940:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1941:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1942:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1943:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1944:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
1945:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1946:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1947:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1948:Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1949:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1950:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1951:Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1952:Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1953:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1954:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1955:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1956:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1957:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1958:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1959:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within centroid */
1960:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1961:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], 
1962:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1963:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
1964:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1965:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1966:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != CapSense_MAXIMUM_CENTROID)
1967:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1968:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1969:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum,
1970:Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1971:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1972:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1973:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1974:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1975:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1976:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1977:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1978:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1979:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1980:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1981:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1982:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1983:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1984:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1985:Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1986:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1987:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1988:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))  ||
1989:Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1990:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1991:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1992:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1993:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 52


1994:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1995:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1996:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1997:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1998:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1999:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
2000:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2001:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
2002:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2003:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
2004:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2005:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2006:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2007:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2008:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
2009:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2010:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2011:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
2012:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                               CapSense_posFiltersDa
2013:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2014:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2015:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_MEDIAN_FILTER &
2016:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2017:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2018:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2019:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_AVERAGING_FILTER & \
2020:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2021:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2022:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2023:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2024:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
2025:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2026:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2027:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]= CapSense_posFiltersData[posIn
2028:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2029:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2030:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2031:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2032:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2033:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2034:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2035:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2036:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2037:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
2038:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2039:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2040:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2041:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER &
2042:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2043:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2044:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2045:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2046:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2047:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2048:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
2049:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2050:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 53


2051:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2052:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER &
2053:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2054:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2055:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2056:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2057:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2058:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2059:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
2060:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                          CapSense_posFiltersData[po
2061:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2062:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2063:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER &
2064:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2065:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2066:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2067:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2068:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2069:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2070:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2071:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2072:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2073:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum was not found */
2074:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
2075:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2076:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
2077:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2078:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2079:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2080:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2081:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2082:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2083:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2084:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2085:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
2086:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2087:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
2088:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2089:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2090:Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u)
2091:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2092:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetTouchCentroidPos
2093:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2094:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2095:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2096:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If a finger is present on a touchpad, this function calculates the X and Y
2097:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  position of the finger by calculating the centroids within touchpad specified
2098:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  range. The X and Y positions are calculated according to the API resolutions set in the
2099:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense customizer. Returns 1 if a finger is on the touchpad.
2100:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The position filter is applied to the result if enabled.
2101:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
2102:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  customizer.
2103:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2104:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2105:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
2106:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every touchpad widget there are defines in this format:
2107:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__TP            5
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 54


2108:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2109:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
2110:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result of calculation of X and Y position are stored.
2111:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[0u]  - position of X
2112:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[1u]  - position of Y
2113:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2114:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2115:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
2116:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2117:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2118:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2119:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2120:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2121:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   There are no checks of the widget type argument provided to this function.
2122:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
2123:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   calculations.
2124:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2125:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2126:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetTouchCentroidPos(uint32 widget, uint16* pos)
2127:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2128:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2129:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posXIndex;
2130:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posYIndex;
2131:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
2132:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
2133:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2134:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2135:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2136:Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2137:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint16 tempPos;
2138:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2139:Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2140:Generated_Source\PSoC4/CapSense_CSHL.c ****                */
2141:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2142:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxX;
2143:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxY;
2144:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posX;
2145:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posY;
2146:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 touch = 0u;
2147:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
2148:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
2149:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2150:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within X centroid */
2151:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
2152:Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], 0u);
2153:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
2154:Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
2155:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2156:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2157:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (MaxX != CapSense_MAXIMUM_CENTROID)
2158:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2159:Generated_Source\PSoC4/CapSense_CSHL.c ****             offset = CapSense_rawDataIndex[widget + 1u];
2160:Generated_Source\PSoC4/CapSense_CSHL.c ****             count = CapSense_numberOfSensors[widget + 1u];
2161:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2162:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find Maximum within Y centroid */
2163:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_DIPLEX_SLIDER)
2164:Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u], 0
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 55


2165:Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
2166:Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u]);
2167:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2168:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2169:Generated_Source\PSoC4/CapSense_CSHL.c ****             if (MaxY != CapSense_MAXIMUM_CENTROID)
2170:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2171:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* X and Y maximums are found = true touch */
2172:Generated_Source\PSoC4/CapSense_CSHL.c ****                 touch = 1u;
2173:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2174:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate Y centroid */
2175:Generated_Source\PSoC4/CapSense_CSHL.c ****                 posY = CapSense_CalcCentroid(MaxY, offset, count,
2176:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget + 1u], CapSense_noiseThreshold[widget + 1u
2177:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2178:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate X centroid */
2179:Generated_Source\PSoC4/CapSense_CSHL.c ****                 offset = CapSense_rawDataIndex[widget];
2180:Generated_Source\PSoC4/CapSense_CSHL.c ****                 count = CapSense_numberOfSensors[widget];
2181:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2182:Generated_Source\PSoC4/CapSense_CSHL.c ****                 posX = CapSense_CalcCentroid(MaxX, offset, count,
2183:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget],CapSense_noiseThreshold[widget]);
2184:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2185:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2186:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Check if this TP has enabled filters */
2187:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
2188:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2189:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Calculate position to store filters data */
2190:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
2191:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posYIndex  = CapSense_posFiltersData[widget + 1u];
2192:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2193:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (0u == CapSense_posFiltersData[firstTimeIndex])
2194:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2195:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Init filters */
2196:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posXIndex] = posX;
2197:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posYIndex] = posY;
2198:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2199:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if((0u != (CapSense_MEDIAN_FILTER & \
2200:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK))|| \
2201:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 (0u != (CapSense_AVERAGING_FILTER & \
2202:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2203:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2204:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) ||
2205:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
2206:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2207:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = posX;
2208:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = posY;
2209:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2210:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2211:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2212:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *    (0u != (CapSense_AVERAGING_FILTER & \
2213:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *            CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2214:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2215:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2216:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[firstTimeIndex] = 1u;
2217:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2218:Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
2219:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2220:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Do filtering */
2221:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 56


2222:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2223:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2224:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2225:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_MedianFilter(posX,
2226:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2227:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2228:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] =
2229:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2230:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2231:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2232:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2233:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_MedianFilter(posY,
2234:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2235:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2236:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] =
2237:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2238:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2239:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2240:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2241:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_MEDIAN_FILTER & \
2242:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2243:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2244:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2245:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if(0u !=(CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_M
2246:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2247:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2248:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2249:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_AveragingFilter(posX,
2250:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2251:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2252:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] =
2253:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2254:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2255:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2256:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2257:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_AveragingFilter(posY,
2258:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2259:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2260:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] =
2261:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2262:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2263:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2264:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2265:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2266:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2267:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2268:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2269:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR2_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2270:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2271:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2272:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR2Filter(posX,
2273:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                            CapSense_posFiltersData[
2274:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2275:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2276:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR2Filter(posY,
2277:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2278:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 57


2279:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2280:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2281:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR2_FILTER & \
2282:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2283:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2284:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2285:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR4_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2286:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2287:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2288:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR4Filter((uint16)posX,
2289:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2290:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2291:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2292:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR4Filter((uint16)posY,
2293:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2294:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2295:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2296:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2297:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR4_FILTER & \
2298:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2299:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2300:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2301:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_JITTER_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2302:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2303:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     {
2304:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posX = (uint8) CapSense_JitterFilter(posX,
2305:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2306:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posXIndex] = posX;
2307:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2308:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posY = (uint8) CapSense_JitterFilter(posY,
2309:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2310:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posYIndex] = posY;
2311:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     }
2312:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_JITTER_FILTER & \
2313:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2314:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2315:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2316:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2317:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2318:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2319:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Save positions */
2320:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = posX;
2321:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = posY;
2322:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2323:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2324:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2325:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2326:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(touch == 0u)
2327:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2328:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2329:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if ((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2330:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2331:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2332:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2333:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2334:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2335:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 58


2336:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (touch);
2337:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2338:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u) */
2339:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2340:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2341:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2342:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2343:Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) )
2344:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2345:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_MedianFilter
2346:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2347:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2348:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2349:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Median filter function.
2350:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the
2351:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  median value.
2352:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2353:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2354:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2355:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2356:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2357:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2358:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2359:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2360:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2361:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2362:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2363:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2364:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2365:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2366:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2367:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2368:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
2369:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 909              		.loc 1 2369 0
 910              		.cfi_startproc
 911              		@ args = 0, pretend = 0, frame = 0
 912              		@ frame_needed = 0, uses_anonymous_args = 0
 913              		@ link register save eliminated.
 914              	.LVL80:
2370:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 tmp;
2371:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2372:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
 915              		.loc 1 2372 0
 916 0000 8842     		cmp	r0, r1
 917 0002 02D9     		bls	.L80
 918 0004 0300     		movs	r3, r0
2373:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2374:Generated_Source\PSoC4/CapSense_CSHL.c ****             tmp = x2;
2375:Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x1;
2376:Generated_Source\PSoC4/CapSense_CSHL.c ****             x1 = tmp;
 919              		.loc 1 2376 0
 920 0006 0800     		movs	r0, r1
 921              	.LVL81:
2375:Generated_Source\PSoC4/CapSense_CSHL.c ****             x1 = tmp;
 922              		.loc 1 2375 0
 923 0008 1900     		movs	r1, r3
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 59


 924              	.LVL82:
 925              	.L80:
2377:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2378:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2379:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x2 > x3)
 926              		.loc 1 2379 0
 927 000a 9142     		cmp	r1, r2
 928 000c 00D9     		bls	.L81
2380:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2381:Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x3;
 929              		.loc 1 2381 0
 930 000e 1100     		movs	r1, r2
 931              	.LVL83:
 932              	.L81:
2382:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2383:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2384:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
 933              		.loc 1 2384 0
 934 0010 031C     		adds	r3, r0, #0
 935 0012 8842     		cmp	r0, r1
 936 0014 00D2     		bcs	.L82
 937 0016 0B1C     		adds	r3, r1, #0
 938              	.L82:
 939 0018 98B2     		uxth	r0, r3
 940              	.LVL84:
2385:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 941              		.loc 1 2385 0
 942              		@ sp needed
 943 001a 7047     		bx	lr
 944              		.cfi_endproc
 945              	.LFE59:
 946              		.size	CapSense_MedianFilter, .-CapSense_MedianFilter
 947              		.section	.text.CapSense_IIR4Filter,"ax",%progbits
 948              		.align	2
 949              		.global	CapSense_IIR4Filter
 950              		.code	16
 951              		.thumb_func
 952              		.type	CapSense_IIR4Filter, %function
 953              	CapSense_IIR4Filter:
 954              	.LFB60:
2386:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2387:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2388:Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) ) */
2389:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2390:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2391:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) || \
2392:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER)) )
2393:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2394:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_AveragingFilter
2395:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2396:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2397:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2398:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Averaging filter function.
2399:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The averaging filter looks at the three most recent samples of a position and
2400:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  reports the averaging value.
2401:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2402:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 60


2403:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2404:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2405:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2406:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2407:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2408:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2409:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2410:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2411:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2412:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2413:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2414:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2415:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2416:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2417:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
2418:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2419:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
2420:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2421:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2422:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2423:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) || \
2424:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER) ) */
2425:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2426:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2427:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2428:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2429:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2430:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR2Filter
2431:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2432:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2433:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2434:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
2435:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2436:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2437:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2438:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2439:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2440:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2441:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2442:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2443:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2444:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2445:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2446:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2447:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2448:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2449:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2450:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR2Filter(uint16 x1, uint16 x2)
2451:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2452:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2453:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2454:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
2455:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
2456:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 1u;
2457:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2458:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2459:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 61


2460:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2461:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2462:Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2463:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2464:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2465:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2466:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2467:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2468:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR4Filter
2469:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2470:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2471:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2472:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
2473:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2474:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2475:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2476:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2477:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2478:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2479:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a filtered value.
2480:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2481:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2482:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2483:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2484:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2485:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2486:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2487:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2488:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR4Filter(uint16 x1, uint16 x2)
2489:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 955              		.loc 1 2489 0
 956              		.cfi_startproc
 957              		@ args = 0, pretend = 0, frame = 0
 958              		@ frame_needed = 0, uses_anonymous_args = 0
 959              		@ link register save eliminated.
 960              	.LVL85:
2490:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2491:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2492:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
2493:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
 961              		.loc 1 2493 0
 962 0000 4018     		adds	r0, r0, r1
 963              	.LVL86:
2494:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 964              		.loc 1 2494 0
 965 0002 4900     		lsls	r1, r1, #1
 966              	.LVL87:
 967 0004 4018     		adds	r0, r0, r1
 968              	.LVL88:
2495:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 2u;
 969              		.loc 1 2495 0
 970 0006 8008     		lsrs	r0, r0, #2
 971              	.LVL89:
2496:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2497:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
 972              		.loc 1 2497 0
 973 0008 80B2     		uxth	r0, r0
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 62


 974              	.LVL90:
2498:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 975              		.loc 1 2498 0
 976              		@ sp needed
 977 000a 7047     		bx	lr
 978              		.cfi_endproc
 979              	.LFE60:
 980              		.size	CapSense_IIR4Filter, .-CapSense_IIR4Filter
 981              		.section	.text.CapSense_UpdateBaselineNoThreshold,"ax",%progbits
 982              		.align	2
 983              		.global	CapSense_UpdateBaselineNoThreshold
 984              		.code	16
 985              		.thumb_func
 986              		.type	CapSense_UpdateBaselineNoThreshold, %function
 987              	CapSense_UpdateBaselineNoThreshold:
 988              	.LFB36:
 348:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 calc;
 989              		.loc 1 348 0
 990              		.cfi_startproc
 991              		@ args = 0, pretend = 0, frame = 8
 992              		@ frame_needed = 0, uses_anonymous_args = 0
 993              	.LVL91:
 994 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 995              		.cfi_def_cfa_offset 20
 996              		.cfi_offset 4, -20
 997              		.cfi_offset 5, -16
 998              		.cfi_offset 6, -12
 999              		.cfi_offset 7, -8
 1000              		.cfi_offset 14, -4
 1001 0002 4746     		mov	r7, r8
 1002 0004 80B4     		push	{r7}
 1003              		.cfi_def_cfa_offset 24
 1004              		.cfi_offset 8, -24
 1005 0006 82B0     		sub	sp, sp, #8
 1006              		.cfi_def_cfa_offset 32
 1007 0008 0400     		movs	r4, r0
 353:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 noiseThreshold;
 1008              		.loc 1 353 0
 1009 000a 3C4B     		ldr	r3, .L97
 1010 000c 1E5C     		ldrb	r6, [r3, r0]
 362:Generated_Source\PSoC4/CapSense_CSHL.c ****     filteredRawData = CapSense_sensorRaw[sensor];
 1011              		.loc 1 362 0
 1012 000e 3C4B     		ldr	r3, .L97+4
 1013 0010 9B5D     		ldrb	r3, [r3, r6]
 1014 0012 0193     		str	r3, [sp, #4]
 1015              	.LVL92:
 363:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1016              		.loc 1 363 0
 1017 0014 4200     		lsls	r2, r0, #1
 1018 0016 3B4B     		ldr	r3, .L97+8
 1019 0018 D75A     		ldrh	r7, [r2, r3]
 1020              	.LVL93:
 366:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1021              		.loc 1 366 0
 1022 001a 3B4B     		ldr	r3, .L97+12
 1023 001c 5B79     		ldrb	r3, [r3, #5]
 1024 001e 002B     		cmp	r3, #0
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 63


 1025 0020 08D0     		beq	.L87
 387:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 1026              		.loc 1 387 0
 1027 0022 3A4D     		ldr	r5, .L97+16
 1028 0024 9046     		mov	r8, r2
 1029 0026 515B     		ldrh	r1, [r2, r5]
 1030 0028 3800     		movs	r0, r7
 1031              	.LVL94:
 1032 002a FFF7FEFF 		bl	CapSense_IIR4Filter
 1033              	.LVL95:
 1034 002e 0700     		movs	r7, r0
 1035              	.LVL96:
 388:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1036              		.loc 1 388 0
 1037 0030 4346     		mov	r3, r8
 1038 0032 5853     		strh	r0, [r3, r5]
 1039              	.LVL97:
 1040              	.L87:
 409:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 1041              		.loc 1 409 0
 1042 0034 E1B2     		uxtb	r1, r4
 1043 0036 334A     		ldr	r2, .L97+8
 1044 0038 3548     		ldr	r0, .L97+20
 1045 003a FFF7FEFF 		bl	MeasureNoiseEnvelope_P4_v2_60
 1046              	.LVL98:
 414:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1047              		.loc 1 414 0
 1048 003e 6300     		lsls	r3, r4, #1
 1049 0040 344A     		ldr	r2, .L97+24
 1050 0042 9A5A     		ldrh	r2, [r3, r2]
 1051 0044 9742     		cmp	r7, r2
 1052 0046 07D3     		bcc	.L88
 416:Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 1053              		.loc 1 416 0
 1054 0048 0021     		movs	r1, #0
 1055 004a 334B     		ldr	r3, .L97+28
 1056 004c 1955     		strb	r1, [r3, r4]
 417:Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 1057              		.loc 1 417 0
 1058 004e BD1A     		subs	r5, r7, r2
 1059 0050 ADB2     		uxth	r5, r5
 1060              	.LVL99:
 418:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1061              		.loc 1 418 0
 1062 0052 0123     		movs	r3, #1
 1063 0054 9846     		mov	r8, r3
 1064 0056 03E0     		b	.L89
 1065              	.LVL100:
 1066              	.L88:
 422:Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 1067              		.loc 1 422 0
 1068 0058 D51B     		subs	r5, r2, r7
 1069 005a ADB2     		uxth	r5, r5
 1070              	.LVL101:
 423:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1071              		.loc 1 423 0
 1072 005c 0023     		movs	r3, #0
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 64


 1073 005e 9846     		mov	r8, r3
 1074              	.LVL102:
 1075              	.L89:
 427:Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 1076              		.loc 1 427 0
 1077 0060 4346     		mov	r3, r8
 1078 0062 002B     		cmp	r3, #0
 1079 0064 15D1     		bne	.L90
 427:Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 1080              		.loc 1 427 0 is_stmt 0 discriminator 1
 1081 0066 2D4B     		ldr	r3, .L97+32
 1082 0068 9B5D     		ldrb	r3, [r3, r6]
 1083 006a 9D42     		cmp	r5, r3
 1084 006c 11D9     		bls	.L90
 432:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 1085              		.loc 1 432 0 is_stmt 1
 1086 006e 2A4B     		ldr	r3, .L97+28
 1087 0070 1B5D     		ldrb	r3, [r3, r4]
 1088 0072 254A     		ldr	r2, .L97+12
 1089 0074 1219     		adds	r2, r2, r4
 1090 0076 1279     		ldrb	r2, [r2, #4]
 1091 0078 9342     		cmp	r3, r2
 1092 007a 06D3     		bcc	.L91
 434:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 1093              		.loc 1 434 0
 1094 007c 2000     		movs	r0, r4
 1095 007e FFF7FEFF 		bl	CapSense_BaseInit
 1096              	.LVL103:
 435:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 1097              		.loc 1 435 0
 1098 0082 0022     		movs	r2, #0
 1099 0084 244B     		ldr	r3, .L97+28
 1100 0086 1A55     		strb	r2, [r3, r4]
 1101 0088 1EE0     		b	.L92
 1102              	.L91:
 439:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 1103              		.loc 1 439 0
 1104 008a 0133     		adds	r3, r3, #1
 1105 008c 224A     		ldr	r2, .L97+28
 1106 008e 1355     		strb	r3, [r2, r4]
 1107 0090 1AE0     		b	.L92
 1108              	.L90:
 447:Generated_Source\PSoC4/CapSense_CSHL.c ****              ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 1109              		.loc 1 447 0
 1110 0092 6B46     		mov	r3, sp
 1111 0094 9B88     		ldrh	r3, [r3, #4]
 1112 0096 9D42     		cmp	r5, r3
 1113 0098 06D9     		bls	.L93
 448:Generated_Source\PSoC4/CapSense_CSHL.c ****                && (sign == 0u)))
 1114              		.loc 1 448 0 discriminator 1
 1115 009a 204B     		ldr	r3, .L97+32
 1116 009c 9B5D     		ldrb	r3, [r3, r6]
 447:Generated_Source\PSoC4/CapSense_CSHL.c ****              ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 1117              		.loc 1 447 0 discriminator 1
 1118 009e 9D42     		cmp	r5, r3
 1119 00a0 12D2     		bcs	.L92
 449:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 65


 1120              		.loc 1 449 0
 1121 00a2 4346     		mov	r3, r8
 1122 00a4 002B     		cmp	r3, #0
 1123 00a6 0FD1     		bne	.L92
 1124              	.L93:
 460:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 1125              		.loc 1 460 0
 1126 00a8 1302     		lsls	r3, r2, #8
 1127 00aa 9C46     		mov	ip, r3
 1128              	.LVL104:
 461:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1129              		.loc 1 461 0
 1130 00ac 1948     		ldr	r0, .L97+24
 1131 00ae 0119     		adds	r1, r0, r4
 1132 00b0 0B79     		ldrb	r3, [r1, #4]
 1133              	.LVL105:
 1134 00b2 6646     		mov	r6, ip
 1135 00b4 3343     		orrs	r3, r6
 1136              	.LVL106:
 464:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1137              		.loc 1 464 0
 1138 00b6 FF18     		adds	r7, r7, r3
 1139              	.LVL107:
 467:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1140              		.loc 1 467 0
 1141 00b8 BF1A     		subs	r7, r7, r2
 1142              	.LVL108:
 470:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 1143              		.loc 1 470 0
 1144 00ba 3A0A     		lsrs	r2, r7, #8
 1145 00bc 6300     		lsls	r3, r4, #1
 1146 00be C252     		strh	r2, [r0, r3]
 471:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1147              		.loc 1 471 0
 1148 00c0 0F71     		strb	r7, [r1, #4]
 473:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 1149              		.loc 1 473 0
 1150 00c2 0022     		movs	r2, #0
 1151 00c4 144B     		ldr	r3, .L97+28
 1152 00c6 1A55     		strb	r2, [r3, r4]
 1153              	.LVL109:
 1154              	.L92:
 480:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1155              		.loc 1 480 0
 1156 00c8 6B46     		mov	r3, sp
 1157 00ca 9E88     		ldrh	r6, [r3, #4]
 1158 00cc B542     		cmp	r5, r6
 1159 00ce 0DD9     		bls	.L94
 480:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1160              		.loc 1 480 0 is_stmt 0 discriminator 1
 1161 00d0 4346     		mov	r3, r8
 1162 00d2 002B     		cmp	r3, #0
 1163 00d4 0AD0     		beq	.L94
 1164              	.LVL110:
 484:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 1165              		.loc 1 484 0 is_stmt 1
 1166 00d6 FF2D     		cmp	r5, #255
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 66


 1167 00d8 04D9     		bls	.L95
 486:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 1168              		.loc 1 486 0
 1169 00da 0E4B     		ldr	r3, .L97+24
 1170              	.LVL111:
 1171 00dc 1C19     		adds	r4, r3, r4
 1172              	.LVL112:
 1173 00de FF23     		movs	r3, #255
 1174 00e0 2372     		strb	r3, [r4, #8]
 1175 00e2 07E0     		b	.L86
 1176              	.LVL113:
 1177              	.L95:
 490:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 1178              		.loc 1 490 0
 1179 00e4 0B4B     		ldr	r3, .L97+24
 1180              	.LVL114:
 1181 00e6 1C19     		adds	r4, r3, r4
 1182              	.LVL115:
 1183 00e8 2572     		strb	r5, [r4, #8]
 1184 00ea 03E0     		b	.L86
 1185              	.LVL116:
 1186              	.L94:
 499:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1187              		.loc 1 499 0
 1188 00ec 094B     		ldr	r3, .L97+24
 1189 00ee 1C19     		adds	r4, r3, r4
 1190              	.LVL117:
 1191 00f0 0023     		movs	r3, #0
 1192 00f2 2372     		strb	r3, [r4, #8]
 1193              	.L86:
 506:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1194              		.loc 1 506 0
 1195 00f4 02B0     		add	sp, sp, #8
 1196              		@ sp needed
 1197              	.LVL118:
 1198              	.LVL119:
 1199 00f6 04BC     		pop	{r2}
 1200 00f8 9046     		mov	r8, r2
 1201 00fa F0BD     		pop	{r4, r5, r6, r7, pc}
 1202              	.L98:
 1203              		.align	2
 1204              	.L97:
 1205 00fc 00000000 		.word	CapSense_widgetNumber
 1206 0100 00000000 		.word	CapSense_noiseThreshold
 1207 0104 00000000 		.word	CapSense_sensorRaw
 1208 0108 00000000 		.word	.LANCHOR1
 1209 010c 00000000 		.word	CapSense_rawFilterData1
 1210 0110 00000000 		.word	CapSense_config
 1211 0114 00000000 		.word	.LANCHOR0
 1212 0118 00000000 		.word	CapSense_lowBaselineResetCnt
 1213 011c 00000000 		.word	CapSense_negativeNoiseThreshold
 1214              		.cfi_endproc
 1215              	.LFE36:
 1216              		.size	CapSense_UpdateBaselineNoThreshold, .-CapSense_UpdateBaselineNoThreshold
 1217              		.section	.text.CapSense_UpdateSensorBaseline,"ax",%progbits
 1218              		.align	2
 1219              		.global	CapSense_UpdateSensorBaseline
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 67


 1220              		.code	16
 1221              		.thumb_func
 1222              		.type	CapSense_UpdateSensorBaseline, %function
 1223              	CapSense_UpdateSensorBaseline:
 1224              	.LFB37:
 540:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 1225              		.loc 1 540 0
 1226              		.cfi_startproc
 1227              		@ args = 0, pretend = 0, frame = 0
 1228              		@ frame_needed = 0, uses_anonymous_args = 0
 1229              	.LVL120:
 1230 0000 10B5     		push	{r4, lr}
 1231              		.cfi_def_cfa_offset 8
 1232              		.cfi_offset 4, -8
 1233              		.cfi_offset 14, -4
 1234 0002 0400     		movs	r4, r0
 552:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 1235              		.loc 1 552 0
 1236 0004 FFF7FEFF 		bl	CapSense_UpdateThresholds
 1237              	.LVL121:
 555:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1238              		.loc 1 555 0
 1239 0008 2000     		movs	r0, r4
 1240 000a FFF7FEFF 		bl	CapSense_UpdateBaselineNoThreshold
 1241              	.LVL122:
 561:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1242              		.loc 1 561 0
 1243              		@ sp needed
 1244              	.LVL123:
 1245 000e 10BD     		pop	{r4, pc}
 1246              		.cfi_endproc
 1247              	.LFE37:
 1248              		.size	CapSense_UpdateSensorBaseline, .-CapSense_UpdateSensorBaseline
 1249              		.section	.text.CapSense_UpdateEnabledBaselines,"ax",%progbits
 1250              		.align	2
 1251              		.global	CapSense_UpdateEnabledBaselines
 1252              		.code	16
 1253              		.thumb_func
 1254              		.type	CapSense_UpdateEnabledBaselines, %function
 1255              	CapSense_UpdateEnabledBaselines:
 1256              	.LFB38:
 594:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 1257              		.loc 1 594 0
 1258              		.cfi_startproc
 1259              		@ args = 0, pretend = 0, frame = 0
 1260              		@ frame_needed = 0, uses_anonymous_args = 0
 1261 0000 10B5     		push	{r4, lr}
 1262              		.cfi_def_cfa_offset 8
 1263              		.cfi_offset 4, -8
 1264              		.cfi_offset 14, -4
 1265              	.LVL124:
 598:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1266              		.loc 1 598 0
 1267 0002 0024     		movs	r4, #0
 1268 0004 09E0     		b	.L101
 1269              	.LVL125:
 1270              	.L103:
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 68


 600:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1271              		.loc 1 600 0
 1272 0006 2100     		movs	r1, r4
 1273 0008 0548     		ldr	r0, .L104
 1274 000a FFF7FEFF 		bl	CapSense_GetBitValue
 1275              	.LVL126:
 602:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 1276              		.loc 1 602 0
 1277 000e 0028     		cmp	r0, #0
 1278 0010 02D0     		beq	.L102
 604:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 1279              		.loc 1 604 0
 1280 0012 2000     		movs	r0, r4
 1281              	.LVL127:
 1282 0014 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 1283              	.LVL128:
 1284              	.L102:
 598:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1285              		.loc 1 598 0 discriminator 2
 1286 0018 0134     		adds	r4, r4, #1
 1287              	.LVL129:
 1288              	.L101:
 598:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1289              		.loc 1 598 0 is_stmt 0 discriminator 1
 1290 001a 002C     		cmp	r4, #0
 1291 001c F3D0     		beq	.L103
 607:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1292              		.loc 1 607 0 is_stmt 1
 1293              		@ sp needed
 1294              	.LVL130:
 1295 001e 10BD     		pop	{r4, pc}
 1296              	.L105:
 1297              		.align	2
 1298              	.L104:
 1299 0020 00000000 		.word	CapSense_sensorEnableMask
 1300              		.cfi_endproc
 1301              	.LFE38:
 1302              		.size	CapSense_UpdateEnabledBaselines, .-CapSense_UpdateEnabledBaselines
 1303              		.section	.text.CapSense_UpdateWidgetBaseline,"ax",%progbits
 1304              		.align	2
 1305              		.global	CapSense_UpdateWidgetBaseline
 1306              		.code	16
 1307              		.thumb_func
 1308              		.type	CapSense_UpdateWidgetBaseline, %function
 1309              	CapSense_UpdateWidgetBaseline:
 1310              	.LFB39:
 639:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sensorsPerWidget;
 1311              		.loc 1 639 0
 1312              		.cfi_startproc
 1313              		@ args = 0, pretend = 0, frame = 0
 1314              		@ frame_needed = 0, uses_anonymous_args = 0
 1315              	.LVL131:
 1316 0000 10B5     		push	{r4, lr}
 1317              		.cfi_def_cfa_offset 8
 1318              		.cfi_offset 4, -8
 1319              		.cfi_offset 14, -4
 1320              	.LVL132:
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 69


 655:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1321              		.loc 1 655 0
 1322 0002 0024     		movs	r4, #0
 1323 0004 09E0     		b	.L107
 1324              	.LVL133:
 1325              	.L109:
 657:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1326              		.loc 1 657 0
 1327 0006 2100     		movs	r1, r4
 1328 0008 0548     		ldr	r0, .L110
 1329 000a FFF7FEFF 		bl	CapSense_GetBitValue
 1330              	.LVL134:
 659:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 1331              		.loc 1 659 0
 1332 000e 0028     		cmp	r0, #0
 1333 0010 02D0     		beq	.L108
 661:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 1334              		.loc 1 661 0
 1335 0012 2000     		movs	r0, r4
 1336              	.LVL135:
 1337 0014 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 1338              	.LVL136:
 1339              	.L108:
 655:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1340              		.loc 1 655 0 discriminator 2
 1341 0018 0134     		adds	r4, r4, #1
 1342              	.LVL137:
 1343              	.L107:
 655:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1344              		.loc 1 655 0 is_stmt 0 discriminator 1
 1345 001a 002C     		cmp	r4, #0
 1346 001c F3D0     		beq	.L109
 664:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1347              		.loc 1 664 0 is_stmt 1
 1348              		@ sp needed
 1349              	.LVL138:
 1350 001e 10BD     		pop	{r4, pc}
 1351              	.L111:
 1352              		.align	2
 1353              	.L110:
 1354 0020 00000000 		.word	CapSense_sensorEnableMask
 1355              		.cfi_endproc
 1356              	.LFE39:
 1357              		.size	CapSense_UpdateWidgetBaseline, .-CapSense_UpdateWidgetBaseline
 1358              		.section	.text.CapSense_GetWidgetNumber,"ax",%progbits
 1359              		.align	2
 1360              		.global	CapSense_GetWidgetNumber
 1361              		.code	16
 1362              		.thumb_func
 1363              		.type	CapSense_GetWidgetNumber, %function
 1364              	CapSense_GetWidgetNumber:
 1365              	.LFB61:
2499:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2500:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2501:Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2502:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2503:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 70


2504:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2505:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) || \
2506:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)))
2507:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2508:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: uint16 CapSense_JitterFilter
2509:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2510:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2511:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2512:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Jitter filter function.
2513:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2514:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2515:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2516:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2517:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2518:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2519:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2520:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2521:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2522:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2523:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2524:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2525:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2526:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2527:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2528:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_JitterFilter(uint16 x1, uint16 x2)
2529:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2530:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
2531:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2532:Generated_Source\PSoC4/CapSense_CSHL.c ****             x1--;
2533:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2534:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2535:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2536:Generated_Source\PSoC4/CapSense_CSHL.c ****             if (x1 < x2)
2537:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2538:Generated_Source\PSoC4/CapSense_CSHL.c ****                 x1++;
2539:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2540:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2541:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2542:Generated_Source\PSoC4/CapSense_CSHL.c ****         return x1;
2543:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2544:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2545:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2546:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2547:Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2548:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2549:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2550:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))
2551:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2552:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR8Filter
2553:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2554:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2555:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2556:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/8 filter function. IIR1/8 = 1/8current + 7/8previous.
2557:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2558:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2559:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2560:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 71


2561:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2562:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2563:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2564:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2565:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2566:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2567:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2568:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2569:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2570:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2571:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2572:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2573:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR8Filter(uint16 x1, uint16 x2)
2574:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2575:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2576:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2577:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/8 Current Value + 7/8 Previous Value */
2578:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2579:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 3u) - ((uint32)x2));
2580:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 3u;
2581:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2582:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2583:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2584:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)) */
2585:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2586:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2587:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
2588:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2589:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR16Filter
2590:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2591:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2592:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2593:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/16 filter function. IIR1/16 = 1/16current + 15/16previous.
2594:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2595:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2596:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2597:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2598:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2599:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2600:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2601:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2602:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2603:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2604:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2605:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2606:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2607:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2608:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2609:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2610:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR16Filter(uint16 x1, uint16 x2)
2611:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2612:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2613:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2614:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/16 Current Value + 15/16 Previous Value */
2615:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2616:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 4u) - ((uint32)x2));
2617:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 4u;
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 72


2618:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2619:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2620:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2621:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER) */
2622:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2623:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2624:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT))
2625:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2626:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2627:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetMatrixButtonPos
2628:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2629:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2630:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2631:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Function calculates and returns a touch position (column and row) for the matrix
2632:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  button widget.
2633:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2634:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2635:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number;
2636:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     pointer to an array of two uint8, where touch position will be
2637:Generated_Source\PSoC4/CapSense_CSHL.c ****     *           stored:
2638:Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[0] - column position;
2639:Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[1] - raw position.
2640:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2641:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2642:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns 1 if row and column sensors of matrix button are active, 0 - in other
2643:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  cases.
2644:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2645:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2646:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_fingerThreshold[ ] - used to store the finger threshold for all widgets.
2647:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[ ] - used to store a difference between the current value of
2648:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  raw data and a previous value of the baseline.
2649:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2650:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2651:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2652:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2653:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2654:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetMatrixButtonPos(uint32 widget, uint8* pos)
2655:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2656:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
2657:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 retVal = 0u;
2658:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 row_sig_max = 0u;
2659:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 col_sig_max = 0u;
2660:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 row_ind = 0u;
2661:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 col_ind = 0u;
2662:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2663:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(widget) == 1u)
2664:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2665:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2666:Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget]; i < (CapSense_rawDataIndex[widget] + \
2667:Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget]); i++)
2668:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2669:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > col_sig_max)
2670:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2671:Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_ind = i;
2672:Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_sig_max = CapSense_sensorSignal[i];
2673:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2674:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 73


2675:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2676:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2677:Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget+1u]; i < (CapSense_rawDataIndex[widget+1u] + \
2678:Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget+1u]); i++)
2679:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2680:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > row_sig_max)
2681:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2682:Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_ind = i;
2683:Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_sig_max = CapSense_sensorSignal[i];
2684:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2685:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2686:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2687:Generated_Source\PSoC4/CapSense_CSHL.c ****             if((col_sig_max >= CapSense_fingerThreshold[widget]) && \
2688:Generated_Source\PSoC4/CapSense_CSHL.c ****                (row_sig_max >= CapSense_fingerThreshold[widget+1u]))
2689:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2690:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = col_ind - CapSense_rawDataIndex[widget];
2691:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = row_ind - CapSense_rawDataIndex[widget+1u];
2692:Generated_Source\PSoC4/CapSense_CSHL.c ****                 retVal = 1u;
2693:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2694:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2695:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (retVal);
2696:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2697:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2698:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
2699:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2700:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2701:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetWidgetNumber
2702:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2703:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2704:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2705:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2706:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2707:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2708:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2709:Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2710:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2711:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2712:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2713:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2714:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2715:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
2716:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2717:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2718:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2719:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2720:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2721:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_GetWidgetNumber(uint32 sensor)
2722:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1366              		.loc 1 2722 0
 1367              		.cfi_startproc
 1368              		@ args = 0, pretend = 0, frame = 0
 1369              		@ frame_needed = 0, uses_anonymous_args = 0
 1370              		@ link register save eliminated.
 1371              	.LVL139:
2723:Generated_Source\PSoC4/CapSense_CSHL.c ****     return((uint32)CapSense_widgetNumber[sensor]);
 1372              		.loc 1 2723 0
 1373 0000 014B     		ldr	r3, .L113
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 74


 1374 0002 185C     		ldrb	r0, [r3, r0]
 1375              	.LVL140:
2724:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1376              		.loc 1 2724 0
 1377              		@ sp needed
 1378 0004 7047     		bx	lr
 1379              	.L114:
 1380 0006 C046     		.align	2
 1381              	.L113:
 1382 0008 00000000 		.word	CapSense_widgetNumber
 1383              		.cfi_endproc
 1384              	.LFE61:
 1385              		.size	CapSense_GetWidgetNumber, .-CapSense_GetWidgetNumber
 1386              		.section	.text.CapSense_GetLowBaselineReset,"ax",%progbits
 1387              		.align	2
 1388              		.global	CapSense_GetLowBaselineReset
 1389              		.code	16
 1390              		.thumb_func
 1391              		.type	CapSense_GetLowBaselineReset, %function
 1392              	CapSense_GetLowBaselineReset:
 1393              	.LFB62:
2725:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2726:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2727:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetLowBaselineReset
2728:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2729:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2730:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2731:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the low baseline reset threshold value for the  sensor.
2732:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2733:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2734:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2735:Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2736:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2737:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2738:Generated_Source\PSoC4/CapSense_CSHL.c **** *  low baseline reset threshold value a sensor.
2739:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2740:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2741:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_lowBaselineReset[]  - stores low baseline reset values.
2742:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2743:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2744:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2745:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2746:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2747:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetLowBaselineReset(uint32 sensor)
2748:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1394              		.loc 1 2748 0
 1395              		.cfi_startproc
 1396              		@ args = 0, pretend = 0, frame = 0
 1397              		@ frame_needed = 0, uses_anonymous_args = 0
 1398              		@ link register save eliminated.
 1399              	.LVL141:
2749:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_lowBaselineReset[sensor]);
 1400              		.loc 1 2749 0
 1401 0000 014B     		ldr	r3, .L116
 1402 0002 1818     		adds	r0, r3, r0
 1403              	.LVL142:
 1404 0004 0079     		ldrb	r0, [r0, #4]
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 75


2750:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1405              		.loc 1 2750 0
 1406              		@ sp needed
 1407 0006 7047     		bx	lr
 1408              	.L117:
 1409              		.align	2
 1410              	.L116:
 1411 0008 00000000 		.word	.LANCHOR1
 1412              		.cfi_endproc
 1413              	.LFE62:
 1414              		.size	CapSense_GetLowBaselineReset, .-CapSense_GetLowBaselineReset
 1415              		.section	.text.CapSense_GetDebounce,"ax",%progbits
 1416              		.align	2
 1417              		.global	CapSense_GetDebounce
 1418              		.code	16
 1419              		.thumb_func
 1420              		.type	CapSense_GetDebounce, %function
 1421              	CapSense_GetDebounce:
 1422              	.LFB63:
2751:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2752:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2753:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDebounce
2754:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2755:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2756:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2757:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns a debounce value.
2758:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2759:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2760:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2761:Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2762:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2763:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2764:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Debounce value
2765:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2766:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2767:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounce[]  - stores the debounce value.
2768:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2769:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2770:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2771:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2772:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2773:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDebounce(uint32 widget)
2774:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1423              		.loc 1 2774 0
 1424              		.cfi_startproc
 1425              		@ args = 0, pretend = 0, frame = 0
 1426              		@ frame_needed = 0, uses_anonymous_args = 0
 1427              		@ link register save eliminated.
 1428              	.LVL143:
2775:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_debounce[widget]);
 1429              		.loc 1 2775 0
 1430 0000 014B     		ldr	r3, .L119
 1431 0002 185C     		ldrb	r0, [r3, r0]
 1432              	.LVL144:
2776:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1433              		.loc 1 2776 0
 1434              		@ sp needed
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 76


 1435 0004 7047     		bx	lr
 1436              	.L120:
 1437 0006 C046     		.align	2
 1438              	.L119:
 1439 0008 00000000 		.word	.LANCHOR1
 1440              		.cfi_endproc
 1441              	.LFE63:
 1442              		.size	CapSense_GetDebounce, .-CapSense_GetDebounce
 1443              		.section	.text.CapSense_EnableRawDataFilters,"ax",%progbits
 1444              		.align	2
 1445              		.global	CapSense_EnableRawDataFilters
 1446              		.code	16
 1447              		.thumb_func
 1448              		.type	CapSense_EnableRawDataFilters, %function
 1449              	CapSense_EnableRawDataFilters:
 1450              	.LFB64:
2777:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2778:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
2779:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2780:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_EnableRawDataFilters
2781:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2782:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2783:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2784:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Enables the rawdata filters for the sensor signals.
2785:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2786:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2787:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2788:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2789:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2790:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2791:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2792:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2793:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_enableRawFilters defines if the filters are enabled or not.
2794:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2795:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2796:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2797:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2798:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2799:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_EnableRawDataFilters(void)
2800:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1451              		.loc 1 2800 0
 1452              		.cfi_startproc
 1453              		@ args = 0, pretend = 0, frame = 0
 1454              		@ frame_needed = 0, uses_anonymous_args = 0
 1455              		@ link register save eliminated.
2801:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
 1456              		.loc 1 2801 0
 1457 0000 0122     		movs	r2, #1
 1458 0002 014B     		ldr	r3, .L122
 1459 0004 5A71     		strb	r2, [r3, #5]
2802:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1460              		.loc 1 2802 0
 1461              		@ sp needed
 1462 0006 7047     		bx	lr
 1463              	.L123:
 1464              		.align	2
 1465              	.L122:
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 77


 1466 0008 00000000 		.word	.LANCHOR1
 1467              		.cfi_endproc
 1468              	.LFE64:
 1469              		.size	CapSense_EnableRawDataFilters, .-CapSense_EnableRawDataFilters
 1470              		.section	.text.CapSense_DisableRawDataFilters,"ax",%progbits
 1471              		.align	2
 1472              		.global	CapSense_DisableRawDataFilters
 1473              		.code	16
 1474              		.thumb_func
 1475              		.type	CapSense_DisableRawDataFilters, %function
 1476              	CapSense_DisableRawDataFilters:
 1477              	.LFB65:
2803:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2804:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2805:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_DisableRawDataFilters
2806:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2807:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2808:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2809:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Disables the rawdata filters for the sensor signals.
2810:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2811:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2812:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2813:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2814:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2815:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2816:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2817:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2818:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_enableRawFilters defines if the filters are enabled or not.
2819:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2820:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2821:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2822:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2823:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2824:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_DisableRawDataFilters(void)
2825:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1478              		.loc 1 2825 0
 1479              		.cfi_startproc
 1480              		@ args = 0, pretend = 0, frame = 0
 1481              		@ frame_needed = 0, uses_anonymous_args = 0
 1482              		@ link register save eliminated.
2826:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_enableRawFilters = CapSense_RAW_FILTERS_DISABLED;
 1483              		.loc 1 2826 0
 1484 0000 0022     		movs	r2, #0
 1485 0002 014B     		ldr	r3, .L125
 1486 0004 5A71     		strb	r2, [r3, #5]
2827:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1487              		.loc 1 2827 0
 1488              		@ sp needed
 1489 0006 7047     		bx	lr
 1490              	.L126:
 1491              		.align	2
 1492              	.L125:
 1493 0008 00000000 		.word	.LANCHOR1
 1494              		.cfi_endproc
 1495              	.LFE65:
 1496              		.size	CapSense_DisableRawDataFilters, .-CapSense_DisableRawDataFilters
 1497              		.global	CapSense_numberOfSensors
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 78


 1498              		.global	CapSense_rawDataIndex
 1499              		.global	CapSense_debounce
 1500              		.comm	CapSense_hysteresis,1,4
 1501              		.comm	CapSense_negativeNoiseThreshold,1,4
 1502              		.comm	CapSense_noiseThreshold,1,4
 1503              		.comm	CapSense_fingerThreshold,1,4
 1504              		.global	CapSense_enableRawFilters
 1505              		.global	CapSense_lowBaselineReset
 1506              		.comm	CapSense_lowBaselineResetCnt,1,4
 1507              		.global	CapSense_sensorOnMask
 1508              		.global	CapSense_sensorSignal
 1509              		.global	CapSense_sensorBaselineLow
 1510              		.global	CapSense_sensorBaseline
 1511              		.comm	CapSense_rawFilterData1,2,4
 1512              		.section	.rodata
 1513              		.align	2
 1514              		.type	CapSense_numberOfSensors, %object
 1515              		.size	CapSense_numberOfSensors, 1
 1516              	CapSense_numberOfSensors:
 1517 0000 01       		.byte	1
 1518 0001 000000   		.space	3
 1519              		.type	CapSense_rawDataIndex, %object
 1520              		.size	CapSense_rawDataIndex, 1
 1521              	CapSense_rawDataIndex:
 1522 0004 00       		.space	1
 1523              		.data
 1524              		.align	2
 1525              		.set	.LANCHOR1,. + 0
 1526              		.type	CapSense_debounce, %object
 1527              		.size	CapSense_debounce, 1
 1528              	CapSense_debounce:
 1529 0000 05       		.byte	5
 1530 0001 000000   		.space	3
 1531              		.type	CapSense_lowBaselineReset, %object
 1532              		.size	CapSense_lowBaselineReset, 1
 1533              	CapSense_lowBaselineReset:
 1534 0004 1E       		.byte	30
 1535              		.type	CapSense_enableRawFilters, %object
 1536              		.size	CapSense_enableRawFilters, 1
 1537              	CapSense_enableRawFilters:
 1538 0005 01       		.byte	1
 1539              		.bss
 1540              		.align	2
 1541              		.set	.LANCHOR0,. + 0
 1542              		.type	CapSense_sensorBaseline, %object
 1543              		.size	CapSense_sensorBaseline, 2
 1544              	CapSense_sensorBaseline:
 1545 0000 0000     		.space	2
 1546 0002 0000     		.space	2
 1547              		.type	CapSense_sensorBaselineLow, %object
 1548              		.size	CapSense_sensorBaselineLow, 1
 1549              	CapSense_sensorBaselineLow:
 1550 0004 00       		.space	1
 1551 0005 000000   		.space	3
 1552              		.type	CapSense_sensorSignal, %object
 1553              		.size	CapSense_sensorSignal, 1
 1554              	CapSense_sensorSignal:
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 79


 1555 0008 00       		.space	1
 1556 0009 000000   		.space	3
 1557              		.type	CapSense_debounceCounter, %object
 1558              		.size	CapSense_debounceCounter, 2
 1559              	CapSense_debounceCounter:
 1560 000c 0000     		.space	2
 1561 000e 0000     		.space	2
 1562              		.type	CapSense_sensorOnMask, %object
 1563              		.size	CapSense_sensorOnMask, 1
 1564              	CapSense_sensorOnMask:
 1565 0010 00       		.space	1
 1566              		.text
 1567              	.Letext0:
 1568              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1569              		.file 3 "Generated_Source\\PSoC4\\CapSense_PVT.h"
 1570              		.file 4 "Generated_Source\\PSoC4\\CapSense.h"
 1571              		.section	.debug_info,"",%progbits
 1572              	.Ldebug_info0:
 1573 0000 CA0D0000 		.4byte	0xdca
 1574 0004 0400     		.2byte	0x4
 1575 0006 00000000 		.4byte	.Ldebug_abbrev0
 1576 000a 04       		.byte	0x4
 1577 000b 01       		.uleb128 0x1
 1578 000c 08040000 		.4byte	.LASF129
 1579 0010 0C       		.byte	0xc
 1580 0011 8A090000 		.4byte	.LASF130
 1581 0015 5C010000 		.4byte	.LASF131
 1582 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1583 001d 00000000 		.4byte	0
 1584 0021 00000000 		.4byte	.Ldebug_line0
 1585 0025 02       		.uleb128 0x2
 1586 0026 01       		.byte	0x1
 1587 0027 06       		.byte	0x6
 1588 0028 F0090000 		.4byte	.LASF0
 1589 002c 02       		.uleb128 0x2
 1590 002d 01       		.byte	0x1
 1591 002e 08       		.byte	0x8
 1592 002f DC080000 		.4byte	.LASF1
 1593 0033 02       		.uleb128 0x2
 1594 0034 02       		.byte	0x2
 1595 0035 05       		.byte	0x5
 1596 0036 C9070000 		.4byte	.LASF2
 1597 003a 02       		.uleb128 0x2
 1598 003b 02       		.byte	0x2
 1599 003c 07       		.byte	0x7
 1600 003d FC090000 		.4byte	.LASF3
 1601 0041 02       		.uleb128 0x2
 1602 0042 04       		.byte	0x4
 1603 0043 05       		.byte	0x5
 1604 0044 D3070000 		.4byte	.LASF4
 1605 0048 02       		.uleb128 0x2
 1606 0049 04       		.byte	0x4
 1607 004a 07       		.byte	0x7
 1608 004b 6E080000 		.4byte	.LASF5
 1609 004f 02       		.uleb128 0x2
 1610 0050 08       		.byte	0x8
 1611 0051 05       		.byte	0x5
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 80


 1612 0052 63060000 		.4byte	.LASF6
 1613 0056 02       		.uleb128 0x2
 1614 0057 08       		.byte	0x8
 1615 0058 07       		.byte	0x7
 1616 0059 25030000 		.4byte	.LASF7
 1617 005d 03       		.uleb128 0x3
 1618 005e 04       		.byte	0x4
 1619 005f 05       		.byte	0x5
 1620 0060 696E7400 		.ascii	"int\000"
 1621 0064 02       		.uleb128 0x2
 1622 0065 04       		.byte	0x4
 1623 0066 07       		.byte	0x7
 1624 0067 3F010000 		.4byte	.LASF8
 1625 006b 04       		.uleb128 0x4
 1626 006c 6E0A0000 		.4byte	.LASF9
 1627 0070 02       		.byte	0x2
 1628 0071 D201     		.2byte	0x1d2
 1629 0073 2C000000 		.4byte	0x2c
 1630 0077 04       		.uleb128 0x4
 1631 0078 09060000 		.4byte	.LASF10
 1632 007c 02       		.byte	0x2
 1633 007d D301     		.2byte	0x1d3
 1634 007f 3A000000 		.4byte	0x3a
 1635 0083 04       		.uleb128 0x4
 1636 0084 55070000 		.4byte	.LASF11
 1637 0088 02       		.byte	0x2
 1638 0089 D401     		.2byte	0x1d4
 1639 008b 48000000 		.4byte	0x48
 1640 008f 02       		.uleb128 0x2
 1641 0090 04       		.byte	0x4
 1642 0091 04       		.byte	0x4
 1643 0092 E0020000 		.4byte	.LASF12
 1644 0096 02       		.uleb128 0x2
 1645 0097 08       		.byte	0x8
 1646 0098 04       		.byte	0x4
 1647 0099 740A0000 		.4byte	.LASF13
 1648 009d 02       		.uleb128 0x2
 1649 009e 01       		.byte	0x1
 1650 009f 08       		.byte	0x8
 1651 00a0 D2050000 		.4byte	.LASF14
 1652 00a4 02       		.uleb128 0x2
 1653 00a5 04       		.byte	0x4
 1654 00a6 07       		.byte	0x7
 1655 00a7 65080000 		.4byte	.LASF15
 1656 00ab 02       		.uleb128 0x2
 1657 00ac 08       		.byte	0x8
 1658 00ad 04       		.byte	0x4
 1659 00ae 95070000 		.4byte	.LASF16
 1660 00b2 05       		.uleb128 0x5
 1661 00b3 5C       		.byte	0x5c
 1662 00b4 03       		.byte	0x3
 1663 00b5 2F       		.byte	0x2f
 1664 00b6 CF010000 		.4byte	0x1cf
 1665 00ba 06       		.uleb128 0x6
 1666 00bb 15060000 		.4byte	.LASF17
 1667 00bf 03       		.byte	0x3
 1668 00c0 31       		.byte	0x31
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 81


 1669 00c1 CF010000 		.4byte	0x1cf
 1670 00c5 00       		.byte	0
 1671 00c6 06       		.uleb128 0x6
 1672 00c7 BA070000 		.4byte	.LASF18
 1673 00cb 03       		.byte	0x3
 1674 00cc 32       		.byte	0x32
 1675 00cd CF010000 		.4byte	0x1cf
 1676 00d1 04       		.byte	0x4
 1677 00d2 06       		.uleb128 0x6
 1678 00d3 66090000 		.4byte	.LASF19
 1679 00d7 03       		.byte	0x3
 1680 00d8 33       		.byte	0x33
 1681 00d9 CF010000 		.4byte	0x1cf
 1682 00dd 08       		.byte	0x8
 1683 00de 06       		.uleb128 0x6
 1684 00df CF080000 		.4byte	.LASF20
 1685 00e3 03       		.byte	0x3
 1686 00e4 34       		.byte	0x34
 1687 00e5 CF010000 		.4byte	0x1cf
 1688 00e9 0C       		.byte	0xc
 1689 00ea 06       		.uleb128 0x6
 1690 00eb E6090000 		.4byte	.LASF21
 1691 00ef 03       		.byte	0x3
 1692 00f0 35       		.byte	0x35
 1693 00f1 CF010000 		.4byte	0x1cf
 1694 00f5 10       		.byte	0x10
 1695 00f6 06       		.uleb128 0x6
 1696 00f7 FA070000 		.4byte	.LASF22
 1697 00fb 03       		.byte	0x3
 1698 00fc 36       		.byte	0x36
 1699 00fd D5010000 		.4byte	0x1d5
 1700 0101 14       		.byte	0x14
 1701 0102 06       		.uleb128 0x6
 1702 0103 E6020000 		.4byte	.LASF23
 1703 0107 03       		.byte	0x3
 1704 0108 37       		.byte	0x37
 1705 0109 E0010000 		.4byte	0x1e0
 1706 010d 18       		.byte	0x18
 1707 010e 06       		.uleb128 0x6
 1708 010f B5040000 		.4byte	.LASF24
 1709 0113 03       		.byte	0x3
 1710 0114 38       		.byte	0x38
 1711 0115 CF010000 		.4byte	0x1cf
 1712 0119 1C       		.byte	0x1c
 1713 011a 06       		.uleb128 0x6
 1714 011b 10030000 		.4byte	.LASF25
 1715 011f 03       		.byte	0x3
 1716 0120 39       		.byte	0x39
 1717 0121 CF010000 		.4byte	0x1cf
 1718 0125 20       		.byte	0x20
 1719 0126 06       		.uleb128 0x6
 1720 0127 D5010000 		.4byte	.LASF26
 1721 012b 03       		.byte	0x3
 1722 012c 3A       		.byte	0x3a
 1723 012d CF010000 		.4byte	0x1cf
 1724 0131 24       		.byte	0x24
 1725 0132 06       		.uleb128 0x6
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 82


 1726 0133 F5060000 		.4byte	.LASF27
 1727 0137 03       		.byte	0x3
 1728 0138 3B       		.byte	0x3b
 1729 0139 E6010000 		.4byte	0x1e6
 1730 013d 28       		.byte	0x28
 1731 013e 06       		.uleb128 0x6
 1732 013f A4010000 		.4byte	.LASF28
 1733 0143 03       		.byte	0x3
 1734 0144 3C       		.byte	0x3c
 1735 0145 E6010000 		.4byte	0x1e6
 1736 0149 2C       		.byte	0x2c
 1737 014a 06       		.uleb128 0x6
 1738 014b 98080000 		.4byte	.LASF29
 1739 014f 03       		.byte	0x3
 1740 0150 3D       		.byte	0x3d
 1741 0151 E6010000 		.4byte	0x1e6
 1742 0155 30       		.byte	0x30
 1743 0156 06       		.uleb128 0x6
 1744 0157 43080000 		.4byte	.LASF30
 1745 015b 03       		.byte	0x3
 1746 015c 3E       		.byte	0x3e
 1747 015d CF010000 		.4byte	0x1cf
 1748 0161 34       		.byte	0x34
 1749 0162 06       		.uleb128 0x6
 1750 0163 48000000 		.4byte	.LASF31
 1751 0167 03       		.byte	0x3
 1752 0168 3F       		.byte	0x3f
 1753 0169 CF010000 		.4byte	0x1cf
 1754 016d 38       		.byte	0x38
 1755 016e 06       		.uleb128 0x6
 1756 016f FA050000 		.4byte	.LASF32
 1757 0173 03       		.byte	0x3
 1758 0174 40       		.byte	0x40
 1759 0175 D5010000 		.4byte	0x1d5
 1760 0179 3C       		.byte	0x3c
 1761 017a 06       		.uleb128 0x6
 1762 017b 30020000 		.4byte	.LASF33
 1763 017f 03       		.byte	0x3
 1764 0180 41       		.byte	0x41
 1765 0181 D5010000 		.4byte	0x1d5
 1766 0185 40       		.byte	0x40
 1767 0186 06       		.uleb128 0x6
 1768 0187 95000000 		.4byte	.LASF34
 1769 018b 03       		.byte	0x3
 1770 018c 42       		.byte	0x42
 1771 018d D5010000 		.4byte	0x1d5
 1772 0191 44       		.byte	0x44
 1773 0192 06       		.uleb128 0x6
 1774 0193 BB060000 		.4byte	.LASF35
 1775 0197 03       		.byte	0x3
 1776 0198 43       		.byte	0x43
 1777 0199 FB010000 		.4byte	0x1fb
 1778 019d 48       		.byte	0x48
 1779 019e 06       		.uleb128 0x6
 1780 019f 93060000 		.4byte	.LASF36
 1781 01a3 03       		.byte	0x3
 1782 01a4 44       		.byte	0x44
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 83


 1783 01a5 0C020000 		.4byte	0x20c
 1784 01a9 4C       		.byte	0x4c
 1785 01aa 06       		.uleb128 0x6
 1786 01ab CB040000 		.4byte	.LASF37
 1787 01af 03       		.byte	0x3
 1788 01b0 45       		.byte	0x45
 1789 01b1 FB010000 		.4byte	0x1fb
 1790 01b5 50       		.byte	0x50
 1791 01b6 06       		.uleb128 0x6
 1792 01b7 A5000000 		.4byte	.LASF38
 1793 01bb 03       		.byte	0x3
 1794 01bc 46       		.byte	0x46
 1795 01bd 26020000 		.4byte	0x226
 1796 01c1 54       		.byte	0x54
 1797 01c2 06       		.uleb128 0x6
 1798 01c3 0F0A0000 		.4byte	.LASF39
 1799 01c7 03       		.byte	0x3
 1800 01c8 47       		.byte	0x47
 1801 01c9 41020000 		.4byte	0x241
 1802 01cd 58       		.byte	0x58
 1803 01ce 00       		.byte	0
 1804 01cf 07       		.uleb128 0x7
 1805 01d0 04       		.byte	0x4
 1806 01d1 6B000000 		.4byte	0x6b
 1807 01d5 07       		.uleb128 0x7
 1808 01d6 04       		.byte	0x4
 1809 01d7 DB010000 		.4byte	0x1db
 1810 01db 08       		.uleb128 0x8
 1811 01dc 6B000000 		.4byte	0x6b
 1812 01e0 07       		.uleb128 0x7
 1813 01e1 04       		.byte	0x4
 1814 01e2 83000000 		.4byte	0x83
 1815 01e6 07       		.uleb128 0x7
 1816 01e7 04       		.byte	0x4
 1817 01e8 77000000 		.4byte	0x77
 1818 01ec 09       		.uleb128 0x9
 1819 01ed 77000000 		.4byte	0x77
 1820 01f1 FB010000 		.4byte	0x1fb
 1821 01f5 0A       		.uleb128 0xa
 1822 01f6 83000000 		.4byte	0x83
 1823 01fa 00       		.byte	0
 1824 01fb 07       		.uleb128 0x7
 1825 01fc 04       		.byte	0x4
 1826 01fd EC010000 		.4byte	0x1ec
 1827 0201 0B       		.uleb128 0xb
 1828 0202 0C020000 		.4byte	0x20c
 1829 0206 0A       		.uleb128 0xa
 1830 0207 83000000 		.4byte	0x83
 1831 020b 00       		.byte	0
 1832 020c 07       		.uleb128 0x7
 1833 020d 04       		.byte	0x4
 1834 020e 01020000 		.4byte	0x201
 1835 0212 09       		.uleb128 0x9
 1836 0213 83000000 		.4byte	0x83
 1837 0217 26020000 		.4byte	0x226
 1838 021b 0A       		.uleb128 0xa
 1839 021c D5010000 		.4byte	0x1d5
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 84


 1840 0220 0A       		.uleb128 0xa
 1841 0221 83000000 		.4byte	0x83
 1842 0225 00       		.byte	0
 1843 0226 07       		.uleb128 0x7
 1844 0227 04       		.byte	0x4
 1845 0228 12020000 		.4byte	0x212
 1846 022c 0B       		.uleb128 0xb
 1847 022d 41020000 		.4byte	0x241
 1848 0231 0A       		.uleb128 0xa
 1849 0232 CF010000 		.4byte	0x1cf
 1850 0236 0A       		.uleb128 0xa
 1851 0237 83000000 		.4byte	0x83
 1852 023b 0A       		.uleb128 0xa
 1853 023c 83000000 		.4byte	0x83
 1854 0240 00       		.byte	0
 1855 0241 07       		.uleb128 0x7
 1856 0242 04       		.byte	0x4
 1857 0243 2C020000 		.4byte	0x22c
 1858 0247 0C       		.uleb128 0xc
 1859 0248 18010000 		.4byte	.LASF40
 1860 024c 03       		.byte	0x3
 1861 024d 48       		.byte	0x48
 1862 024e B2000000 		.4byte	0xb2
 1863 0252 05       		.uleb128 0x5
 1864 0253 0C       		.byte	0xc
 1865 0254 03       		.byte	0x3
 1866 0255 4A       		.byte	0x4a
 1867 0256 A3020000 		.4byte	0x2a3
 1868 025a 06       		.uleb128 0x6
 1869 025b 75050000 		.4byte	.LASF41
 1870 025f 03       		.byte	0x3
 1871 0260 4C       		.byte	0x4c
 1872 0261 6B000000 		.4byte	0x6b
 1873 0265 00       		.byte	0
 1874 0266 06       		.uleb128 0x6
 1875 0267 3D020000 		.4byte	.LASF42
 1876 026b 03       		.byte	0x3
 1877 026c 4D       		.byte	0x4d
 1878 026d 6B000000 		.4byte	0x6b
 1879 0271 01       		.byte	0x1
 1880 0272 06       		.uleb128 0x6
 1881 0273 4C010000 		.4byte	.LASF43
 1882 0277 03       		.byte	0x3
 1883 0278 4E       		.byte	0x4e
 1884 0279 6B000000 		.4byte	0x6b
 1885 027d 02       		.byte	0x2
 1886 027e 06       		.uleb128 0x6
 1887 027f AC050000 		.4byte	.LASF44
 1888 0283 03       		.byte	0x3
 1889 0284 4F       		.byte	0x4f
 1890 0285 77000000 		.4byte	0x77
 1891 0289 04       		.byte	0x4
 1892 028a 06       		.uleb128 0x6
 1893 028b AC070000 		.4byte	.LASF45
 1894 028f 03       		.byte	0x3
 1895 0290 50       		.byte	0x50
 1896 0291 77000000 		.4byte	0x77
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 85


 1897 0295 06       		.byte	0x6
 1898 0296 06       		.uleb128 0x6
 1899 0297 80080000 		.4byte	.LASF46
 1900 029b 03       		.byte	0x3
 1901 029c 51       		.byte	0x51
 1902 029d A3020000 		.4byte	0x2a3
 1903 02a1 08       		.byte	0x8
 1904 02a2 00       		.byte	0
 1905 02a3 07       		.uleb128 0x7
 1906 02a4 04       		.byte	0x4
 1907 02a5 A9020000 		.4byte	0x2a9
 1908 02a9 08       		.uleb128 0x8
 1909 02aa 47020000 		.4byte	0x247
 1910 02ae 0C       		.uleb128 0xc
 1911 02af 76030000 		.4byte	.LASF47
 1912 02b3 03       		.byte	0x3
 1913 02b4 52       		.byte	0x52
 1914 02b5 52020000 		.4byte	0x252
 1915 02b9 0D       		.uleb128 0xd
 1916 02ba E3060000 		.4byte	.LASF48
 1917 02be 01       		.byte	0x1
 1918 02bf 86       		.byte	0x86
 1919 02c0 00000000 		.4byte	.LFB32
 1920 02c4 3C000000 		.4byte	.LFE32-.LFB32
 1921 02c8 01       		.uleb128 0x1
 1922 02c9 9C       		.byte	0x9c
 1923 02ca ED020000 		.4byte	0x2ed
 1924 02ce 0E       		.uleb128 0xe
 1925 02cf A5050000 		.4byte	.LASF50
 1926 02d3 01       		.byte	0x1
 1927 02d4 86       		.byte	0x86
 1928 02d5 83000000 		.4byte	0x83
 1929 02d9 00000000 		.4byte	.LLST0
 1930 02dd 0F       		.uleb128 0xf
 1931 02de 56030000 		.4byte	.LASF52
 1932 02e2 01       		.byte	0x1
 1933 02e3 8A       		.byte	0x8a
 1934 02e4 6B000000 		.4byte	0x6b
 1935 02e8 21000000 		.4byte	.LLST1
 1936 02ec 00       		.byte	0
 1937 02ed 0D       		.uleb128 0xd
 1938 02ee E5010000 		.4byte	.LASF49
 1939 02f2 01       		.byte	0x1
 1940 02f3 D2       		.byte	0xd2
 1941 02f4 00000000 		.4byte	.LFB33
 1942 02f8 18000000 		.4byte	.LFE33-.LFB33
 1943 02fc 01       		.uleb128 0x1
 1944 02fd 9C       		.byte	0x9c
 1945 02fe 3F030000 		.4byte	0x33f
 1946 0302 0E       		.uleb128 0xe
 1947 0303 A5050000 		.4byte	.LASF50
 1948 0307 01       		.byte	0x1
 1949 0308 D2       		.byte	0xd2
 1950 0309 83000000 		.4byte	0x83
 1951 030d 34000000 		.4byte	.LLST2
 1952 0311 10       		.uleb128 0x10
 1953 0312 08000000 		.4byte	.LVL5
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 86


 1954 0316 800D0000 		.4byte	0xd80
 1955 031a 25030000 		.4byte	0x325
 1956 031e 11       		.uleb128 0x11
 1957 031f 01       		.uleb128 0x1
 1958 0320 50       		.byte	0x50
 1959 0321 02       		.uleb128 0x2
 1960 0322 74       		.byte	0x74
 1961 0323 00       		.sleb128 0
 1962 0324 00       		.byte	0
 1963 0325 12       		.uleb128 0x12
 1964 0326 0C000000 		.4byte	.LVL6
 1965 032a 8B0D0000 		.4byte	0xd8b
 1966 032e 13       		.uleb128 0x13
 1967 032f 16000000 		.4byte	.LVL7
 1968 0333 B9020000 		.4byte	0x2b9
 1969 0337 11       		.uleb128 0x11
 1970 0338 01       		.uleb128 0x1
 1971 0339 50       		.byte	0x50
 1972 033a 02       		.uleb128 0x2
 1973 033b 74       		.byte	0x74
 1974 033c 00       		.sleb128 0
 1975 033d 00       		.byte	0
 1976 033e 00       		.byte	0
 1977 033f 0D       		.uleb128 0xd
 1978 0340 10090000 		.4byte	.LASF51
 1979 0344 01       		.byte	0x1
 1980 0345 F7       		.byte	0xf7
 1981 0346 00000000 		.4byte	.LFB34
 1982 034a 14000000 		.4byte	.LFE34-.LFB34
 1983 034e 01       		.uleb128 0x1
 1984 034f 9C       		.byte	0x9c
 1985 0350 72030000 		.4byte	0x372
 1986 0354 14       		.uleb128 0x14
 1987 0355 6900     		.ascii	"i\000"
 1988 0357 01       		.byte	0x1
 1989 0358 F9       		.byte	0xf9
 1990 0359 83000000 		.4byte	0x83
 1991 035d 60000000 		.4byte	.LLST3
 1992 0361 13       		.uleb128 0x13
 1993 0362 0C000000 		.4byte	.LVL11
 1994 0366 ED020000 		.4byte	0x2ed
 1995 036a 11       		.uleb128 0x11
 1996 036b 01       		.uleb128 0x1
 1997 036c 50       		.byte	0x50
 1998 036d 02       		.uleb128 0x2
 1999 036e 74       		.byte	0x74
 2000 036f 00       		.sleb128 0
 2001 0370 00       		.byte	0
 2002 0371 00       		.byte	0
 2003 0372 15       		.uleb128 0x15
 2004 0373 B1010000 		.4byte	.LASF53
 2005 0377 01       		.byte	0x1
 2006 0378 1A01     		.2byte	0x11a
 2007 037a 00000000 		.4byte	.LFB35
 2008 037e 30000000 		.4byte	.LFE35-.LFB35
 2009 0382 01       		.uleb128 0x1
 2010 0383 9C       		.byte	0x9c
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 87


 2011 0384 DD030000 		.4byte	0x3dd
 2012 0388 16       		.uleb128 0x16
 2013 0389 6900     		.ascii	"i\000"
 2014 038b 01       		.byte	0x1
 2015 038c 1C01     		.2byte	0x11c
 2016 038e 83000000 		.4byte	0x83
 2017 0392 7F000000 		.4byte	.LLST4
 2018 0396 17       		.uleb128 0x17
 2019 0397 FB000000 		.4byte	.LASF54
 2020 039b 01       		.byte	0x1
 2021 039c 1D01     		.2byte	0x11d
 2022 039e 83000000 		.4byte	0x83
 2023 03a2 92000000 		.4byte	.LLST5
 2024 03a6 12       		.uleb128 0x12
 2025 03a7 06000000 		.4byte	.LVL14
 2026 03ab 960D0000 		.4byte	0xd96
 2027 03af 12       		.uleb128 0x12
 2028 03b0 0A000000 		.4byte	.LVL15
 2029 03b4 8B0D0000 		.4byte	0xd8b
 2030 03b8 10       		.uleb128 0x10
 2031 03b9 1A000000 		.4byte	.LVL17
 2032 03bd A10D0000 		.4byte	0xda1
 2033 03c1 CC030000 		.4byte	0x3cc
 2034 03c5 11       		.uleb128 0x11
 2035 03c6 01       		.uleb128 0x1
 2036 03c7 51       		.byte	0x51
 2037 03c8 02       		.uleb128 0x2
 2038 03c9 74       		.byte	0x74
 2039 03ca 00       		.sleb128 0
 2040 03cb 00       		.byte	0
 2041 03cc 13       		.uleb128 0x13
 2042 03cd 24000000 		.4byte	.LVL19
 2043 03d1 B9020000 		.4byte	0x2b9
 2044 03d5 11       		.uleb128 0x11
 2045 03d6 01       		.uleb128 0x1
 2046 03d7 50       		.byte	0x50
 2047 03d8 02       		.uleb128 0x2
 2048 03d9 74       		.byte	0x74
 2049 03da 00       		.sleb128 0
 2050 03db 00       		.byte	0
 2051 03dc 00       		.byte	0
 2052 03dd 18       		.uleb128 0x18
 2053 03de 30090000 		.4byte	.LASF57
 2054 03e2 01       		.byte	0x1
 2055 03e3 AF02     		.2byte	0x2af
 2056 03e5 77000000 		.4byte	0x77
 2057 03e9 00000000 		.4byte	.LFB40
 2058 03ed 0C000000 		.4byte	.LFE40-.LFB40
 2059 03f1 01       		.uleb128 0x1
 2060 03f2 9C       		.byte	0x9c
 2061 03f3 08040000 		.4byte	0x408
 2062 03f7 19       		.uleb128 0x19
 2063 03f8 A5050000 		.4byte	.LASF50
 2064 03fc 01       		.byte	0x1
 2065 03fd AF02     		.2byte	0x2af
 2066 03ff 83000000 		.4byte	0x83
 2067 0403 A5000000 		.4byte	.LLST6
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 88


 2068 0407 00       		.byte	0
 2069 0408 15       		.uleb128 0x15
 2070 0409 17020000 		.4byte	.LASF55
 2071 040d 01       		.byte	0x1
 2072 040e CA02     		.2byte	0x2ca
 2073 0410 00000000 		.4byte	.LFB41
 2074 0414 0C000000 		.4byte	.LFE41-.LFB41
 2075 0418 01       		.uleb128 0x1
 2076 0419 9C       		.byte	0x9c
 2077 041a 3D040000 		.4byte	0x43d
 2078 041e 19       		.uleb128 0x19
 2079 041f A5050000 		.4byte	.LASF50
 2080 0423 01       		.byte	0x1
 2081 0424 CA02     		.2byte	0x2ca
 2082 0426 83000000 		.4byte	0x83
 2083 042a C6000000 		.4byte	.LLST7
 2084 042e 1A       		.uleb128 0x1a
 2085 042f 10060000 		.4byte	.LASF56
 2086 0433 01       		.byte	0x1
 2087 0434 CA02     		.2byte	0x2ca
 2088 0436 77000000 		.4byte	0x77
 2089 043a 01       		.uleb128 0x1
 2090 043b 51       		.byte	0x51
 2091 043c 00       		.byte	0
 2092 043d 18       		.uleb128 0x18
 2093 043e 96040000 		.4byte	.LASF58
 2094 0442 01       		.byte	0x1
 2095 0443 E502     		.2byte	0x2e5
 2096 0445 6B000000 		.4byte	0x6b
 2097 0449 00000000 		.4byte	.LFB42
 2098 044d 0C000000 		.4byte	.LFE42-.LFB42
 2099 0451 01       		.uleb128 0x1
 2100 0452 9C       		.byte	0x9c
 2101 0453 68040000 		.4byte	0x468
 2102 0457 19       		.uleb128 0x19
 2103 0458 A5050000 		.4byte	.LASF50
 2104 045c 01       		.byte	0x1
 2105 045d E502     		.2byte	0x2e5
 2106 045f 83000000 		.4byte	0x83
 2107 0463 E7000000 		.4byte	.LLST8
 2108 0467 00       		.byte	0
 2109 0468 15       		.uleb128 0x15
 2110 0469 4D020000 		.4byte	.LASF59
 2111 046d 01       		.byte	0x1
 2112 046e 0003     		.2byte	0x300
 2113 0470 00000000 		.4byte	.LFB43
 2114 0474 0C000000 		.4byte	.LFE43-.LFB43
 2115 0478 01       		.uleb128 0x1
 2116 0479 9C       		.byte	0x9c
 2117 047a 9D040000 		.4byte	0x49d
 2118 047e 19       		.uleb128 0x19
 2119 047f A5050000 		.4byte	.LASF50
 2120 0483 01       		.byte	0x1
 2121 0484 0003     		.2byte	0x300
 2122 0486 83000000 		.4byte	0x83
 2123 048a 08010000 		.4byte	.LLST9
 2124 048e 1A       		.uleb128 0x1a
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 89


 2125 048f E5030000 		.4byte	.LASF60
 2126 0493 01       		.byte	0x1
 2127 0494 0003     		.2byte	0x300
 2128 0496 6B000000 		.4byte	0x6b
 2129 049a 01       		.uleb128 0x1
 2130 049b 51       		.byte	0x51
 2131 049c 00       		.byte	0
 2132 049d 18       		.uleb128 0x18
 2133 049e 79070000 		.4byte	.LASF61
 2134 04a2 01       		.byte	0x1
 2135 04a3 1B03     		.2byte	0x31b
 2136 04a5 6B000000 		.4byte	0x6b
 2137 04a9 00000000 		.4byte	.LFB44
 2138 04ad 0C000000 		.4byte	.LFE44-.LFB44
 2139 04b1 01       		.uleb128 0x1
 2140 04b2 9C       		.byte	0x9c
 2141 04b3 C8040000 		.4byte	0x4c8
 2142 04b7 19       		.uleb128 0x19
 2143 04b8 56030000 		.4byte	.LASF52
 2144 04bc 01       		.byte	0x1
 2145 04bd 1B03     		.2byte	0x31b
 2146 04bf 83000000 		.4byte	0x83
 2147 04c3 29010000 		.4byte	.LLST10
 2148 04c7 00       		.byte	0
 2149 04c8 18       		.uleb128 0x18
 2150 04c9 F5020000 		.4byte	.LASF62
 2151 04cd 01       		.byte	0x1
 2152 04ce 3603     		.2byte	0x336
 2153 04d0 6B000000 		.4byte	0x6b
 2154 04d4 00000000 		.4byte	.LFB45
 2155 04d8 0C000000 		.4byte	.LFE45-.LFB45
 2156 04dc 01       		.uleb128 0x1
 2157 04dd 9C       		.byte	0x9c
 2158 04de F3040000 		.4byte	0x4f3
 2159 04e2 19       		.uleb128 0x19
 2160 04e3 56030000 		.4byte	.LASF52
 2161 04e7 01       		.byte	0x1
 2162 04e8 3603     		.2byte	0x336
 2163 04ea 83000000 		.4byte	0x83
 2164 04ee 4A010000 		.4byte	.LLST11
 2165 04f2 00       		.byte	0
 2166 04f3 18       		.uleb128 0x18
 2167 04f4 EB030000 		.4byte	.LASF63
 2168 04f8 01       		.byte	0x1
 2169 04f9 5203     		.2byte	0x352
 2170 04fb 6B000000 		.4byte	0x6b
 2171 04ff 00000000 		.4byte	.LFB46
 2172 0503 0C000000 		.4byte	.LFE46-.LFB46
 2173 0507 01       		.uleb128 0x1
 2174 0508 9C       		.byte	0x9c
 2175 0509 1E050000 		.4byte	0x51e
 2176 050d 19       		.uleb128 0x19
 2177 050e 56030000 		.4byte	.LASF52
 2178 0512 01       		.byte	0x1
 2179 0513 5203     		.2byte	0x352
 2180 0515 83000000 		.4byte	0x83
 2181 0519 6B010000 		.4byte	.LLST12
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 90


 2182 051d 00       		.byte	0
 2183 051e 18       		.uleb128 0x18
 2184 051f D7050000 		.4byte	.LASF64
 2185 0523 01       		.byte	0x1
 2186 0524 6E03     		.2byte	0x36e
 2187 0526 6B000000 		.4byte	0x6b
 2188 052a 00000000 		.4byte	.LFB47
 2189 052e 0C000000 		.4byte	.LFE47-.LFB47
 2190 0532 01       		.uleb128 0x1
 2191 0533 9C       		.byte	0x9c
 2192 0534 49050000 		.4byte	0x549
 2193 0538 19       		.uleb128 0x19
 2194 0539 56030000 		.4byte	.LASF52
 2195 053d 01       		.byte	0x1
 2196 053e 6E03     		.2byte	0x36e
 2197 0540 83000000 		.4byte	0x83
 2198 0544 8C010000 		.4byte	.LLST13
 2199 0548 00       		.byte	0
 2200 0549 15       		.uleb128 0x15
 2201 054a AA030000 		.4byte	.LASF65
 2202 054e 01       		.byte	0x1
 2203 054f 8F03     		.2byte	0x38f
 2204 0551 00000000 		.4byte	.LFB48
 2205 0555 0C000000 		.4byte	.LFE48-.LFB48
 2206 0559 01       		.uleb128 0x1
 2207 055a 9C       		.byte	0x9c
 2208 055b 7C050000 		.4byte	0x57c
 2209 055f 1A       		.uleb128 0x1a
 2210 0560 56030000 		.4byte	.LASF52
 2211 0564 01       		.byte	0x1
 2212 0565 8F03     		.2byte	0x38f
 2213 0567 83000000 		.4byte	0x83
 2214 056b 01       		.uleb128 0x1
 2215 056c 50       		.byte	0x50
 2216 056d 1A       		.uleb128 0x1a
 2217 056e E5030000 		.4byte	.LASF60
 2218 0572 01       		.byte	0x1
 2219 0573 8F03     		.2byte	0x38f
 2220 0575 6B000000 		.4byte	0x6b
 2221 0579 01       		.uleb128 0x1
 2222 057a 51       		.byte	0x51
 2223 057b 00       		.byte	0
 2224 057c 15       		.uleb128 0x15
 2225 057d 93020000 		.4byte	.LASF66
 2226 0581 01       		.byte	0x1
 2227 0582 AB03     		.2byte	0x3ab
 2228 0584 00000000 		.4byte	.LFB49
 2229 0588 0C000000 		.4byte	.LFE49-.LFB49
 2230 058c 01       		.uleb128 0x1
 2231 058d 9C       		.byte	0x9c
 2232 058e AF050000 		.4byte	0x5af
 2233 0592 1A       		.uleb128 0x1a
 2234 0593 56030000 		.4byte	.LASF52
 2235 0597 01       		.byte	0x1
 2236 0598 AB03     		.2byte	0x3ab
 2237 059a 83000000 		.4byte	0x83
 2238 059e 01       		.uleb128 0x1
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 91


 2239 059f 50       		.byte	0x50
 2240 05a0 1A       		.uleb128 0x1a
 2241 05a1 E5030000 		.4byte	.LASF60
 2242 05a5 01       		.byte	0x1
 2243 05a6 AB03     		.2byte	0x3ab
 2244 05a8 6B000000 		.4byte	0x6b
 2245 05ac 01       		.uleb128 0x1
 2246 05ad 51       		.byte	0x51
 2247 05ae 00       		.byte	0
 2248 05af 15       		.uleb128 0x15
 2249 05b0 5C070000 		.4byte	.LASF67
 2250 05b4 01       		.byte	0x1
 2251 05b5 C703     		.2byte	0x3c7
 2252 05b7 00000000 		.4byte	.LFB50
 2253 05bb 0C000000 		.4byte	.LFE50-.LFB50
 2254 05bf 01       		.uleb128 0x1
 2255 05c0 9C       		.byte	0x9c
 2256 05c1 E2050000 		.4byte	0x5e2
 2257 05c5 1A       		.uleb128 0x1a
 2258 05c6 56030000 		.4byte	.LASF52
 2259 05ca 01       		.byte	0x1
 2260 05cb C703     		.2byte	0x3c7
 2261 05cd 83000000 		.4byte	0x83
 2262 05d1 01       		.uleb128 0x1
 2263 05d2 50       		.byte	0x50
 2264 05d3 1A       		.uleb128 0x1a
 2265 05d4 E5030000 		.4byte	.LASF60
 2266 05d8 01       		.byte	0x1
 2267 05d9 C703     		.2byte	0x3c7
 2268 05db 6B000000 		.4byte	0x6b
 2269 05df 01       		.uleb128 0x1
 2270 05e0 51       		.byte	0x51
 2271 05e1 00       		.byte	0
 2272 05e2 15       		.uleb128 0x15
 2273 05e3 32070000 		.4byte	.LASF68
 2274 05e7 01       		.byte	0x1
 2275 05e8 E403     		.2byte	0x3e4
 2276 05ea 00000000 		.4byte	.LFB51
 2277 05ee 0C000000 		.4byte	.LFE51-.LFB51
 2278 05f2 01       		.uleb128 0x1
 2279 05f3 9C       		.byte	0x9c
 2280 05f4 15060000 		.4byte	0x615
 2281 05f8 1A       		.uleb128 0x1a
 2282 05f9 56030000 		.4byte	.LASF52
 2283 05fd 01       		.byte	0x1
 2284 05fe E403     		.2byte	0x3e4
 2285 0600 83000000 		.4byte	0x83
 2286 0604 01       		.uleb128 0x1
 2287 0605 50       		.byte	0x50
 2288 0606 1A       		.uleb128 0x1a
 2289 0607 E5030000 		.4byte	.LASF60
 2290 060b 01       		.byte	0x1
 2291 060c E403     		.2byte	0x3e4
 2292 060e 6B000000 		.4byte	0x6b
 2293 0612 01       		.uleb128 0x1
 2294 0613 51       		.byte	0x51
 2295 0614 00       		.byte	0
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 92


 2296 0615 15       		.uleb128 0x15
 2297 0616 AA080000 		.4byte	.LASF69
 2298 061a 01       		.byte	0x1
 2299 061b 0004     		.2byte	0x400
 2300 061d 00000000 		.4byte	.LFB52
 2301 0621 0C000000 		.4byte	.LFE52-.LFB52
 2302 0625 01       		.uleb128 0x1
 2303 0626 9C       		.byte	0x9c
 2304 0627 48060000 		.4byte	0x648
 2305 062b 1A       		.uleb128 0x1a
 2306 062c 56030000 		.4byte	.LASF52
 2307 0630 01       		.byte	0x1
 2308 0631 0004     		.2byte	0x400
 2309 0633 83000000 		.4byte	0x83
 2310 0637 01       		.uleb128 0x1
 2311 0638 50       		.byte	0x50
 2312 0639 1A       		.uleb128 0x1a
 2313 063a E5030000 		.4byte	.LASF60
 2314 063e 01       		.byte	0x1
 2315 063f 0004     		.2byte	0x400
 2316 0641 6B000000 		.4byte	0x6b
 2317 0645 01       		.uleb128 0x1
 2318 0646 51       		.byte	0x51
 2319 0647 00       		.byte	0
 2320 0648 15       		.uleb128 0x15
 2321 0649 49090000 		.4byte	.LASF70
 2322 064d 01       		.byte	0x1
 2323 064e 1C04     		.2byte	0x41c
 2324 0650 00000000 		.4byte	.LFB53
 2325 0654 0C000000 		.4byte	.LFE53-.LFB53
 2326 0658 01       		.uleb128 0x1
 2327 0659 9C       		.byte	0x9c
 2328 065a 7D060000 		.4byte	0x67d
 2329 065e 19       		.uleb128 0x19
 2330 065f A5050000 		.4byte	.LASF50
 2331 0663 01       		.byte	0x1
 2332 0664 1C04     		.2byte	0x41c
 2333 0666 83000000 		.4byte	0x83
 2334 066a AD010000 		.4byte	.LLST14
 2335 066e 1A       		.uleb128 0x1a
 2336 066f E5030000 		.4byte	.LASF60
 2337 0673 01       		.byte	0x1
 2338 0674 1C04     		.2byte	0x41c
 2339 0676 6B000000 		.4byte	0x6b
 2340 067a 01       		.uleb128 0x1
 2341 067b 51       		.byte	0x51
 2342 067c 00       		.byte	0
 2343 067d 18       		.uleb128 0x18
 2344 067e 9E060000 		.4byte	.LASF71
 2345 0682 01       		.byte	0x1
 2346 0683 4A04     		.2byte	0x44a
 2347 0685 83000000 		.4byte	0x83
 2348 0689 00000000 		.4byte	.LFB54
 2349 068d A8000000 		.4byte	.LFE54-.LFB54
 2350 0691 01       		.uleb128 0x1
 2351 0692 9C       		.byte	0x9c
 2352 0693 67070000 		.4byte	0x767
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 93


 2353 0697 19       		.uleb128 0x19
 2354 0698 A5050000 		.4byte	.LASF50
 2355 069c 01       		.byte	0x1
 2356 069d 4A04     		.2byte	0x44a
 2357 069f 83000000 		.4byte	0x83
 2358 06a3 CE010000 		.4byte	.LLST15
 2359 06a7 1B       		.uleb128 0x1b
 2360 06a8 56030000 		.4byte	.LASF52
 2361 06ac 01       		.byte	0x1
 2362 06ad 4C04     		.2byte	0x44c
 2363 06af 6B000000 		.4byte	0x6b
 2364 06b3 17       		.uleb128 0x17
 2365 06b4 8A060000 		.4byte	.LASF72
 2366 06b8 01       		.byte	0x1
 2367 06b9 4D04     		.2byte	0x44d
 2368 06bb 6B000000 		.4byte	0x6b
 2369 06bf 05020000 		.4byte	.LLST16
 2370 06c3 1B       		.uleb128 0x1b
 2371 06c4 02090000 		.4byte	.LASF73
 2372 06c8 01       		.byte	0x1
 2373 06c9 4E04     		.2byte	0x44e
 2374 06cb 6B000000 		.4byte	0x6b
 2375 06cf 17       		.uleb128 0x17
 2376 06d0 BF080000 		.4byte	.LASF74
 2377 06d4 01       		.byte	0x1
 2378 06d5 5004     		.2byte	0x450
 2379 06d7 6B000000 		.4byte	0x6b
 2380 06db 18020000 		.4byte	.LLST17
 2381 06df 17       		.uleb128 0x17
 2382 06e0 DC040000 		.4byte	.LASF75
 2383 06e4 01       		.byte	0x1
 2384 06e5 5104     		.2byte	0x451
 2385 06e7 6B000000 		.4byte	0x6b
 2386 06eb 2B020000 		.4byte	.LLST18
 2387 06ef 10       		.uleb128 0x10
 2388 06f0 24000000 		.4byte	.LVL50
 2389 06f4 A10D0000 		.4byte	0xda1
 2390 06f8 0C070000 		.4byte	0x70c
 2391 06fc 11       		.uleb128 0x11
 2392 06fd 01       		.uleb128 0x1
 2393 06fe 50       		.byte	0x50
 2394 06ff 05       		.uleb128 0x5
 2395 0700 03       		.byte	0x3
 2396 0701 10000000 		.4byte	.LANCHOR0+16
 2397 0705 11       		.uleb128 0x11
 2398 0706 01       		.uleb128 0x1
 2399 0707 51       		.byte	0x51
 2400 0708 02       		.uleb128 0x2
 2401 0709 74       		.byte	0x74
 2402 070a 00       		.sleb128 0
 2403 070b 00       		.byte	0
 2404 070c 10       		.uleb128 0x10
 2405 070d 42000000 		.4byte	.LVL52
 2406 0711 AC0D0000 		.4byte	0xdac
 2407 0715 2B070000 		.4byte	0x72b
 2408 0719 11       		.uleb128 0x11
 2409 071a 01       		.uleb128 0x1
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 94


 2410 071b 50       		.byte	0x50
 2411 071c 02       		.uleb128 0x2
 2412 071d 76       		.byte	0x76
 2413 071e 10       		.sleb128 16
 2414 071f 11       		.uleb128 0x11
 2415 0720 01       		.uleb128 0x1
 2416 0721 51       		.byte	0x51
 2417 0722 02       		.uleb128 0x2
 2418 0723 74       		.byte	0x74
 2419 0724 00       		.sleb128 0
 2420 0725 11       		.uleb128 0x11
 2421 0726 01       		.uleb128 0x1
 2422 0727 52       		.byte	0x52
 2423 0728 01       		.uleb128 0x1
 2424 0729 30       		.byte	0x30
 2425 072a 00       		.byte	0
 2426 072b 10       		.uleb128 0x10
 2427 072c 72000000 		.4byte	.LVL55
 2428 0730 AC0D0000 		.4byte	0xdac
 2429 0734 4D070000 		.4byte	0x74d
 2430 0738 11       		.uleb128 0x11
 2431 0739 01       		.uleb128 0x1
 2432 073a 50       		.byte	0x50
 2433 073b 05       		.uleb128 0x5
 2434 073c 03       		.byte	0x3
 2435 073d 10000000 		.4byte	.LANCHOR0+16
 2436 0741 11       		.uleb128 0x11
 2437 0742 01       		.uleb128 0x1
 2438 0743 51       		.byte	0x51
 2439 0744 02       		.uleb128 0x2
 2440 0745 74       		.byte	0x74
 2441 0746 00       		.sleb128 0
 2442 0747 11       		.uleb128 0x11
 2443 0748 01       		.uleb128 0x1
 2444 0749 52       		.byte	0x52
 2445 074a 01       		.uleb128 0x1
 2446 074b 31       		.byte	0x31
 2447 074c 00       		.byte	0
 2448 074d 13       		.uleb128 0x13
 2449 074e 86000000 		.4byte	.LVL56
 2450 0752 A10D0000 		.4byte	0xda1
 2451 0756 11       		.uleb128 0x11
 2452 0757 01       		.uleb128 0x1
 2453 0758 50       		.byte	0x50
 2454 0759 05       		.uleb128 0x5
 2455 075a 03       		.byte	0x3
 2456 075b 10000000 		.4byte	.LANCHOR0+16
 2457 075f 11       		.uleb128 0x11
 2458 0760 01       		.uleb128 0x1
 2459 0761 51       		.byte	0x51
 2460 0762 02       		.uleb128 0x2
 2461 0763 74       		.byte	0x74
 2462 0764 00       		.sleb128 0
 2463 0765 00       		.byte	0
 2464 0766 00       		.byte	0
 2465 0767 18       		.uleb128 0x18
 2466 0768 510A0000 		.4byte	.LASF76
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 95


 2467 076c 01       		.byte	0x1
 2468 076d 9C04     		.2byte	0x49c
 2469 076f 83000000 		.4byte	0x83
 2470 0773 00000000 		.4byte	.LFB55
 2471 0777 10000000 		.4byte	.LFE55-.LFB55
 2472 077b 01       		.uleb128 0x1
 2473 077c 9C       		.byte	0x9c
 2474 077d CE070000 		.4byte	0x7ce
 2475 0781 19       		.uleb128 0x19
 2476 0782 56030000 		.4byte	.LASF52
 2477 0786 01       		.byte	0x1
 2478 0787 9C04     		.2byte	0x49c
 2479 0789 83000000 		.4byte	0x83
 2480 078d 49020000 		.4byte	.LLST19
 2481 0791 17       		.uleb128 0x17
 2482 0792 24060000 		.4byte	.LASF77
 2483 0796 01       		.byte	0x1
 2484 0797 9E04     		.2byte	0x49e
 2485 0799 83000000 		.4byte	0x83
 2486 079d 6A020000 		.4byte	.LLST20
 2487 07a1 1C       		.uleb128 0x1c
 2488 07a2 0B010000 		.4byte	.LASF78
 2489 07a6 01       		.byte	0x1
 2490 07a7 9F04     		.2byte	0x49f
 2491 07a9 83000000 		.4byte	0x83
 2492 07ad 01       		.byte	0x1
 2493 07ae 17       		.uleb128 0x17
 2494 07af C6090000 		.4byte	.LASF79
 2495 07b3 01       		.byte	0x1
 2496 07b4 A004     		.2byte	0x4a0
 2497 07b6 83000000 		.4byte	0x83
 2498 07ba 8A020000 		.4byte	.LLST21
 2499 07be 13       		.uleb128 0x13
 2500 07bf 08000000 		.4byte	.LVL63
 2501 07c3 7D060000 		.4byte	0x67d
 2502 07c7 11       		.uleb128 0x11
 2503 07c8 01       		.uleb128 0x1
 2504 07c9 50       		.byte	0x50
 2505 07ca 01       		.uleb128 0x1
 2506 07cb 30       		.byte	0x30
 2507 07cc 00       		.byte	0
 2508 07cd 00       		.byte	0
 2509 07ce 18       		.uleb128 0x18
 2510 07cf 1C050000 		.4byte	.LASF80
 2511 07d3 01       		.byte	0x1
 2512 07d4 CA04     		.2byte	0x4ca
 2513 07d6 83000000 		.4byte	0x83
 2514 07da 00000000 		.4byte	.LFB56
 2515 07de 1E000000 		.4byte	.LFE56-.LFB56
 2516 07e2 01       		.uleb128 0x1
 2517 07e3 9C       		.byte	0x9c
 2518 07e4 17080000 		.4byte	0x817
 2519 07e8 16       		.uleb128 0x16
 2520 07e9 6900     		.ascii	"i\000"
 2521 07eb 01       		.byte	0x1
 2522 07ec CD04     		.2byte	0x4cd
 2523 07ee 83000000 		.4byte	0x83
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 96


 2524 07f2 A9020000 		.4byte	.LLST22
 2525 07f6 17       		.uleb128 0x17
 2526 07f7 C6090000 		.4byte	.LASF79
 2527 07fb 01       		.byte	0x1
 2528 07fc CE04     		.2byte	0x4ce
 2529 07fe 83000000 		.4byte	0x83
 2530 0802 C8020000 		.4byte	.LLST23
 2531 0806 13       		.uleb128 0x13
 2532 0807 0E000000 		.4byte	.LVL67
 2533 080b 67070000 		.4byte	0x767
 2534 080f 11       		.uleb128 0x11
 2535 0810 01       		.uleb128 0x1
 2536 0811 50       		.byte	0x50
 2537 0812 02       		.uleb128 0x2
 2538 0813 74       		.byte	0x74
 2539 0814 00       		.sleb128 0
 2540 0815 00       		.byte	0
 2541 0816 00       		.byte	0
 2542 0817 15       		.uleb128 0x15
 2543 0818 BC050000 		.4byte	.LASF81
 2544 081c 01       		.byte	0x1
 2545 081d F904     		.2byte	0x4f9
 2546 081f 00000000 		.4byte	.LFB57
 2547 0823 14000000 		.4byte	.LFE57-.LFB57
 2548 0827 01       		.uleb128 0x1
 2549 0828 9C       		.byte	0x9c
 2550 0829 6F080000 		.4byte	0x86f
 2551 082d 19       		.uleb128 0x19
 2552 082e 56030000 		.4byte	.LASF52
 2553 0832 01       		.byte	0x1
 2554 0833 F904     		.2byte	0x4f9
 2555 0835 83000000 		.4byte	0x83
 2556 0839 F2020000 		.4byte	.LLST24
 2557 083d 17       		.uleb128 0x17
 2558 083e 24060000 		.4byte	.LASF77
 2559 0842 01       		.byte	0x1
 2560 0843 FC04     		.2byte	0x4fc
 2561 0845 6B000000 		.4byte	0x6b
 2562 0849 13030000 		.4byte	.LLST25
 2563 084d 1C       		.uleb128 0x1c
 2564 084e 0B010000 		.4byte	.LASF78
 2565 0852 01       		.byte	0x1
 2566 0853 FD04     		.2byte	0x4fd
 2567 0855 6B000000 		.4byte	0x6b
 2568 0859 01       		.byte	0x1
 2569 085a 13       		.uleb128 0x13
 2570 085b 0C000000 		.4byte	.LVL75
 2571 085f AC0D0000 		.4byte	0xdac
 2572 0863 11       		.uleb128 0x11
 2573 0864 01       		.uleb128 0x1
 2574 0865 51       		.byte	0x51
 2575 0866 01       		.uleb128 0x1
 2576 0867 30       		.byte	0x30
 2577 0868 11       		.uleb128 0x11
 2578 0869 01       		.uleb128 0x1
 2579 086a 52       		.byte	0x52
 2580 086b 01       		.uleb128 0x1
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 97


 2581 086c 31       		.byte	0x31
 2582 086d 00       		.byte	0
 2583 086e 00       		.byte	0
 2584 086f 15       		.uleb128 0x15
 2585 0870 B4000000 		.4byte	.LASF82
 2586 0874 01       		.byte	0x1
 2587 0875 2405     		.2byte	0x524
 2588 0877 00000000 		.4byte	.LFB58
 2589 087b 14000000 		.4byte	.LFE58-.LFB58
 2590 087f 01       		.uleb128 0x1
 2591 0880 9C       		.byte	0x9c
 2592 0881 C7080000 		.4byte	0x8c7
 2593 0885 19       		.uleb128 0x19
 2594 0886 56030000 		.4byte	.LASF52
 2595 088a 01       		.byte	0x1
 2596 088b 2405     		.2byte	0x524
 2597 088d 83000000 		.4byte	0x83
 2598 0891 33030000 		.4byte	.LLST26
 2599 0895 17       		.uleb128 0x17
 2600 0896 24060000 		.4byte	.LASF77
 2601 089a 01       		.byte	0x1
 2602 089b 2605     		.2byte	0x526
 2603 089d 6B000000 		.4byte	0x6b
 2604 08a1 54030000 		.4byte	.LLST27
 2605 08a5 1C       		.uleb128 0x1c
 2606 08a6 0B010000 		.4byte	.LASF78
 2607 08aa 01       		.byte	0x1
 2608 08ab 2705     		.2byte	0x527
 2609 08ad 6B000000 		.4byte	0x6b
 2610 08b1 01       		.byte	0x1
 2611 08b2 13       		.uleb128 0x13
 2612 08b3 0C000000 		.4byte	.LVL79
 2613 08b7 AC0D0000 		.4byte	0xdac
 2614 08bb 11       		.uleb128 0x11
 2615 08bc 01       		.uleb128 0x1
 2616 08bd 51       		.byte	0x51
 2617 08be 01       		.uleb128 0x1
 2618 08bf 30       		.byte	0x30
 2619 08c0 11       		.uleb128 0x11
 2620 08c1 01       		.uleb128 0x1
 2621 08c2 52       		.byte	0x52
 2622 08c3 01       		.uleb128 0x1
 2623 08c4 30       		.byte	0x30
 2624 08c5 00       		.byte	0
 2625 08c6 00       		.byte	0
 2626 08c7 18       		.uleb128 0x18
 2627 08c8 1E0A0000 		.4byte	.LASF83
 2628 08cc 01       		.byte	0x1
 2629 08cd 4009     		.2byte	0x940
 2630 08cf 77000000 		.4byte	0x77
 2631 08d3 00000000 		.4byte	.LFB59
 2632 08d7 1C000000 		.4byte	.LFE59-.LFB59
 2633 08db 01       		.uleb128 0x1
 2634 08dc 9C       		.byte	0x9c
 2635 08dd 19090000 		.4byte	0x919
 2636 08e1 1D       		.uleb128 0x1d
 2637 08e2 783100   		.ascii	"x1\000"
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 98


 2638 08e5 01       		.byte	0x1
 2639 08e6 4009     		.2byte	0x940
 2640 08e8 77000000 		.4byte	0x77
 2641 08ec 74030000 		.4byte	.LLST28
 2642 08f0 1D       		.uleb128 0x1d
 2643 08f1 783200   		.ascii	"x2\000"
 2644 08f4 01       		.byte	0x1
 2645 08f5 4009     		.2byte	0x940
 2646 08f7 77000000 		.4byte	0x77
 2647 08fb A0030000 		.4byte	.LLST29
 2648 08ff 1E       		.uleb128 0x1e
 2649 0900 783300   		.ascii	"x3\000"
 2650 0903 01       		.byte	0x1
 2651 0904 4009     		.2byte	0x940
 2652 0906 77000000 		.4byte	0x77
 2653 090a 01       		.uleb128 0x1
 2654 090b 52       		.byte	0x52
 2655 090c 1F       		.uleb128 0x1f
 2656 090d 746D7000 		.ascii	"tmp\000"
 2657 0911 01       		.byte	0x1
 2658 0912 4209     		.2byte	0x942
 2659 0914 77000000 		.4byte	0x77
 2660 0918 00       		.byte	0
 2661 0919 18       		.uleb128 0x18
 2662 091a 1B000000 		.4byte	.LASF84
 2663 091e 01       		.byte	0x1
 2664 091f B809     		.2byte	0x9b8
 2665 0921 77000000 		.4byte	0x77
 2666 0925 00000000 		.4byte	.LFB60
 2667 0929 0C000000 		.4byte	.LFE60-.LFB60
 2668 092d 01       		.uleb128 0x1
 2669 092e 9C       		.byte	0x9c
 2670 092f 62090000 		.4byte	0x962
 2671 0933 1D       		.uleb128 0x1d
 2672 0934 783100   		.ascii	"x1\000"
 2673 0937 01       		.byte	0x1
 2674 0938 B809     		.2byte	0x9b8
 2675 093a 77000000 		.4byte	0x77
 2676 093e BE030000 		.4byte	.LLST30
 2677 0942 1D       		.uleb128 0x1d
 2678 0943 783200   		.ascii	"x2\000"
 2679 0946 01       		.byte	0x1
 2680 0947 B809     		.2byte	0x9b8
 2681 0949 77000000 		.4byte	0x77
 2682 094d DF030000 		.4byte	.LLST31
 2683 0951 16       		.uleb128 0x16
 2684 0952 746D7000 		.ascii	"tmp\000"
 2685 0956 01       		.byte	0x1
 2686 0957 BA09     		.2byte	0x9ba
 2687 0959 83000000 		.4byte	0x83
 2688 095d 00040000 		.4byte	.LLST32
 2689 0961 00       		.byte	0
 2690 0962 15       		.uleb128 0x15
 2691 0963 72000000 		.4byte	.LASF85
 2692 0967 01       		.byte	0x1
 2693 0968 5B01     		.2byte	0x15b
 2694 096a 00000000 		.4byte	.LFB36
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 99


 2695 096e 20010000 		.4byte	.LFE36-.LFB36
 2696 0972 01       		.uleb128 0x1
 2697 0973 9C       		.byte	0x9c
 2698 0974 1C0A0000 		.4byte	0xa1c
 2699 0978 19       		.uleb128 0x19
 2700 0979 A5050000 		.4byte	.LASF50
 2701 097d 01       		.byte	0x1
 2702 097e 5B01     		.2byte	0x15b
 2703 0980 83000000 		.4byte	0x83
 2704 0984 13040000 		.4byte	.LLST33
 2705 0988 17       		.uleb128 0x17
 2706 0989 C6040000 		.4byte	.LASF86
 2707 098d 01       		.byte	0x1
 2708 098e 5D01     		.2byte	0x15d
 2709 0990 83000000 		.4byte	0x83
 2710 0994 71040000 		.4byte	.LLST34
 2711 0998 17       		.uleb128 0x17
 2712 0999 B0040000 		.4byte	.LASF87
 2713 099d 01       		.byte	0x1
 2714 099e 5E01     		.2byte	0x15e
 2715 09a0 83000000 		.4byte	0x83
 2716 09a4 A5040000 		.4byte	.LLST35
 2717 09a8 17       		.uleb128 0x17
 2718 09a9 340A0000 		.4byte	.LASF88
 2719 09ad 01       		.byte	0x1
 2720 09ae 5F01     		.2byte	0x15f
 2721 09b0 77000000 		.4byte	0x77
 2722 09b4 FC040000 		.4byte	.LLST36
 2723 09b8 17       		.uleb128 0x17
 2724 09b9 FB040000 		.4byte	.LASF89
 2725 09bd 01       		.byte	0x1
 2726 09be 6001     		.2byte	0x160
 2727 09c0 77000000 		.4byte	0x77
 2728 09c4 1A050000 		.4byte	.LLST37
 2729 09c8 1B       		.uleb128 0x1b
 2730 09c9 56030000 		.4byte	.LASF52
 2731 09cd 01       		.byte	0x1
 2732 09ce 6101     		.2byte	0x161
 2733 09d0 6B000000 		.4byte	0x6b
 2734 09d4 20       		.uleb128 0x20
 2735 09d5 89080000 		.4byte	.LASF90
 2736 09d9 01       		.byte	0x1
 2737 09da 6201     		.2byte	0x162
 2738 09dc 6B000000 		.4byte	0x6b
 2739 09e0 02       		.uleb128 0x2
 2740 09e1 91       		.byte	0x91
 2741 09e2 64       		.sleb128 -28
 2742 09e3 10       		.uleb128 0x10
 2743 09e4 2E000000 		.4byte	.LVL95
 2744 09e8 19090000 		.4byte	0x919
 2745 09ec F7090000 		.4byte	0x9f7
 2746 09f0 11       		.uleb128 0x11
 2747 09f1 01       		.uleb128 0x1
 2748 09f2 50       		.byte	0x50
 2749 09f3 02       		.uleb128 0x2
 2750 09f4 77       		.byte	0x77
 2751 09f5 00       		.sleb128 0
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 100


 2752 09f6 00       		.byte	0
 2753 09f7 10       		.uleb128 0x10
 2754 09f8 3E000000 		.4byte	.LVL98
 2755 09fc B70D0000 		.4byte	0xdb7
 2756 0a00 0B0A0000 		.4byte	0xa0b
 2757 0a04 11       		.uleb128 0x11
 2758 0a05 01       		.uleb128 0x1
 2759 0a06 51       		.byte	0x51
 2760 0a07 02       		.uleb128 0x2
 2761 0a08 74       		.byte	0x74
 2762 0a09 00       		.sleb128 0
 2763 0a0a 00       		.byte	0
 2764 0a0b 13       		.uleb128 0x13
 2765 0a0c 82000000 		.4byte	.LVL103
 2766 0a10 B9020000 		.4byte	0x2b9
 2767 0a14 11       		.uleb128 0x11
 2768 0a15 01       		.uleb128 0x1
 2769 0a16 50       		.byte	0x50
 2770 0a17 02       		.uleb128 0x2
 2771 0a18 74       		.byte	0x74
 2772 0a19 00       		.sleb128 0
 2773 0a1a 00       		.byte	0
 2774 0a1b 00       		.byte	0
 2775 0a1c 15       		.uleb128 0x15
 2776 0a1d C5060000 		.4byte	.LASF91
 2777 0a21 01       		.byte	0x1
 2778 0a22 1B02     		.2byte	0x21b
 2779 0a24 00000000 		.4byte	.LFB37
 2780 0a28 10000000 		.4byte	.LFE37-.LFB37
 2781 0a2c 01       		.uleb128 0x1
 2782 0a2d 9C       		.byte	0x9c
 2783 0a2e 670A0000 		.4byte	0xa67
 2784 0a32 19       		.uleb128 0x19
 2785 0a33 A5050000 		.4byte	.LASF50
 2786 0a37 01       		.byte	0x1
 2787 0a38 1B02     		.2byte	0x21b
 2788 0a3a 83000000 		.4byte	0x83
 2789 0a3e 43050000 		.4byte	.LLST38
 2790 0a42 10       		.uleb128 0x10
 2791 0a43 08000000 		.4byte	.LVL121
 2792 0a47 C20D0000 		.4byte	0xdc2
 2793 0a4b 560A0000 		.4byte	0xa56
 2794 0a4f 11       		.uleb128 0x11
 2795 0a50 01       		.uleb128 0x1
 2796 0a51 50       		.byte	0x50
 2797 0a52 02       		.uleb128 0x2
 2798 0a53 74       		.byte	0x74
 2799 0a54 00       		.sleb128 0
 2800 0a55 00       		.byte	0
 2801 0a56 13       		.uleb128 0x13
 2802 0a57 0E000000 		.4byte	.LVL122
 2803 0a5b 62090000 		.4byte	0x962
 2804 0a5f 11       		.uleb128 0x11
 2805 0a60 01       		.uleb128 0x1
 2806 0a61 50       		.byte	0x50
 2807 0a62 02       		.uleb128 0x2
 2808 0a63 74       		.byte	0x74
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 101


 2809 0a64 00       		.sleb128 0
 2810 0a65 00       		.byte	0
 2811 0a66 00       		.byte	0
 2812 0a67 15       		.uleb128 0x15
 2813 0a68 CB000000 		.4byte	.LASF92
 2814 0a6c 01       		.byte	0x1
 2815 0a6d 5102     		.2byte	0x251
 2816 0a6f 00000000 		.4byte	.LFB38
 2817 0a73 24000000 		.4byte	.LFE38-.LFB38
 2818 0a77 01       		.uleb128 0x1
 2819 0a78 9C       		.byte	0x9c
 2820 0a79 C00A0000 		.4byte	0xac0
 2821 0a7d 16       		.uleb128 0x16
 2822 0a7e 6900     		.ascii	"i\000"
 2823 0a80 01       		.byte	0x1
 2824 0a81 5302     		.2byte	0x253
 2825 0a83 83000000 		.4byte	0x83
 2826 0a87 6F050000 		.4byte	.LLST39
 2827 0a8b 17       		.uleb128 0x17
 2828 0a8c FB000000 		.4byte	.LASF54
 2829 0a90 01       		.byte	0x1
 2830 0a91 5402     		.2byte	0x254
 2831 0a93 83000000 		.4byte	0x83
 2832 0a97 8E050000 		.4byte	.LLST40
 2833 0a9b 10       		.uleb128 0x10
 2834 0a9c 0E000000 		.4byte	.LVL126
 2835 0aa0 A10D0000 		.4byte	0xda1
 2836 0aa4 AF0A0000 		.4byte	0xaaf
 2837 0aa8 11       		.uleb128 0x11
 2838 0aa9 01       		.uleb128 0x1
 2839 0aaa 51       		.byte	0x51
 2840 0aab 02       		.uleb128 0x2
 2841 0aac 74       		.byte	0x74
 2842 0aad 00       		.sleb128 0
 2843 0aae 00       		.byte	0
 2844 0aaf 13       		.uleb128 0x13
 2845 0ab0 18000000 		.4byte	.LVL128
 2846 0ab4 1C0A0000 		.4byte	0xa1c
 2847 0ab8 11       		.uleb128 0x11
 2848 0ab9 01       		.uleb128 0x1
 2849 0aba 50       		.byte	0x50
 2850 0abb 02       		.uleb128 0x2
 2851 0abc 74       		.byte	0x74
 2852 0abd 00       		.sleb128 0
 2853 0abe 00       		.byte	0
 2854 0abf 00       		.byte	0
 2855 0ac0 15       		.uleb128 0x15
 2856 0ac1 AE020000 		.4byte	.LASF93
 2857 0ac5 01       		.byte	0x1
 2858 0ac6 7E02     		.2byte	0x27e
 2859 0ac8 00000000 		.4byte	.LFB39
 2860 0acc 24000000 		.4byte	.LFE39-.LFB39
 2861 0ad0 01       		.uleb128 0x1
 2862 0ad1 9C       		.byte	0x9c
 2863 0ad2 500B0000 		.4byte	0xb50
 2864 0ad6 19       		.uleb128 0x19
 2865 0ad7 56030000 		.4byte	.LASF52
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 102


 2866 0adb 01       		.byte	0x1
 2867 0adc 7E02     		.2byte	0x27e
 2868 0ade 83000000 		.4byte	0x83
 2869 0ae2 A1050000 		.4byte	.LLST41
 2870 0ae6 1C       		.uleb128 0x1c
 2871 0ae7 0B050000 		.4byte	.LASF94
 2872 0aeb 01       		.byte	0x1
 2873 0aec 8002     		.2byte	0x280
 2874 0aee 83000000 		.4byte	0x83
 2875 0af2 01       		.byte	0x1
 2876 0af3 1C       		.uleb128 0x1c
 2877 0af4 DC070000 		.4byte	.LASF95
 2878 0af8 01       		.byte	0x1
 2879 0af9 8102     		.2byte	0x281
 2880 0afb 83000000 		.4byte	0x83
 2881 0aff 00       		.byte	0
 2882 0b00 1C       		.uleb128 0x1c
 2883 0b01 A1070000 		.4byte	.LASF96
 2884 0b05 01       		.byte	0x1
 2885 0b06 8202     		.2byte	0x282
 2886 0b08 83000000 		.4byte	0x83
 2887 0b0c 01       		.byte	0x1
 2888 0b0d 16       		.uleb128 0x16
 2889 0b0e 6900     		.ascii	"i\000"
 2890 0b10 01       		.byte	0x1
 2891 0b11 8302     		.2byte	0x283
 2892 0b13 83000000 		.4byte	0x83
 2893 0b17 C2050000 		.4byte	.LLST42
 2894 0b1b 17       		.uleb128 0x17
 2895 0b1c FB000000 		.4byte	.LASF54
 2896 0b20 01       		.byte	0x1
 2897 0b21 8402     		.2byte	0x284
 2898 0b23 83000000 		.4byte	0x83
 2899 0b27 E1050000 		.4byte	.LLST43
 2900 0b2b 10       		.uleb128 0x10
 2901 0b2c 0E000000 		.4byte	.LVL134
 2902 0b30 A10D0000 		.4byte	0xda1
 2903 0b34 3F0B0000 		.4byte	0xb3f
 2904 0b38 11       		.uleb128 0x11
 2905 0b39 01       		.uleb128 0x1
 2906 0b3a 51       		.byte	0x51
 2907 0b3b 02       		.uleb128 0x2
 2908 0b3c 74       		.byte	0x74
 2909 0b3d 00       		.sleb128 0
 2910 0b3e 00       		.byte	0
 2911 0b3f 13       		.uleb128 0x13
 2912 0b40 18000000 		.4byte	.LVL136
 2913 0b44 1C0A0000 		.4byte	0xa1c
 2914 0b48 11       		.uleb128 0x11
 2915 0b49 01       		.uleb128 0x1
 2916 0b4a 50       		.byte	0x50
 2917 0b4b 02       		.uleb128 0x2
 2918 0b4c 74       		.byte	0x74
 2919 0b4d 00       		.sleb128 0
 2920 0b4e 00       		.byte	0
 2921 0b4f 00       		.byte	0
 2922 0b50 18       		.uleb128 0x18
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 103


 2923 0b51 71060000 		.4byte	.LASF97
 2924 0b55 01       		.byte	0x1
 2925 0b56 A10A     		.2byte	0xaa1
 2926 0b58 83000000 		.4byte	0x83
 2927 0b5c 00000000 		.4byte	.LFB61
 2928 0b60 0C000000 		.4byte	.LFE61-.LFB61
 2929 0b64 01       		.uleb128 0x1
 2930 0b65 9C       		.byte	0x9c
 2931 0b66 7B0B0000 		.4byte	0xb7b
 2932 0b6a 19       		.uleb128 0x19
 2933 0b6b A5050000 		.4byte	.LASF50
 2934 0b6f 01       		.byte	0x1
 2935 0b70 A10A     		.2byte	0xaa1
 2936 0b72 83000000 		.4byte	0x83
 2937 0b76 F4050000 		.4byte	.LLST44
 2938 0b7a 00       		.byte	0
 2939 0b7b 18       		.uleb128 0x18
 2940 0b7c 15070000 		.4byte	.LASF98
 2941 0b80 01       		.byte	0x1
 2942 0b81 BB0A     		.2byte	0xabb
 2943 0b83 6B000000 		.4byte	0x6b
 2944 0b87 00000000 		.4byte	.LFB62
 2945 0b8b 0C000000 		.4byte	.LFE62-.LFB62
 2946 0b8f 01       		.uleb128 0x1
 2947 0b90 9C       		.byte	0x9c
 2948 0b91 A60B0000 		.4byte	0xba6
 2949 0b95 19       		.uleb128 0x19
 2950 0b96 A5050000 		.4byte	.LASF50
 2951 0b9a 01       		.byte	0x1
 2952 0b9b BB0A     		.2byte	0xabb
 2953 0b9d 83000000 		.4byte	0x83
 2954 0ba1 15060000 		.4byte	.LLST45
 2955 0ba5 00       		.byte	0
 2956 0ba6 18       		.uleb128 0x18
 2957 0ba7 3C0A0000 		.4byte	.LASF99
 2958 0bab 01       		.byte	0x1
 2959 0bac D50A     		.2byte	0xad5
 2960 0bae 6B000000 		.4byte	0x6b
 2961 0bb2 00000000 		.4byte	.LFB63
 2962 0bb6 0C000000 		.4byte	.LFE63-.LFB63
 2963 0bba 01       		.uleb128 0x1
 2964 0bbb 9C       		.byte	0x9c
 2965 0bbc D10B0000 		.4byte	0xbd1
 2966 0bc0 19       		.uleb128 0x19
 2967 0bc1 56030000 		.4byte	.LASF52
 2968 0bc5 01       		.byte	0x1
 2969 0bc6 D50A     		.2byte	0xad5
 2970 0bc8 83000000 		.4byte	0x83
 2971 0bcc 36060000 		.4byte	.LLST46
 2972 0bd0 00       		.byte	0
 2973 0bd1 21       		.uleb128 0x21
 2974 0bd2 0B080000 		.4byte	.LASF100
 2975 0bd6 01       		.byte	0x1
 2976 0bd7 EF0A     		.2byte	0xaef
 2977 0bd9 00000000 		.4byte	.LFB64
 2978 0bdd 0C000000 		.4byte	.LFE64-.LFB64
 2979 0be1 01       		.uleb128 0x1
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 104


 2980 0be2 9C       		.byte	0x9c
 2981 0be3 21       		.uleb128 0x21
 2982 0be4 C6030000 		.4byte	.LASF101
 2983 0be8 01       		.byte	0x1
 2984 0be9 080B     		.2byte	0xb08
 2985 0beb 00000000 		.4byte	.LFB65
 2986 0bef 0C000000 		.4byte	.LFE65-.LFB65
 2987 0bf3 01       		.uleb128 0x1
 2988 0bf4 9C       		.byte	0x9c
 2989 0bf5 22       		.uleb128 0x22
 2990 0bf6 6B000000 		.4byte	0x6b
 2991 0bfa 050C0000 		.4byte	0xc05
 2992 0bfe 23       		.uleb128 0x23
 2993 0bff A4000000 		.4byte	0xa4
 2994 0c03 01       		.byte	0x1
 2995 0c04 00       		.byte	0
 2996 0c05 24       		.uleb128 0x24
 2997 0c06 2F000000 		.4byte	.LASF102
 2998 0c0a 01       		.byte	0x1
 2999 0c0b 55       		.byte	0x55
 3000 0c0c F50B0000 		.4byte	0xbf5
 3001 0c10 05       		.uleb128 0x5
 3002 0c11 03       		.byte	0x3
 3003 0c12 0C000000 		.4byte	CapSense_debounceCounter
 3004 0c16 22       		.uleb128 0x22
 3005 0c17 77000000 		.4byte	0x77
 3006 0c1b 260C0000 		.4byte	0xc26
 3007 0c1f 23       		.uleb128 0x23
 3008 0c20 A4000000 		.4byte	0xa4
 3009 0c24 00       		.byte	0
 3010 0c25 00       		.byte	0
 3011 0c26 25       		.uleb128 0x25
 3012 0c27 02070000 		.4byte	.LASF103
 3013 0c2b 01       		.byte	0x1
 3014 0c2c 2C       		.byte	0x2c
 3015 0c2d 160C0000 		.4byte	0xc16
 3016 0c31 22       		.uleb128 0x22
 3017 0c32 6B000000 		.4byte	0x6b
 3018 0c36 410C0000 		.4byte	0xc41
 3019 0c3a 23       		.uleb128 0x23
 3020 0c3b A4000000 		.4byte	0xa4
 3021 0c3f 00       		.byte	0
 3022 0c40 00       		.byte	0
 3023 0c41 25       		.uleb128 0x25
 3024 0c42 3C030000 		.4byte	.LASF104
 3025 0c46 01       		.byte	0x1
 3026 0c47 2D       		.byte	0x2d
 3027 0c48 310C0000 		.4byte	0xc31
 3028 0c4c 22       		.uleb128 0x22
 3029 0c4d DB010000 		.4byte	0x1db
 3030 0c51 5C0C0000 		.4byte	0xc5c
 3031 0c55 23       		.uleb128 0x23
 3032 0c56 A4000000 		.4byte	0xa4
 3033 0c5a 00       		.byte	0
 3034 0c5b 00       		.byte	0
 3035 0c5c 25       		.uleb128 0x25
 3036 0c5d 94030000 		.4byte	.LASF105
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 105


 3037 0c61 01       		.byte	0x1
 3038 0c62 2E       		.byte	0x2e
 3039 0c63 670C0000 		.4byte	0xc67
 3040 0c67 08       		.uleb128 0x8
 3041 0c68 4C0C0000 		.4byte	0xc4c
 3042 0c6c 26       		.uleb128 0x26
 3043 0c6d 4D080000 		.4byte	.LASF106
 3044 0c71 01       		.byte	0x1
 3045 0c72 34       		.byte	0x34
 3046 0c73 160C0000 		.4byte	0xc16
 3047 0c77 05       		.uleb128 0x5
 3048 0c78 03       		.byte	0x3
 3049 0c79 00000000 		.4byte	CapSense_sensorBaseline
 3050 0c7d 26       		.uleb128 0x26
 3051 0c7e 00000000 		.4byte	.LASF107
 3052 0c82 01       		.byte	0x1
 3053 0c83 35       		.byte	0x35
 3054 0c84 310C0000 		.4byte	0xc31
 3055 0c88 05       		.uleb128 0x5
 3056 0c89 03       		.byte	0x3
 3057 0c8a 00000000 		.4byte	CapSense_sensorBaselineLow
 3058 0c8e 26       		.uleb128 0x26
 3059 0c8f 67020000 		.4byte	.LASF108
 3060 0c93 01       		.byte	0x1
 3061 0c94 36       		.byte	0x36
 3062 0c95 310C0000 		.4byte	0xc31
 3063 0c99 05       		.uleb128 0x5
 3064 0c9a 03       		.byte	0x3
 3065 0c9b 00000000 		.4byte	CapSense_sensorSignal
 3066 0c9f 26       		.uleb128 0x26
 3067 0ca0 930A0000 		.4byte	.LASF109
 3068 0ca4 01       		.byte	0x1
 3069 0ca5 37       		.byte	0x37
 3070 0ca6 310C0000 		.4byte	0xc31
 3071 0caa 05       		.uleb128 0x5
 3072 0cab 03       		.byte	0x3
 3073 0cac 00000000 		.4byte	CapSense_sensorOnMask
 3074 0cb0 26       		.uleb128 0x26
 3075 0cb1 55000000 		.4byte	.LASF110
 3076 0cb5 01       		.byte	0x1
 3077 0cb6 39       		.byte	0x39
 3078 0cb7 310C0000 		.4byte	0xc31
 3079 0cbb 05       		.uleb128 0x5
 3080 0cbc 03       		.byte	0x3
 3081 0cbd 00000000 		.4byte	CapSense_lowBaselineResetCnt
 3082 0cc1 26       		.uleb128 0x26
 3083 0cc2 29080000 		.4byte	.LASF111
 3084 0cc6 01       		.byte	0x1
 3085 0cc7 3A       		.byte	0x3a
 3086 0cc8 310C0000 		.4byte	0xc31
 3087 0ccc 05       		.uleb128 0x5
 3088 0ccd 03       		.byte	0x3
 3089 0cce 00000000 		.4byte	CapSense_lowBaselineReset
 3090 0cd2 26       		.uleb128 0x26
 3091 0cd3 5D030000 		.4byte	.LASF112
 3092 0cd7 01       		.byte	0x1
 3093 0cd8 49       		.byte	0x49
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 106


 3094 0cd9 310C0000 		.4byte	0xc31
 3095 0cdd 05       		.uleb128 0x5
 3096 0cde 03       		.byte	0x3
 3097 0cdf 00000000 		.4byte	CapSense_fingerThreshold
 3098 0ce3 26       		.uleb128 0x26
 3099 0ce4 EA080000 		.4byte	.LASF113
 3100 0ce8 01       		.byte	0x1
 3101 0ce9 4B       		.byte	0x4b
 3102 0cea 310C0000 		.4byte	0xc31
 3103 0cee 05       		.uleb128 0x5
 3104 0cef 03       		.byte	0x3
 3105 0cf0 00000000 		.4byte	CapSense_noiseThreshold
 3106 0cf4 26       		.uleb128 0x26
 3107 0cf5 55050000 		.4byte	.LASF114
 3108 0cf9 01       		.byte	0x1
 3109 0cfa 4D       		.byte	0x4d
 3110 0cfb 310C0000 		.4byte	0xc31
 3111 0cff 05       		.uleb128 0x5
 3112 0d00 03       		.byte	0x3
 3113 0d01 00000000 		.4byte	CapSense_negativeNoiseThreshold
 3114 0d05 26       		.uleb128 0x26
 3115 0d06 CC020000 		.4byte	.LASF115
 3116 0d0a 01       		.byte	0x1
 3117 0d0b 4F       		.byte	0x4f
 3118 0d0c 310C0000 		.4byte	0xc31
 3119 0d10 05       		.uleb128 0x5
 3120 0d11 03       		.byte	0x3
 3121 0d12 00000000 		.4byte	CapSense_hysteresis
 3122 0d16 26       		.uleb128 0x26
 3123 0d17 E8070000 		.4byte	.LASF116
 3124 0d1b 01       		.byte	0x1
 3125 0d1c 51       		.byte	0x51
 3126 0d1d 310C0000 		.4byte	0xc31
 3127 0d21 05       		.uleb128 0x5
 3128 0d22 03       		.byte	0x3
 3129 0d23 00000000 		.4byte	CapSense_debounce
 3130 0d27 26       		.uleb128 0x26
 3131 0d28 7D020000 		.4byte	.LASF117
 3132 0d2c 01       		.byte	0x1
 3133 0d2d 59       		.byte	0x59
 3134 0d2e 380D0000 		.4byte	0xd38
 3135 0d32 05       		.uleb128 0x5
 3136 0d33 03       		.byte	0x3
 3137 0d34 00000000 		.4byte	CapSense_rawDataIndex
 3138 0d38 08       		.uleb128 0x8
 3139 0d39 4C0C0000 		.4byte	0xc4c
 3140 0d3d 26       		.uleb128 0x26
 3141 0d3e 3C050000 		.4byte	.LASF118
 3142 0d42 01       		.byte	0x1
 3143 0d43 5D       		.byte	0x5d
 3144 0d44 4E0D0000 		.4byte	0xd4e
 3145 0d48 05       		.uleb128 0x5
 3146 0d49 03       		.byte	0x3
 3147 0d4a 00000000 		.4byte	CapSense_numberOfSensors
 3148 0d4e 08       		.uleb128 0x8
 3149 0d4f 4C0C0000 		.4byte	0xc4c
 3150 0d53 26       		.uleb128 0x26
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 107


 3151 0d54 7B0A0000 		.4byte	.LASF119
 3152 0d58 01       		.byte	0x1
 3153 0d59 27       		.byte	0x27
 3154 0d5a 160C0000 		.4byte	0xc16
 3155 0d5e 05       		.uleb128 0x5
 3156 0d5f 03       		.byte	0x3
 3157 0d60 00000000 		.4byte	CapSense_rawFilterData1
 3158 0d64 25       		.uleb128 0x25
 3159 0d65 EB000000 		.4byte	.LASF120
 3160 0d69 01       		.byte	0x1
 3161 0d6a 41       		.byte	0x41
 3162 0d6b AE020000 		.4byte	0x2ae
 3163 0d6f 26       		.uleb128 0x26
 3164 0d70 CC090000 		.4byte	.LASF121
 3165 0d74 01       		.byte	0x1
 3166 0d75 45       		.byte	0x45
 3167 0d76 6B000000 		.4byte	0x6b
 3168 0d7a 05       		.uleb128 0x5
 3169 0d7b 03       		.byte	0x3
 3170 0d7c 00000000 		.4byte	CapSense_enableRawFilters
 3171 0d80 27       		.uleb128 0x27
 3172 0d81 E7040000 		.4byte	.LASF122
 3173 0d85 E7040000 		.4byte	.LASF122
 3174 0d89 04       		.byte	0x4
 3175 0d8a 9C       		.byte	0x9c
 3176 0d8b 27       		.uleb128 0x27
 3177 0d8c 07020000 		.4byte	.LASF123
 3178 0d90 07020000 		.4byte	.LASF123
 3179 0d94 04       		.byte	0x4
 3180 0d95 9B       		.byte	0x9b
 3181 0d96 27       		.uleb128 0x27
 3182 0d97 47060000 		.4byte	.LASF124
 3183 0d9b 47060000 		.4byte	.LASF124
 3184 0d9f 04       		.byte	0x4
 3185 0da0 9E       		.byte	0x9e
 3186 0da1 27       		.uleb128 0x27
 3187 0da2 B1090000 		.4byte	.LASF125
 3188 0da6 B1090000 		.4byte	.LASF125
 3189 0daa 03       		.byte	0x3
 3190 0dab 6A       		.byte	0x6a
 3191 0dac 27       		.uleb128 0x27
 3192 0dad 75090000 		.4byte	.LASF126
 3193 0db1 75090000 		.4byte	.LASF126
 3194 0db5 03       		.byte	0x3
 3195 0db6 6B       		.byte	0x6b
 3196 0db7 27       		.uleb128 0x27
 3197 0db8 87050000 		.4byte	.LASF127
 3198 0dbc 87050000 		.4byte	.LASF127
 3199 0dc0 03       		.byte	0x3
 3200 0dc1 81       		.byte	0x81
 3201 0dc2 27       		.uleb128 0x27
 3202 0dc3 2D060000 		.4byte	.LASF128
 3203 0dc7 2D060000 		.4byte	.LASF128
 3204 0dcb 01       		.byte	0x1
 3205 0dcc 17       		.byte	0x17
 3206 0dcd 00       		.byte	0
 3207              		.section	.debug_abbrev,"",%progbits
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 108


 3208              	.Ldebug_abbrev0:
 3209 0000 01       		.uleb128 0x1
 3210 0001 11       		.uleb128 0x11
 3211 0002 01       		.byte	0x1
 3212 0003 25       		.uleb128 0x25
 3213 0004 0E       		.uleb128 0xe
 3214 0005 13       		.uleb128 0x13
 3215 0006 0B       		.uleb128 0xb
 3216 0007 03       		.uleb128 0x3
 3217 0008 0E       		.uleb128 0xe
 3218 0009 1B       		.uleb128 0x1b
 3219 000a 0E       		.uleb128 0xe
 3220 000b 55       		.uleb128 0x55
 3221 000c 17       		.uleb128 0x17
 3222 000d 11       		.uleb128 0x11
 3223 000e 01       		.uleb128 0x1
 3224 000f 10       		.uleb128 0x10
 3225 0010 17       		.uleb128 0x17
 3226 0011 00       		.byte	0
 3227 0012 00       		.byte	0
 3228 0013 02       		.uleb128 0x2
 3229 0014 24       		.uleb128 0x24
 3230 0015 00       		.byte	0
 3231 0016 0B       		.uleb128 0xb
 3232 0017 0B       		.uleb128 0xb
 3233 0018 3E       		.uleb128 0x3e
 3234 0019 0B       		.uleb128 0xb
 3235 001a 03       		.uleb128 0x3
 3236 001b 0E       		.uleb128 0xe
 3237 001c 00       		.byte	0
 3238 001d 00       		.byte	0
 3239 001e 03       		.uleb128 0x3
 3240 001f 24       		.uleb128 0x24
 3241 0020 00       		.byte	0
 3242 0021 0B       		.uleb128 0xb
 3243 0022 0B       		.uleb128 0xb
 3244 0023 3E       		.uleb128 0x3e
 3245 0024 0B       		.uleb128 0xb
 3246 0025 03       		.uleb128 0x3
 3247 0026 08       		.uleb128 0x8
 3248 0027 00       		.byte	0
 3249 0028 00       		.byte	0
 3250 0029 04       		.uleb128 0x4
 3251 002a 16       		.uleb128 0x16
 3252 002b 00       		.byte	0
 3253 002c 03       		.uleb128 0x3
 3254 002d 0E       		.uleb128 0xe
 3255 002e 3A       		.uleb128 0x3a
 3256 002f 0B       		.uleb128 0xb
 3257 0030 3B       		.uleb128 0x3b
 3258 0031 05       		.uleb128 0x5
 3259 0032 49       		.uleb128 0x49
 3260 0033 13       		.uleb128 0x13
 3261 0034 00       		.byte	0
 3262 0035 00       		.byte	0
 3263 0036 05       		.uleb128 0x5
 3264 0037 13       		.uleb128 0x13
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 109


 3265 0038 01       		.byte	0x1
 3266 0039 0B       		.uleb128 0xb
 3267 003a 0B       		.uleb128 0xb
 3268 003b 3A       		.uleb128 0x3a
 3269 003c 0B       		.uleb128 0xb
 3270 003d 3B       		.uleb128 0x3b
 3271 003e 0B       		.uleb128 0xb
 3272 003f 01       		.uleb128 0x1
 3273 0040 13       		.uleb128 0x13
 3274 0041 00       		.byte	0
 3275 0042 00       		.byte	0
 3276 0043 06       		.uleb128 0x6
 3277 0044 0D       		.uleb128 0xd
 3278 0045 00       		.byte	0
 3279 0046 03       		.uleb128 0x3
 3280 0047 0E       		.uleb128 0xe
 3281 0048 3A       		.uleb128 0x3a
 3282 0049 0B       		.uleb128 0xb
 3283 004a 3B       		.uleb128 0x3b
 3284 004b 0B       		.uleb128 0xb
 3285 004c 49       		.uleb128 0x49
 3286 004d 13       		.uleb128 0x13
 3287 004e 38       		.uleb128 0x38
 3288 004f 0B       		.uleb128 0xb
 3289 0050 00       		.byte	0
 3290 0051 00       		.byte	0
 3291 0052 07       		.uleb128 0x7
 3292 0053 0F       		.uleb128 0xf
 3293 0054 00       		.byte	0
 3294 0055 0B       		.uleb128 0xb
 3295 0056 0B       		.uleb128 0xb
 3296 0057 49       		.uleb128 0x49
 3297 0058 13       		.uleb128 0x13
 3298 0059 00       		.byte	0
 3299 005a 00       		.byte	0
 3300 005b 08       		.uleb128 0x8
 3301 005c 26       		.uleb128 0x26
 3302 005d 00       		.byte	0
 3303 005e 49       		.uleb128 0x49
 3304 005f 13       		.uleb128 0x13
 3305 0060 00       		.byte	0
 3306 0061 00       		.byte	0
 3307 0062 09       		.uleb128 0x9
 3308 0063 15       		.uleb128 0x15
 3309 0064 01       		.byte	0x1
 3310 0065 27       		.uleb128 0x27
 3311 0066 19       		.uleb128 0x19
 3312 0067 49       		.uleb128 0x49
 3313 0068 13       		.uleb128 0x13
 3314 0069 01       		.uleb128 0x1
 3315 006a 13       		.uleb128 0x13
 3316 006b 00       		.byte	0
 3317 006c 00       		.byte	0
 3318 006d 0A       		.uleb128 0xa
 3319 006e 05       		.uleb128 0x5
 3320 006f 00       		.byte	0
 3321 0070 49       		.uleb128 0x49
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 110


 3322 0071 13       		.uleb128 0x13
 3323 0072 00       		.byte	0
 3324 0073 00       		.byte	0
 3325 0074 0B       		.uleb128 0xb
 3326 0075 15       		.uleb128 0x15
 3327 0076 01       		.byte	0x1
 3328 0077 27       		.uleb128 0x27
 3329 0078 19       		.uleb128 0x19
 3330 0079 01       		.uleb128 0x1
 3331 007a 13       		.uleb128 0x13
 3332 007b 00       		.byte	0
 3333 007c 00       		.byte	0
 3334 007d 0C       		.uleb128 0xc
 3335 007e 16       		.uleb128 0x16
 3336 007f 00       		.byte	0
 3337 0080 03       		.uleb128 0x3
 3338 0081 0E       		.uleb128 0xe
 3339 0082 3A       		.uleb128 0x3a
 3340 0083 0B       		.uleb128 0xb
 3341 0084 3B       		.uleb128 0x3b
 3342 0085 0B       		.uleb128 0xb
 3343 0086 49       		.uleb128 0x49
 3344 0087 13       		.uleb128 0x13
 3345 0088 00       		.byte	0
 3346 0089 00       		.byte	0
 3347 008a 0D       		.uleb128 0xd
 3348 008b 2E       		.uleb128 0x2e
 3349 008c 01       		.byte	0x1
 3350 008d 3F       		.uleb128 0x3f
 3351 008e 19       		.uleb128 0x19
 3352 008f 03       		.uleb128 0x3
 3353 0090 0E       		.uleb128 0xe
 3354 0091 3A       		.uleb128 0x3a
 3355 0092 0B       		.uleb128 0xb
 3356 0093 3B       		.uleb128 0x3b
 3357 0094 0B       		.uleb128 0xb
 3358 0095 27       		.uleb128 0x27
 3359 0096 19       		.uleb128 0x19
 3360 0097 11       		.uleb128 0x11
 3361 0098 01       		.uleb128 0x1
 3362 0099 12       		.uleb128 0x12
 3363 009a 06       		.uleb128 0x6
 3364 009b 40       		.uleb128 0x40
 3365 009c 18       		.uleb128 0x18
 3366 009d 9742     		.uleb128 0x2117
 3367 009f 19       		.uleb128 0x19
 3368 00a0 01       		.uleb128 0x1
 3369 00a1 13       		.uleb128 0x13
 3370 00a2 00       		.byte	0
 3371 00a3 00       		.byte	0
 3372 00a4 0E       		.uleb128 0xe
 3373 00a5 05       		.uleb128 0x5
 3374 00a6 00       		.byte	0
 3375 00a7 03       		.uleb128 0x3
 3376 00a8 0E       		.uleb128 0xe
 3377 00a9 3A       		.uleb128 0x3a
 3378 00aa 0B       		.uleb128 0xb
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 111


 3379 00ab 3B       		.uleb128 0x3b
 3380 00ac 0B       		.uleb128 0xb
 3381 00ad 49       		.uleb128 0x49
 3382 00ae 13       		.uleb128 0x13
 3383 00af 02       		.uleb128 0x2
 3384 00b0 17       		.uleb128 0x17
 3385 00b1 00       		.byte	0
 3386 00b2 00       		.byte	0
 3387 00b3 0F       		.uleb128 0xf
 3388 00b4 34       		.uleb128 0x34
 3389 00b5 00       		.byte	0
 3390 00b6 03       		.uleb128 0x3
 3391 00b7 0E       		.uleb128 0xe
 3392 00b8 3A       		.uleb128 0x3a
 3393 00b9 0B       		.uleb128 0xb
 3394 00ba 3B       		.uleb128 0x3b
 3395 00bb 0B       		.uleb128 0xb
 3396 00bc 49       		.uleb128 0x49
 3397 00bd 13       		.uleb128 0x13
 3398 00be 02       		.uleb128 0x2
 3399 00bf 17       		.uleb128 0x17
 3400 00c0 00       		.byte	0
 3401 00c1 00       		.byte	0
 3402 00c2 10       		.uleb128 0x10
 3403 00c3 898201   		.uleb128 0x4109
 3404 00c6 01       		.byte	0x1
 3405 00c7 11       		.uleb128 0x11
 3406 00c8 01       		.uleb128 0x1
 3407 00c9 31       		.uleb128 0x31
 3408 00ca 13       		.uleb128 0x13
 3409 00cb 01       		.uleb128 0x1
 3410 00cc 13       		.uleb128 0x13
 3411 00cd 00       		.byte	0
 3412 00ce 00       		.byte	0
 3413 00cf 11       		.uleb128 0x11
 3414 00d0 8A8201   		.uleb128 0x410a
 3415 00d3 00       		.byte	0
 3416 00d4 02       		.uleb128 0x2
 3417 00d5 18       		.uleb128 0x18
 3418 00d6 9142     		.uleb128 0x2111
 3419 00d8 18       		.uleb128 0x18
 3420 00d9 00       		.byte	0
 3421 00da 00       		.byte	0
 3422 00db 12       		.uleb128 0x12
 3423 00dc 898201   		.uleb128 0x4109
 3424 00df 00       		.byte	0
 3425 00e0 11       		.uleb128 0x11
 3426 00e1 01       		.uleb128 0x1
 3427 00e2 31       		.uleb128 0x31
 3428 00e3 13       		.uleb128 0x13
 3429 00e4 00       		.byte	0
 3430 00e5 00       		.byte	0
 3431 00e6 13       		.uleb128 0x13
 3432 00e7 898201   		.uleb128 0x4109
 3433 00ea 01       		.byte	0x1
 3434 00eb 11       		.uleb128 0x11
 3435 00ec 01       		.uleb128 0x1
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 112


 3436 00ed 31       		.uleb128 0x31
 3437 00ee 13       		.uleb128 0x13
 3438 00ef 00       		.byte	0
 3439 00f0 00       		.byte	0
 3440 00f1 14       		.uleb128 0x14
 3441 00f2 34       		.uleb128 0x34
 3442 00f3 00       		.byte	0
 3443 00f4 03       		.uleb128 0x3
 3444 00f5 08       		.uleb128 0x8
 3445 00f6 3A       		.uleb128 0x3a
 3446 00f7 0B       		.uleb128 0xb
 3447 00f8 3B       		.uleb128 0x3b
 3448 00f9 0B       		.uleb128 0xb
 3449 00fa 49       		.uleb128 0x49
 3450 00fb 13       		.uleb128 0x13
 3451 00fc 02       		.uleb128 0x2
 3452 00fd 17       		.uleb128 0x17
 3453 00fe 00       		.byte	0
 3454 00ff 00       		.byte	0
 3455 0100 15       		.uleb128 0x15
 3456 0101 2E       		.uleb128 0x2e
 3457 0102 01       		.byte	0x1
 3458 0103 3F       		.uleb128 0x3f
 3459 0104 19       		.uleb128 0x19
 3460 0105 03       		.uleb128 0x3
 3461 0106 0E       		.uleb128 0xe
 3462 0107 3A       		.uleb128 0x3a
 3463 0108 0B       		.uleb128 0xb
 3464 0109 3B       		.uleb128 0x3b
 3465 010a 05       		.uleb128 0x5
 3466 010b 27       		.uleb128 0x27
 3467 010c 19       		.uleb128 0x19
 3468 010d 11       		.uleb128 0x11
 3469 010e 01       		.uleb128 0x1
 3470 010f 12       		.uleb128 0x12
 3471 0110 06       		.uleb128 0x6
 3472 0111 40       		.uleb128 0x40
 3473 0112 18       		.uleb128 0x18
 3474 0113 9742     		.uleb128 0x2117
 3475 0115 19       		.uleb128 0x19
 3476 0116 01       		.uleb128 0x1
 3477 0117 13       		.uleb128 0x13
 3478 0118 00       		.byte	0
 3479 0119 00       		.byte	0
 3480 011a 16       		.uleb128 0x16
 3481 011b 34       		.uleb128 0x34
 3482 011c 00       		.byte	0
 3483 011d 03       		.uleb128 0x3
 3484 011e 08       		.uleb128 0x8
 3485 011f 3A       		.uleb128 0x3a
 3486 0120 0B       		.uleb128 0xb
 3487 0121 3B       		.uleb128 0x3b
 3488 0122 05       		.uleb128 0x5
 3489 0123 49       		.uleb128 0x49
 3490 0124 13       		.uleb128 0x13
 3491 0125 02       		.uleb128 0x2
 3492 0126 17       		.uleb128 0x17
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 113


 3493 0127 00       		.byte	0
 3494 0128 00       		.byte	0
 3495 0129 17       		.uleb128 0x17
 3496 012a 34       		.uleb128 0x34
 3497 012b 00       		.byte	0
 3498 012c 03       		.uleb128 0x3
 3499 012d 0E       		.uleb128 0xe
 3500 012e 3A       		.uleb128 0x3a
 3501 012f 0B       		.uleb128 0xb
 3502 0130 3B       		.uleb128 0x3b
 3503 0131 05       		.uleb128 0x5
 3504 0132 49       		.uleb128 0x49
 3505 0133 13       		.uleb128 0x13
 3506 0134 02       		.uleb128 0x2
 3507 0135 17       		.uleb128 0x17
 3508 0136 00       		.byte	0
 3509 0137 00       		.byte	0
 3510 0138 18       		.uleb128 0x18
 3511 0139 2E       		.uleb128 0x2e
 3512 013a 01       		.byte	0x1
 3513 013b 3F       		.uleb128 0x3f
 3514 013c 19       		.uleb128 0x19
 3515 013d 03       		.uleb128 0x3
 3516 013e 0E       		.uleb128 0xe
 3517 013f 3A       		.uleb128 0x3a
 3518 0140 0B       		.uleb128 0xb
 3519 0141 3B       		.uleb128 0x3b
 3520 0142 05       		.uleb128 0x5
 3521 0143 27       		.uleb128 0x27
 3522 0144 19       		.uleb128 0x19
 3523 0145 49       		.uleb128 0x49
 3524 0146 13       		.uleb128 0x13
 3525 0147 11       		.uleb128 0x11
 3526 0148 01       		.uleb128 0x1
 3527 0149 12       		.uleb128 0x12
 3528 014a 06       		.uleb128 0x6
 3529 014b 40       		.uleb128 0x40
 3530 014c 18       		.uleb128 0x18
 3531 014d 9742     		.uleb128 0x2117
 3532 014f 19       		.uleb128 0x19
 3533 0150 01       		.uleb128 0x1
 3534 0151 13       		.uleb128 0x13
 3535 0152 00       		.byte	0
 3536 0153 00       		.byte	0
 3537 0154 19       		.uleb128 0x19
 3538 0155 05       		.uleb128 0x5
 3539 0156 00       		.byte	0
 3540 0157 03       		.uleb128 0x3
 3541 0158 0E       		.uleb128 0xe
 3542 0159 3A       		.uleb128 0x3a
 3543 015a 0B       		.uleb128 0xb
 3544 015b 3B       		.uleb128 0x3b
 3545 015c 05       		.uleb128 0x5
 3546 015d 49       		.uleb128 0x49
 3547 015e 13       		.uleb128 0x13
 3548 015f 02       		.uleb128 0x2
 3549 0160 17       		.uleb128 0x17
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 114


 3550 0161 00       		.byte	0
 3551 0162 00       		.byte	0
 3552 0163 1A       		.uleb128 0x1a
 3553 0164 05       		.uleb128 0x5
 3554 0165 00       		.byte	0
 3555 0166 03       		.uleb128 0x3
 3556 0167 0E       		.uleb128 0xe
 3557 0168 3A       		.uleb128 0x3a
 3558 0169 0B       		.uleb128 0xb
 3559 016a 3B       		.uleb128 0x3b
 3560 016b 05       		.uleb128 0x5
 3561 016c 49       		.uleb128 0x49
 3562 016d 13       		.uleb128 0x13
 3563 016e 02       		.uleb128 0x2
 3564 016f 18       		.uleb128 0x18
 3565 0170 00       		.byte	0
 3566 0171 00       		.byte	0
 3567 0172 1B       		.uleb128 0x1b
 3568 0173 34       		.uleb128 0x34
 3569 0174 00       		.byte	0
 3570 0175 03       		.uleb128 0x3
 3571 0176 0E       		.uleb128 0xe
 3572 0177 3A       		.uleb128 0x3a
 3573 0178 0B       		.uleb128 0xb
 3574 0179 3B       		.uleb128 0x3b
 3575 017a 05       		.uleb128 0x5
 3576 017b 49       		.uleb128 0x49
 3577 017c 13       		.uleb128 0x13
 3578 017d 00       		.byte	0
 3579 017e 00       		.byte	0
 3580 017f 1C       		.uleb128 0x1c
 3581 0180 34       		.uleb128 0x34
 3582 0181 00       		.byte	0
 3583 0182 03       		.uleb128 0x3
 3584 0183 0E       		.uleb128 0xe
 3585 0184 3A       		.uleb128 0x3a
 3586 0185 0B       		.uleb128 0xb
 3587 0186 3B       		.uleb128 0x3b
 3588 0187 05       		.uleb128 0x5
 3589 0188 49       		.uleb128 0x49
 3590 0189 13       		.uleb128 0x13
 3591 018a 1C       		.uleb128 0x1c
 3592 018b 0B       		.uleb128 0xb
 3593 018c 00       		.byte	0
 3594 018d 00       		.byte	0
 3595 018e 1D       		.uleb128 0x1d
 3596 018f 05       		.uleb128 0x5
 3597 0190 00       		.byte	0
 3598 0191 03       		.uleb128 0x3
 3599 0192 08       		.uleb128 0x8
 3600 0193 3A       		.uleb128 0x3a
 3601 0194 0B       		.uleb128 0xb
 3602 0195 3B       		.uleb128 0x3b
 3603 0196 05       		.uleb128 0x5
 3604 0197 49       		.uleb128 0x49
 3605 0198 13       		.uleb128 0x13
 3606 0199 02       		.uleb128 0x2
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 115


 3607 019a 17       		.uleb128 0x17
 3608 019b 00       		.byte	0
 3609 019c 00       		.byte	0
 3610 019d 1E       		.uleb128 0x1e
 3611 019e 05       		.uleb128 0x5
 3612 019f 00       		.byte	0
 3613 01a0 03       		.uleb128 0x3
 3614 01a1 08       		.uleb128 0x8
 3615 01a2 3A       		.uleb128 0x3a
 3616 01a3 0B       		.uleb128 0xb
 3617 01a4 3B       		.uleb128 0x3b
 3618 01a5 05       		.uleb128 0x5
 3619 01a6 49       		.uleb128 0x49
 3620 01a7 13       		.uleb128 0x13
 3621 01a8 02       		.uleb128 0x2
 3622 01a9 18       		.uleb128 0x18
 3623 01aa 00       		.byte	0
 3624 01ab 00       		.byte	0
 3625 01ac 1F       		.uleb128 0x1f
 3626 01ad 34       		.uleb128 0x34
 3627 01ae 00       		.byte	0
 3628 01af 03       		.uleb128 0x3
 3629 01b0 08       		.uleb128 0x8
 3630 01b1 3A       		.uleb128 0x3a
 3631 01b2 0B       		.uleb128 0xb
 3632 01b3 3B       		.uleb128 0x3b
 3633 01b4 05       		.uleb128 0x5
 3634 01b5 49       		.uleb128 0x49
 3635 01b6 13       		.uleb128 0x13
 3636 01b7 00       		.byte	0
 3637 01b8 00       		.byte	0
 3638 01b9 20       		.uleb128 0x20
 3639 01ba 34       		.uleb128 0x34
 3640 01bb 00       		.byte	0
 3641 01bc 03       		.uleb128 0x3
 3642 01bd 0E       		.uleb128 0xe
 3643 01be 3A       		.uleb128 0x3a
 3644 01bf 0B       		.uleb128 0xb
 3645 01c0 3B       		.uleb128 0x3b
 3646 01c1 05       		.uleb128 0x5
 3647 01c2 49       		.uleb128 0x49
 3648 01c3 13       		.uleb128 0x13
 3649 01c4 02       		.uleb128 0x2
 3650 01c5 18       		.uleb128 0x18
 3651 01c6 00       		.byte	0
 3652 01c7 00       		.byte	0
 3653 01c8 21       		.uleb128 0x21
 3654 01c9 2E       		.uleb128 0x2e
 3655 01ca 00       		.byte	0
 3656 01cb 3F       		.uleb128 0x3f
 3657 01cc 19       		.uleb128 0x19
 3658 01cd 03       		.uleb128 0x3
 3659 01ce 0E       		.uleb128 0xe
 3660 01cf 3A       		.uleb128 0x3a
 3661 01d0 0B       		.uleb128 0xb
 3662 01d1 3B       		.uleb128 0x3b
 3663 01d2 05       		.uleb128 0x5
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 116


 3664 01d3 27       		.uleb128 0x27
 3665 01d4 19       		.uleb128 0x19
 3666 01d5 11       		.uleb128 0x11
 3667 01d6 01       		.uleb128 0x1
 3668 01d7 12       		.uleb128 0x12
 3669 01d8 06       		.uleb128 0x6
 3670 01d9 40       		.uleb128 0x40
 3671 01da 18       		.uleb128 0x18
 3672 01db 9742     		.uleb128 0x2117
 3673 01dd 19       		.uleb128 0x19
 3674 01de 00       		.byte	0
 3675 01df 00       		.byte	0
 3676 01e0 22       		.uleb128 0x22
 3677 01e1 01       		.uleb128 0x1
 3678 01e2 01       		.byte	0x1
 3679 01e3 49       		.uleb128 0x49
 3680 01e4 13       		.uleb128 0x13
 3681 01e5 01       		.uleb128 0x1
 3682 01e6 13       		.uleb128 0x13
 3683 01e7 00       		.byte	0
 3684 01e8 00       		.byte	0
 3685 01e9 23       		.uleb128 0x23
 3686 01ea 21       		.uleb128 0x21
 3687 01eb 00       		.byte	0
 3688 01ec 49       		.uleb128 0x49
 3689 01ed 13       		.uleb128 0x13
 3690 01ee 2F       		.uleb128 0x2f
 3691 01ef 0B       		.uleb128 0xb
 3692 01f0 00       		.byte	0
 3693 01f1 00       		.byte	0
 3694 01f2 24       		.uleb128 0x24
 3695 01f3 34       		.uleb128 0x34
 3696 01f4 00       		.byte	0
 3697 01f5 03       		.uleb128 0x3
 3698 01f6 0E       		.uleb128 0xe
 3699 01f7 3A       		.uleb128 0x3a
 3700 01f8 0B       		.uleb128 0xb
 3701 01f9 3B       		.uleb128 0x3b
 3702 01fa 0B       		.uleb128 0xb
 3703 01fb 49       		.uleb128 0x49
 3704 01fc 13       		.uleb128 0x13
 3705 01fd 02       		.uleb128 0x2
 3706 01fe 18       		.uleb128 0x18
 3707 01ff 00       		.byte	0
 3708 0200 00       		.byte	0
 3709 0201 25       		.uleb128 0x25
 3710 0202 34       		.uleb128 0x34
 3711 0203 00       		.byte	0
 3712 0204 03       		.uleb128 0x3
 3713 0205 0E       		.uleb128 0xe
 3714 0206 3A       		.uleb128 0x3a
 3715 0207 0B       		.uleb128 0xb
 3716 0208 3B       		.uleb128 0x3b
 3717 0209 0B       		.uleb128 0xb
 3718 020a 49       		.uleb128 0x49
 3719 020b 13       		.uleb128 0x13
 3720 020c 3F       		.uleb128 0x3f
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 117


 3721 020d 19       		.uleb128 0x19
 3722 020e 3C       		.uleb128 0x3c
 3723 020f 19       		.uleb128 0x19
 3724 0210 00       		.byte	0
 3725 0211 00       		.byte	0
 3726 0212 26       		.uleb128 0x26
 3727 0213 34       		.uleb128 0x34
 3728 0214 00       		.byte	0
 3729 0215 03       		.uleb128 0x3
 3730 0216 0E       		.uleb128 0xe
 3731 0217 3A       		.uleb128 0x3a
 3732 0218 0B       		.uleb128 0xb
 3733 0219 3B       		.uleb128 0x3b
 3734 021a 0B       		.uleb128 0xb
 3735 021b 49       		.uleb128 0x49
 3736 021c 13       		.uleb128 0x13
 3737 021d 3F       		.uleb128 0x3f
 3738 021e 19       		.uleb128 0x19
 3739 021f 02       		.uleb128 0x2
 3740 0220 18       		.uleb128 0x18
 3741 0221 00       		.byte	0
 3742 0222 00       		.byte	0
 3743 0223 27       		.uleb128 0x27
 3744 0224 2E       		.uleb128 0x2e
 3745 0225 00       		.byte	0
 3746 0226 3F       		.uleb128 0x3f
 3747 0227 19       		.uleb128 0x19
 3748 0228 3C       		.uleb128 0x3c
 3749 0229 19       		.uleb128 0x19
 3750 022a 6E       		.uleb128 0x6e
 3751 022b 0E       		.uleb128 0xe
 3752 022c 03       		.uleb128 0x3
 3753 022d 0E       		.uleb128 0xe
 3754 022e 3A       		.uleb128 0x3a
 3755 022f 0B       		.uleb128 0xb
 3756 0230 3B       		.uleb128 0x3b
 3757 0231 0B       		.uleb128 0xb
 3758 0232 00       		.byte	0
 3759 0233 00       		.byte	0
 3760 0234 00       		.byte	0
 3761              		.section	.debug_loc,"",%progbits
 3762              	.Ldebug_loc0:
 3763              	.LLST0:
 3764 0000 00000000 		.4byte	.LVL0
 3765 0004 12000000 		.4byte	.LVL2
 3766 0008 0100     		.2byte	0x1
 3767 000a 50       		.byte	0x50
 3768 000b 12000000 		.4byte	.LVL2
 3769 000f 3C000000 		.4byte	.LFE32
 3770 0013 0400     		.2byte	0x4
 3771 0015 F3       		.byte	0xf3
 3772 0016 01       		.uleb128 0x1
 3773 0017 50       		.byte	0x50
 3774 0018 9F       		.byte	0x9f
 3775 0019 00000000 		.4byte	0
 3776 001d 00000000 		.4byte	0
 3777              	.LLST1:
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 118


 3778 0021 06000000 		.4byte	.LVL1
 3779 0025 1E000000 		.4byte	.LVL3
 3780 0029 0100     		.2byte	0x1
 3781 002b 53       		.byte	0x53
 3782 002c 00000000 		.4byte	0
 3783 0030 00000000 		.4byte	0
 3784              	.LLST2:
 3785 0034 00000000 		.4byte	.LVL4
 3786 0038 07000000 		.4byte	.LVL5-1
 3787 003c 0100     		.2byte	0x1
 3788 003e 50       		.byte	0x50
 3789 003f 07000000 		.4byte	.LVL5-1
 3790 0043 16000000 		.4byte	.LVL8
 3791 0047 0100     		.2byte	0x1
 3792 0049 54       		.byte	0x54
 3793 004a 16000000 		.4byte	.LVL8
 3794 004e 18000000 		.4byte	.LFE33
 3795 0052 0400     		.2byte	0x4
 3796 0054 F3       		.byte	0xf3
 3797 0055 01       		.uleb128 0x1
 3798 0056 50       		.byte	0x50
 3799 0057 9F       		.byte	0x9f
 3800 0058 00000000 		.4byte	0
 3801 005c 00000000 		.4byte	0
 3802              	.LLST3:
 3803 0060 02000000 		.4byte	.LVL9
 3804 0064 06000000 		.4byte	.LVL10
 3805 0068 0200     		.2byte	0x2
 3806 006a 30       		.byte	0x30
 3807 006b 9F       		.byte	0x9f
 3808 006c 06000000 		.4byte	.LVL10
 3809 0070 12000000 		.4byte	.LVL13
 3810 0074 0100     		.2byte	0x1
 3811 0076 54       		.byte	0x54
 3812 0077 00000000 		.4byte	0
 3813 007b 00000000 		.4byte	0
 3814              	.LLST4:
 3815 007f 12000000 		.4byte	.LVL16
 3816 0083 2A000000 		.4byte	.LVL21
 3817 0087 0100     		.2byte	0x1
 3818 0089 54       		.byte	0x54
 3819 008a 00000000 		.4byte	0
 3820 008e 00000000 		.4byte	0
 3821              	.LLST5:
 3822 0092 1A000000 		.4byte	.LVL17
 3823 0096 20000000 		.4byte	.LVL18
 3824 009a 0100     		.2byte	0x1
 3825 009c 50       		.byte	0x50
 3826 009d 00000000 		.4byte	0
 3827 00a1 00000000 		.4byte	0
 3828              	.LLST6:
 3829 00a5 00000000 		.4byte	.LVL22
 3830 00a9 02000000 		.4byte	.LVL23
 3831 00ad 0100     		.2byte	0x1
 3832 00af 50       		.byte	0x50
 3833 00b0 02000000 		.4byte	.LVL23
 3834 00b4 0C000000 		.4byte	.LFE40
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 119


 3835 00b8 0400     		.2byte	0x4
 3836 00ba F3       		.byte	0xf3
 3837 00bb 01       		.uleb128 0x1
 3838 00bc 50       		.byte	0x50
 3839 00bd 9F       		.byte	0x9f
 3840 00be 00000000 		.4byte	0
 3841 00c2 00000000 		.4byte	0
 3842              	.LLST7:
 3843 00c6 00000000 		.4byte	.LVL24
 3844 00ca 02000000 		.4byte	.LVL25
 3845 00ce 0100     		.2byte	0x1
 3846 00d0 50       		.byte	0x50
 3847 00d1 02000000 		.4byte	.LVL25
 3848 00d5 0C000000 		.4byte	.LFE41
 3849 00d9 0400     		.2byte	0x4
 3850 00db F3       		.byte	0xf3
 3851 00dc 01       		.uleb128 0x1
 3852 00dd 50       		.byte	0x50
 3853 00de 9F       		.byte	0x9f
 3854 00df 00000000 		.4byte	0
 3855 00e3 00000000 		.4byte	0
 3856              	.LLST8:
 3857 00e7 00000000 		.4byte	.LVL26
 3858 00eb 04000000 		.4byte	.LVL27
 3859 00ef 0100     		.2byte	0x1
 3860 00f1 50       		.byte	0x50
 3861 00f2 04000000 		.4byte	.LVL27
 3862 00f6 0C000000 		.4byte	.LFE42
 3863 00fa 0400     		.2byte	0x4
 3864 00fc F3       		.byte	0xf3
 3865 00fd 01       		.uleb128 0x1
 3866 00fe 50       		.byte	0x50
 3867 00ff 9F       		.byte	0x9f
 3868 0100 00000000 		.4byte	0
 3869 0104 00000000 		.4byte	0
 3870              	.LLST9:
 3871 0108 00000000 		.4byte	.LVL28
 3872 010c 04000000 		.4byte	.LVL29
 3873 0110 0100     		.2byte	0x1
 3874 0112 50       		.byte	0x50
 3875 0113 04000000 		.4byte	.LVL29
 3876 0117 0C000000 		.4byte	.LFE43
 3877 011b 0400     		.2byte	0x4
 3878 011d F3       		.byte	0xf3
 3879 011e 01       		.uleb128 0x1
 3880 011f 50       		.byte	0x50
 3881 0120 9F       		.byte	0x9f
 3882 0121 00000000 		.4byte	0
 3883 0125 00000000 		.4byte	0
 3884              	.LLST10:
 3885 0129 00000000 		.4byte	.LVL30
 3886 012d 04000000 		.4byte	.LVL31
 3887 0131 0100     		.2byte	0x1
 3888 0133 50       		.byte	0x50
 3889 0134 04000000 		.4byte	.LVL31
 3890 0138 0C000000 		.4byte	.LFE44
 3891 013c 0400     		.2byte	0x4
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 120


 3892 013e F3       		.byte	0xf3
 3893 013f 01       		.uleb128 0x1
 3894 0140 50       		.byte	0x50
 3895 0141 9F       		.byte	0x9f
 3896 0142 00000000 		.4byte	0
 3897 0146 00000000 		.4byte	0
 3898              	.LLST11:
 3899 014a 00000000 		.4byte	.LVL32
 3900 014e 04000000 		.4byte	.LVL33
 3901 0152 0100     		.2byte	0x1
 3902 0154 50       		.byte	0x50
 3903 0155 04000000 		.4byte	.LVL33
 3904 0159 0C000000 		.4byte	.LFE45
 3905 015d 0400     		.2byte	0x4
 3906 015f F3       		.byte	0xf3
 3907 0160 01       		.uleb128 0x1
 3908 0161 50       		.byte	0x50
 3909 0162 9F       		.byte	0x9f
 3910 0163 00000000 		.4byte	0
 3911 0167 00000000 		.4byte	0
 3912              	.LLST12:
 3913 016b 00000000 		.4byte	.LVL34
 3914 016f 04000000 		.4byte	.LVL35
 3915 0173 0100     		.2byte	0x1
 3916 0175 50       		.byte	0x50
 3917 0176 04000000 		.4byte	.LVL35
 3918 017a 0C000000 		.4byte	.LFE46
 3919 017e 0400     		.2byte	0x4
 3920 0180 F3       		.byte	0xf3
 3921 0181 01       		.uleb128 0x1
 3922 0182 50       		.byte	0x50
 3923 0183 9F       		.byte	0x9f
 3924 0184 00000000 		.4byte	0
 3925 0188 00000000 		.4byte	0
 3926              	.LLST13:
 3927 018c 00000000 		.4byte	.LVL36
 3928 0190 04000000 		.4byte	.LVL37
 3929 0194 0100     		.2byte	0x1
 3930 0196 50       		.byte	0x50
 3931 0197 04000000 		.4byte	.LVL37
 3932 019b 0C000000 		.4byte	.LFE47
 3933 019f 0400     		.2byte	0x4
 3934 01a1 F3       		.byte	0xf3
 3935 01a2 01       		.uleb128 0x1
 3936 01a3 50       		.byte	0x50
 3937 01a4 9F       		.byte	0x9f
 3938 01a5 00000000 		.4byte	0
 3939 01a9 00000000 		.4byte	0
 3940              	.LLST14:
 3941 01ad 00000000 		.4byte	.LVL43
 3942 01b1 04000000 		.4byte	.LVL44
 3943 01b5 0100     		.2byte	0x1
 3944 01b7 50       		.byte	0x50
 3945 01b8 04000000 		.4byte	.LVL44
 3946 01bc 0C000000 		.4byte	.LFE53
 3947 01c0 0400     		.2byte	0x4
 3948 01c2 F3       		.byte	0xf3
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 121


 3949 01c3 01       		.uleb128 0x1
 3950 01c4 50       		.byte	0x50
 3951 01c5 9F       		.byte	0x9f
 3952 01c6 00000000 		.4byte	0
 3953 01ca 00000000 		.4byte	0
 3954              	.LLST15:
 3955 01ce 00000000 		.4byte	.LVL45
 3956 01d2 1E000000 		.4byte	.LVL49
 3957 01d6 0100     		.2byte	0x1
 3958 01d8 50       		.byte	0x50
 3959 01d9 1E000000 		.4byte	.LVL49
 3960 01dd 23000000 		.4byte	.LVL50-1
 3961 01e1 0100     		.2byte	0x1
 3962 01e3 51       		.byte	0x51
 3963 01e4 23000000 		.4byte	.LVL50-1
 3964 01e8 8C000000 		.4byte	.LVL57
 3965 01ec 0100     		.2byte	0x1
 3966 01ee 54       		.byte	0x54
 3967 01ef 8C000000 		.4byte	.LVL57
 3968 01f3 A8000000 		.4byte	.LFE54
 3969 01f7 0400     		.2byte	0x4
 3970 01f9 F3       		.byte	0xf3
 3971 01fa 01       		.uleb128 0x1
 3972 01fb 50       		.byte	0x50
 3973 01fc 9F       		.byte	0x9f
 3974 01fd 00000000 		.4byte	0
 3975 0201 00000000 		.4byte	0
 3976              	.LLST16:
 3977 0205 1A000000 		.4byte	.LVL48
 3978 0209 8C000000 		.4byte	.LVL59
 3979 020d 0100     		.2byte	0x1
 3980 020f 58       		.byte	0x58
 3981 0210 00000000 		.4byte	0
 3982 0214 00000000 		.4byte	0
 3983              	.LLST17:
 3984 0218 10000000 		.4byte	.LVL46
 3985 021c 8C000000 		.4byte	.LVL58
 3986 0220 0100     		.2byte	0x1
 3987 0222 57       		.byte	0x57
 3988 0223 00000000 		.4byte	0
 3989 0227 00000000 		.4byte	0
 3990              	.LLST18:
 3991 022b 14000000 		.4byte	.LVL47
 3992 022f 30000000 		.4byte	.LVL51
 3993 0233 0100     		.2byte	0x1
 3994 0235 56       		.byte	0x56
 3995 0236 4A000000 		.4byte	.LVL53
 3996 023a 52000000 		.4byte	.LVL54
 3997 023e 0100     		.2byte	0x1
 3998 0240 56       		.byte	0x56
 3999 0241 00000000 		.4byte	0
 4000 0245 00000000 		.4byte	0
 4001              	.LLST19:
 4002 0249 00000000 		.4byte	.LVL60
 4003 024d 04000000 		.4byte	.LVL62
 4004 0251 0100     		.2byte	0x1
 4005 0253 50       		.byte	0x50
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 122


 4006 0254 04000000 		.4byte	.LVL62
 4007 0258 10000000 		.4byte	.LFE55
 4008 025c 0400     		.2byte	0x4
 4009 025e F3       		.byte	0xf3
 4010 025f 01       		.uleb128 0x1
 4011 0260 50       		.byte	0x50
 4012 0261 9F       		.byte	0x9f
 4013 0262 00000000 		.4byte	0
 4014 0266 00000000 		.4byte	0
 4015              	.LLST20:
 4016 026a 02000000 		.4byte	.LVL61
 4017 026e 0E000000 		.4byte	.LVL64
 4018 0272 0200     		.2byte	0x2
 4019 0274 30       		.byte	0x30
 4020 0275 9F       		.byte	0x9f
 4021 0276 0E000000 		.4byte	.LVL64
 4022 027a 10000000 		.4byte	.LFE55
 4023 027e 0200     		.2byte	0x2
 4024 0280 31       		.byte	0x31
 4025 0281 9F       		.byte	0x9f
 4026 0282 00000000 		.4byte	0
 4027 0286 00000000 		.4byte	0
 4028              	.LLST21:
 4029 028a 02000000 		.4byte	.LVL61
 4030 028e 0E000000 		.4byte	.LVL64
 4031 0292 0200     		.2byte	0x2
 4032 0294 30       		.byte	0x30
 4033 0295 9F       		.byte	0x9f
 4034 0296 0E000000 		.4byte	.LVL64
 4035 029a 10000000 		.4byte	.LFE55
 4036 029e 0100     		.2byte	0x1
 4037 02a0 50       		.byte	0x50
 4038 02a1 00000000 		.4byte	0
 4039 02a5 00000000 		.4byte	0
 4040              	.LLST22:
 4041 02a9 02000000 		.4byte	.LVL65
 4042 02ad 08000000 		.4byte	.LVL66
 4043 02b1 0200     		.2byte	0x2
 4044 02b3 30       		.byte	0x30
 4045 02b4 9F       		.byte	0x9f
 4046 02b5 08000000 		.4byte	.LVL66
 4047 02b9 1C000000 		.4byte	.LVL70
 4048 02bd 0100     		.2byte	0x1
 4049 02bf 54       		.byte	0x54
 4050 02c0 00000000 		.4byte	0
 4051 02c4 00000000 		.4byte	0
 4052              	.LLST23:
 4053 02c8 02000000 		.4byte	.LVL65
 4054 02cc 08000000 		.4byte	.LVL66
 4055 02d0 0200     		.2byte	0x2
 4056 02d2 30       		.byte	0x30
 4057 02d3 9F       		.byte	0x9f
 4058 02d4 08000000 		.4byte	.LVL66
 4059 02d8 1C000000 		.4byte	.LVL71
 4060 02dc 0100     		.2byte	0x1
 4061 02de 55       		.byte	0x55
 4062 02df 1C000000 		.4byte	.LVL71
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 123


 4063 02e3 1E000000 		.4byte	.LFE56
 4064 02e7 0100     		.2byte	0x1
 4065 02e9 50       		.byte	0x50
 4066 02ea 00000000 		.4byte	0
 4067 02ee 00000000 		.4byte	0
 4068              	.LLST24:
 4069 02f2 00000000 		.4byte	.LVL72
 4070 02f6 08000000 		.4byte	.LVL74
 4071 02fa 0100     		.2byte	0x1
 4072 02fc 50       		.byte	0x50
 4073 02fd 08000000 		.4byte	.LVL74
 4074 0301 14000000 		.4byte	.LFE57
 4075 0305 0400     		.2byte	0x4
 4076 0307 F3       		.byte	0xf3
 4077 0308 01       		.uleb128 0x1
 4078 0309 50       		.byte	0x50
 4079 030a 9F       		.byte	0x9f
 4080 030b 00000000 		.4byte	0
 4081 030f 00000000 		.4byte	0
 4082              	.LLST25:
 4083 0313 02000000 		.4byte	.LVL73
 4084 0317 0C000000 		.4byte	.LVL75
 4085 031b 0200     		.2byte	0x2
 4086 031d 30       		.byte	0x30
 4087 031e 9F       		.byte	0x9f
 4088 031f 0C000000 		.4byte	.LVL75
 4089 0323 14000000 		.4byte	.LFE57
 4090 0327 0200     		.2byte	0x2
 4091 0329 31       		.byte	0x31
 4092 032a 9F       		.byte	0x9f
 4093 032b 00000000 		.4byte	0
 4094 032f 00000000 		.4byte	0
 4095              	.LLST26:
 4096 0333 00000000 		.4byte	.LVL76
 4097 0337 08000000 		.4byte	.LVL78
 4098 033b 0100     		.2byte	0x1
 4099 033d 50       		.byte	0x50
 4100 033e 08000000 		.4byte	.LVL78
 4101 0342 14000000 		.4byte	.LFE58
 4102 0346 0400     		.2byte	0x4
 4103 0348 F3       		.byte	0xf3
 4104 0349 01       		.uleb128 0x1
 4105 034a 50       		.byte	0x50
 4106 034b 9F       		.byte	0x9f
 4107 034c 00000000 		.4byte	0
 4108 0350 00000000 		.4byte	0
 4109              	.LLST27:
 4110 0354 02000000 		.4byte	.LVL77
 4111 0358 0C000000 		.4byte	.LVL79
 4112 035c 0200     		.2byte	0x2
 4113 035e 30       		.byte	0x30
 4114 035f 9F       		.byte	0x9f
 4115 0360 0C000000 		.4byte	.LVL79
 4116 0364 14000000 		.4byte	.LFE58
 4117 0368 0200     		.2byte	0x2
 4118 036a 31       		.byte	0x31
 4119 036b 9F       		.byte	0x9f
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 124


 4120 036c 00000000 		.4byte	0
 4121 0370 00000000 		.4byte	0
 4122              	.LLST28:
 4123 0374 00000000 		.4byte	.LVL80
 4124 0378 08000000 		.4byte	.LVL81
 4125 037c 0100     		.2byte	0x1
 4126 037e 50       		.byte	0x50
 4127 037f 08000000 		.4byte	.LVL81
 4128 0383 0A000000 		.4byte	.LVL82
 4129 0387 0400     		.2byte	0x4
 4130 0389 F3       		.byte	0xf3
 4131 038a 01       		.uleb128 0x1
 4132 038b 50       		.byte	0x50
 4133 038c 9F       		.byte	0x9f
 4134 038d 0A000000 		.4byte	.LVL82
 4135 0391 1A000000 		.4byte	.LVL84
 4136 0395 0100     		.2byte	0x1
 4137 0397 50       		.byte	0x50
 4138 0398 00000000 		.4byte	0
 4139 039c 00000000 		.4byte	0
 4140              	.LLST29:
 4141 03a0 00000000 		.4byte	.LVL80
 4142 03a4 0A000000 		.4byte	.LVL82
 4143 03a8 0100     		.2byte	0x1
 4144 03aa 51       		.byte	0x51
 4145 03ab 0A000000 		.4byte	.LVL82
 4146 03af 1C000000 		.4byte	.LFE59
 4147 03b3 0100     		.2byte	0x1
 4148 03b5 51       		.byte	0x51
 4149 03b6 00000000 		.4byte	0
 4150 03ba 00000000 		.4byte	0
 4151              	.LLST30:
 4152 03be 00000000 		.4byte	.LVL85
 4153 03c2 02000000 		.4byte	.LVL86
 4154 03c6 0100     		.2byte	0x1
 4155 03c8 50       		.byte	0x50
 4156 03c9 02000000 		.4byte	.LVL86
 4157 03cd 0C000000 		.4byte	.LFE60
 4158 03d1 0400     		.2byte	0x4
 4159 03d3 F3       		.byte	0xf3
 4160 03d4 01       		.uleb128 0x1
 4161 03d5 50       		.byte	0x50
 4162 03d6 9F       		.byte	0x9f
 4163 03d7 00000000 		.4byte	0
 4164 03db 00000000 		.4byte	0
 4165              	.LLST31:
 4166 03df 00000000 		.4byte	.LVL85
 4167 03e3 04000000 		.4byte	.LVL87
 4168 03e7 0100     		.2byte	0x1
 4169 03e9 51       		.byte	0x51
 4170 03ea 04000000 		.4byte	.LVL87
 4171 03ee 0C000000 		.4byte	.LFE60
 4172 03f2 0400     		.2byte	0x4
 4173 03f4 F3       		.byte	0xf3
 4174 03f5 01       		.uleb128 0x1
 4175 03f6 51       		.byte	0x51
 4176 03f7 9F       		.byte	0x9f
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 125


 4177 03f8 00000000 		.4byte	0
 4178 03fc 00000000 		.4byte	0
 4179              	.LLST32:
 4180 0400 02000000 		.4byte	.LVL86
 4181 0404 0A000000 		.4byte	.LVL90
 4182 0408 0100     		.2byte	0x1
 4183 040a 50       		.byte	0x50
 4184 040b 00000000 		.4byte	0
 4185 040f 00000000 		.4byte	0
 4186              	.LLST33:
 4187 0413 00000000 		.4byte	.LVL91
 4188 0417 2A000000 		.4byte	.LVL94
 4189 041b 0100     		.2byte	0x1
 4190 041d 50       		.byte	0x50
 4191 041e 2A000000 		.4byte	.LVL94
 4192 0422 DE000000 		.4byte	.LVL112
 4193 0426 0100     		.2byte	0x1
 4194 0428 54       		.byte	0x54
 4195 0429 DE000000 		.4byte	.LVL112
 4196 042d E4000000 		.4byte	.LVL113
 4197 0431 0400     		.2byte	0x4
 4198 0433 F3       		.byte	0xf3
 4199 0434 01       		.uleb128 0x1
 4200 0435 50       		.byte	0x50
 4201 0436 9F       		.byte	0x9f
 4202 0437 E4000000 		.4byte	.LVL113
 4203 043b E8000000 		.4byte	.LVL115
 4204 043f 0100     		.2byte	0x1
 4205 0441 54       		.byte	0x54
 4206 0442 E8000000 		.4byte	.LVL115
 4207 0446 EC000000 		.4byte	.LVL116
 4208 044a 0400     		.2byte	0x4
 4209 044c F3       		.byte	0xf3
 4210 044d 01       		.uleb128 0x1
 4211 044e 50       		.byte	0x50
 4212 044f 9F       		.byte	0x9f
 4213 0450 EC000000 		.4byte	.LVL116
 4214 0454 F0000000 		.4byte	.LVL117
 4215 0458 0100     		.2byte	0x1
 4216 045a 54       		.byte	0x54
 4217 045b F0000000 		.4byte	.LVL117
 4218 045f 20010000 		.4byte	.LFE36
 4219 0463 0400     		.2byte	0x4
 4220 0465 F3       		.byte	0xf3
 4221 0466 01       		.uleb128 0x1
 4222 0467 50       		.byte	0x50
 4223 0468 9F       		.byte	0x9f
 4224 0469 00000000 		.4byte	0
 4225 046d 00000000 		.4byte	0
 4226              	.LLST34:
 4227 0471 AC000000 		.4byte	.LVL104
 4228 0475 B2000000 		.4byte	.LVL105
 4229 0479 0100     		.2byte	0x1
 4230 047b 53       		.byte	0x53
 4231 047c B2000000 		.4byte	.LVL105
 4232 0480 B6000000 		.4byte	.LVL106
 4233 0484 0100     		.2byte	0x1
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 126


 4234 0486 5C       		.byte	0x5c
 4235 0487 B6000000 		.4byte	.LVL106
 4236 048b B8000000 		.4byte	.LVL107
 4237 048f 0100     		.2byte	0x1
 4238 0491 53       		.byte	0x53
 4239 0492 B8000000 		.4byte	.LVL107
 4240 0496 C8000000 		.4byte	.LVL109
 4241 049a 0100     		.2byte	0x1
 4242 049c 57       		.byte	0x57
 4243 049d 00000000 		.4byte	0
 4244 04a1 00000000 		.4byte	0
 4245              	.LLST35:
 4246 04a5 52000000 		.4byte	.LVL99
 4247 04a9 58000000 		.4byte	.LVL100
 4248 04ad 0200     		.2byte	0x2
 4249 04af 31       		.byte	0x31
 4250 04b0 9F       		.byte	0x9f
 4251 04b1 5C000000 		.4byte	.LVL101
 4252 04b5 60000000 		.4byte	.LVL102
 4253 04b9 0200     		.2byte	0x2
 4254 04bb 30       		.byte	0x30
 4255 04bc 9F       		.byte	0x9f
 4256 04bd 60000000 		.4byte	.LVL102
 4257 04c1 D6000000 		.4byte	.LVL110
 4258 04c5 0100     		.2byte	0x1
 4259 04c7 58       		.byte	0x58
 4260 04c8 D6000000 		.4byte	.LVL110
 4261 04cc DC000000 		.4byte	.LVL111
 4262 04d0 0100     		.2byte	0x1
 4263 04d2 53       		.byte	0x53
 4264 04d3 DC000000 		.4byte	.LVL111
 4265 04d7 E4000000 		.4byte	.LVL113
 4266 04db 0100     		.2byte	0x1
 4267 04dd 58       		.byte	0x58
 4268 04de E4000000 		.4byte	.LVL113
 4269 04e2 E6000000 		.4byte	.LVL114
 4270 04e6 0100     		.2byte	0x1
 4271 04e8 53       		.byte	0x53
 4272 04e9 E6000000 		.4byte	.LVL114
 4273 04ed F6000000 		.4byte	.LVL119
 4274 04f1 0100     		.2byte	0x1
 4275 04f3 58       		.byte	0x58
 4276 04f4 00000000 		.4byte	0
 4277 04f8 00000000 		.4byte	0
 4278              	.LLST36:
 4279 04fc 52000000 		.4byte	.LVL99
 4280 0500 58000000 		.4byte	.LVL100
 4281 0504 0100     		.2byte	0x1
 4282 0506 55       		.byte	0x55
 4283 0507 5C000000 		.4byte	.LVL101
 4284 050b F6000000 		.4byte	.LVL118
 4285 050f 0100     		.2byte	0x1
 4286 0511 55       		.byte	0x55
 4287 0512 00000000 		.4byte	0
 4288 0516 00000000 		.4byte	0
 4289              	.LLST37:
 4290 051a 1A000000 		.4byte	.LVL93
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 127


 4291 051e 30000000 		.4byte	.LVL96
 4292 0522 0100     		.2byte	0x1
 4293 0524 57       		.byte	0x57
 4294 0525 30000000 		.4byte	.LVL96
 4295 0529 34000000 		.4byte	.LVL97
 4296 052d 0100     		.2byte	0x1
 4297 052f 50       		.byte	0x50
 4298 0530 34000000 		.4byte	.LVL97
 4299 0534 B8000000 		.4byte	.LVL107
 4300 0538 0100     		.2byte	0x1
 4301 053a 57       		.byte	0x57
 4302 053b 00000000 		.4byte	0
 4303 053f 00000000 		.4byte	0
 4304              	.LLST38:
 4305 0543 00000000 		.4byte	.LVL120
 4306 0547 07000000 		.4byte	.LVL121-1
 4307 054b 0100     		.2byte	0x1
 4308 054d 50       		.byte	0x50
 4309 054e 07000000 		.4byte	.LVL121-1
 4310 0552 0E000000 		.4byte	.LVL123
 4311 0556 0100     		.2byte	0x1
 4312 0558 54       		.byte	0x54
 4313 0559 0E000000 		.4byte	.LVL123
 4314 055d 10000000 		.4byte	.LFE37
 4315 0561 0400     		.2byte	0x4
 4316 0563 F3       		.byte	0xf3
 4317 0564 01       		.uleb128 0x1
 4318 0565 50       		.byte	0x50
 4319 0566 9F       		.byte	0x9f
 4320 0567 00000000 		.4byte	0
 4321 056b 00000000 		.4byte	0
 4322              	.LLST39:
 4323 056f 02000000 		.4byte	.LVL124
 4324 0573 06000000 		.4byte	.LVL125
 4325 0577 0200     		.2byte	0x2
 4326 0579 30       		.byte	0x30
 4327 057a 9F       		.byte	0x9f
 4328 057b 06000000 		.4byte	.LVL125
 4329 057f 1E000000 		.4byte	.LVL130
 4330 0583 0100     		.2byte	0x1
 4331 0585 54       		.byte	0x54
 4332 0586 00000000 		.4byte	0
 4333 058a 00000000 		.4byte	0
 4334              	.LLST40:
 4335 058e 0E000000 		.4byte	.LVL126
 4336 0592 14000000 		.4byte	.LVL127
 4337 0596 0100     		.2byte	0x1
 4338 0598 50       		.byte	0x50
 4339 0599 00000000 		.4byte	0
 4340 059d 00000000 		.4byte	0
 4341              	.LLST41:
 4342 05a1 00000000 		.4byte	.LVL131
 4343 05a5 06000000 		.4byte	.LVL133
 4344 05a9 0100     		.2byte	0x1
 4345 05ab 50       		.byte	0x50
 4346 05ac 06000000 		.4byte	.LVL133
 4347 05b0 24000000 		.4byte	.LFE39
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 128


 4348 05b4 0400     		.2byte	0x4
 4349 05b6 F3       		.byte	0xf3
 4350 05b7 01       		.uleb128 0x1
 4351 05b8 50       		.byte	0x50
 4352 05b9 9F       		.byte	0x9f
 4353 05ba 00000000 		.4byte	0
 4354 05be 00000000 		.4byte	0
 4355              	.LLST42:
 4356 05c2 02000000 		.4byte	.LVL132
 4357 05c6 06000000 		.4byte	.LVL133
 4358 05ca 0200     		.2byte	0x2
 4359 05cc 30       		.byte	0x30
 4360 05cd 9F       		.byte	0x9f
 4361 05ce 06000000 		.4byte	.LVL133
 4362 05d2 1E000000 		.4byte	.LVL138
 4363 05d6 0100     		.2byte	0x1
 4364 05d8 54       		.byte	0x54
 4365 05d9 00000000 		.4byte	0
 4366 05dd 00000000 		.4byte	0
 4367              	.LLST43:
 4368 05e1 0E000000 		.4byte	.LVL134
 4369 05e5 14000000 		.4byte	.LVL135
 4370 05e9 0100     		.2byte	0x1
 4371 05eb 50       		.byte	0x50
 4372 05ec 00000000 		.4byte	0
 4373 05f0 00000000 		.4byte	0
 4374              	.LLST44:
 4375 05f4 00000000 		.4byte	.LVL139
 4376 05f8 04000000 		.4byte	.LVL140
 4377 05fc 0100     		.2byte	0x1
 4378 05fe 50       		.byte	0x50
 4379 05ff 04000000 		.4byte	.LVL140
 4380 0603 0C000000 		.4byte	.LFE61
 4381 0607 0400     		.2byte	0x4
 4382 0609 F3       		.byte	0xf3
 4383 060a 01       		.uleb128 0x1
 4384 060b 50       		.byte	0x50
 4385 060c 9F       		.byte	0x9f
 4386 060d 00000000 		.4byte	0
 4387 0611 00000000 		.4byte	0
 4388              	.LLST45:
 4389 0615 00000000 		.4byte	.LVL141
 4390 0619 04000000 		.4byte	.LVL142
 4391 061d 0100     		.2byte	0x1
 4392 061f 50       		.byte	0x50
 4393 0620 04000000 		.4byte	.LVL142
 4394 0624 0C000000 		.4byte	.LFE62
 4395 0628 0400     		.2byte	0x4
 4396 062a F3       		.byte	0xf3
 4397 062b 01       		.uleb128 0x1
 4398 062c 50       		.byte	0x50
 4399 062d 9F       		.byte	0x9f
 4400 062e 00000000 		.4byte	0
 4401 0632 00000000 		.4byte	0
 4402              	.LLST46:
 4403 0636 00000000 		.4byte	.LVL143
 4404 063a 04000000 		.4byte	.LVL144
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 129


 4405 063e 0100     		.2byte	0x1
 4406 0640 50       		.byte	0x50
 4407 0641 04000000 		.4byte	.LVL144
 4408 0645 0C000000 		.4byte	.LFE63
 4409 0649 0400     		.2byte	0x4
 4410 064b F3       		.byte	0xf3
 4411 064c 01       		.uleb128 0x1
 4412 064d 50       		.byte	0x50
 4413 064e 9F       		.byte	0x9f
 4414 064f 00000000 		.4byte	0
 4415 0653 00000000 		.4byte	0
 4416              		.section	.debug_aranges,"",%progbits
 4417 0000 24010000 		.4byte	0x124
 4418 0004 0200     		.2byte	0x2
 4419 0006 00000000 		.4byte	.Ldebug_info0
 4420 000a 04       		.byte	0x4
 4421 000b 00       		.byte	0
 4422 000c 0000     		.2byte	0
 4423 000e 0000     		.2byte	0
 4424 0010 00000000 		.4byte	.LFB32
 4425 0014 3C000000 		.4byte	.LFE32-.LFB32
 4426 0018 00000000 		.4byte	.LFB33
 4427 001c 18000000 		.4byte	.LFE33-.LFB33
 4428 0020 00000000 		.4byte	.LFB34
 4429 0024 14000000 		.4byte	.LFE34-.LFB34
 4430 0028 00000000 		.4byte	.LFB35
 4431 002c 30000000 		.4byte	.LFE35-.LFB35
 4432 0030 00000000 		.4byte	.LFB40
 4433 0034 0C000000 		.4byte	.LFE40-.LFB40
 4434 0038 00000000 		.4byte	.LFB41
 4435 003c 0C000000 		.4byte	.LFE41-.LFB41
 4436 0040 00000000 		.4byte	.LFB42
 4437 0044 0C000000 		.4byte	.LFE42-.LFB42
 4438 0048 00000000 		.4byte	.LFB43
 4439 004c 0C000000 		.4byte	.LFE43-.LFB43
 4440 0050 00000000 		.4byte	.LFB44
 4441 0054 0C000000 		.4byte	.LFE44-.LFB44
 4442 0058 00000000 		.4byte	.LFB45
 4443 005c 0C000000 		.4byte	.LFE45-.LFB45
 4444 0060 00000000 		.4byte	.LFB46
 4445 0064 0C000000 		.4byte	.LFE46-.LFB46
 4446 0068 00000000 		.4byte	.LFB47
 4447 006c 0C000000 		.4byte	.LFE47-.LFB47
 4448 0070 00000000 		.4byte	.LFB48
 4449 0074 0C000000 		.4byte	.LFE48-.LFB48
 4450 0078 00000000 		.4byte	.LFB49
 4451 007c 0C000000 		.4byte	.LFE49-.LFB49
 4452 0080 00000000 		.4byte	.LFB50
 4453 0084 0C000000 		.4byte	.LFE50-.LFB50
 4454 0088 00000000 		.4byte	.LFB51
 4455 008c 0C000000 		.4byte	.LFE51-.LFB51
 4456 0090 00000000 		.4byte	.LFB52
 4457 0094 0C000000 		.4byte	.LFE52-.LFB52
 4458 0098 00000000 		.4byte	.LFB53
 4459 009c 0C000000 		.4byte	.LFE53-.LFB53
 4460 00a0 00000000 		.4byte	.LFB54
 4461 00a4 A8000000 		.4byte	.LFE54-.LFB54
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 130


 4462 00a8 00000000 		.4byte	.LFB55
 4463 00ac 10000000 		.4byte	.LFE55-.LFB55
 4464 00b0 00000000 		.4byte	.LFB56
 4465 00b4 1E000000 		.4byte	.LFE56-.LFB56
 4466 00b8 00000000 		.4byte	.LFB57
 4467 00bc 14000000 		.4byte	.LFE57-.LFB57
 4468 00c0 00000000 		.4byte	.LFB58
 4469 00c4 14000000 		.4byte	.LFE58-.LFB58
 4470 00c8 00000000 		.4byte	.LFB59
 4471 00cc 1C000000 		.4byte	.LFE59-.LFB59
 4472 00d0 00000000 		.4byte	.LFB60
 4473 00d4 0C000000 		.4byte	.LFE60-.LFB60
 4474 00d8 00000000 		.4byte	.LFB36
 4475 00dc 20010000 		.4byte	.LFE36-.LFB36
 4476 00e0 00000000 		.4byte	.LFB37
 4477 00e4 10000000 		.4byte	.LFE37-.LFB37
 4478 00e8 00000000 		.4byte	.LFB38
 4479 00ec 24000000 		.4byte	.LFE38-.LFB38
 4480 00f0 00000000 		.4byte	.LFB39
 4481 00f4 24000000 		.4byte	.LFE39-.LFB39
 4482 00f8 00000000 		.4byte	.LFB61
 4483 00fc 0C000000 		.4byte	.LFE61-.LFB61
 4484 0100 00000000 		.4byte	.LFB62
 4485 0104 0C000000 		.4byte	.LFE62-.LFB62
 4486 0108 00000000 		.4byte	.LFB63
 4487 010c 0C000000 		.4byte	.LFE63-.LFB63
 4488 0110 00000000 		.4byte	.LFB64
 4489 0114 0C000000 		.4byte	.LFE64-.LFB64
 4490 0118 00000000 		.4byte	.LFB65
 4491 011c 0C000000 		.4byte	.LFE65-.LFB65
 4492 0120 00000000 		.4byte	0
 4493 0124 00000000 		.4byte	0
 4494              		.section	.debug_ranges,"",%progbits
 4495              	.Ldebug_ranges0:
 4496 0000 00000000 		.4byte	.LFB32
 4497 0004 3C000000 		.4byte	.LFE32
 4498 0008 00000000 		.4byte	.LFB33
 4499 000c 18000000 		.4byte	.LFE33
 4500 0010 00000000 		.4byte	.LFB34
 4501 0014 14000000 		.4byte	.LFE34
 4502 0018 00000000 		.4byte	.LFB35
 4503 001c 30000000 		.4byte	.LFE35
 4504 0020 00000000 		.4byte	.LFB40
 4505 0024 0C000000 		.4byte	.LFE40
 4506 0028 00000000 		.4byte	.LFB41
 4507 002c 0C000000 		.4byte	.LFE41
 4508 0030 00000000 		.4byte	.LFB42
 4509 0034 0C000000 		.4byte	.LFE42
 4510 0038 00000000 		.4byte	.LFB43
 4511 003c 0C000000 		.4byte	.LFE43
 4512 0040 00000000 		.4byte	.LFB44
 4513 0044 0C000000 		.4byte	.LFE44
 4514 0048 00000000 		.4byte	.LFB45
 4515 004c 0C000000 		.4byte	.LFE45
 4516 0050 00000000 		.4byte	.LFB46
 4517 0054 0C000000 		.4byte	.LFE46
 4518 0058 00000000 		.4byte	.LFB47
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 131


 4519 005c 0C000000 		.4byte	.LFE47
 4520 0060 00000000 		.4byte	.LFB48
 4521 0064 0C000000 		.4byte	.LFE48
 4522 0068 00000000 		.4byte	.LFB49
 4523 006c 0C000000 		.4byte	.LFE49
 4524 0070 00000000 		.4byte	.LFB50
 4525 0074 0C000000 		.4byte	.LFE50
 4526 0078 00000000 		.4byte	.LFB51
 4527 007c 0C000000 		.4byte	.LFE51
 4528 0080 00000000 		.4byte	.LFB52
 4529 0084 0C000000 		.4byte	.LFE52
 4530 0088 00000000 		.4byte	.LFB53
 4531 008c 0C000000 		.4byte	.LFE53
 4532 0090 00000000 		.4byte	.LFB54
 4533 0094 A8000000 		.4byte	.LFE54
 4534 0098 00000000 		.4byte	.LFB55
 4535 009c 10000000 		.4byte	.LFE55
 4536 00a0 00000000 		.4byte	.LFB56
 4537 00a4 1E000000 		.4byte	.LFE56
 4538 00a8 00000000 		.4byte	.LFB57
 4539 00ac 14000000 		.4byte	.LFE57
 4540 00b0 00000000 		.4byte	.LFB58
 4541 00b4 14000000 		.4byte	.LFE58
 4542 00b8 00000000 		.4byte	.LFB59
 4543 00bc 1C000000 		.4byte	.LFE59
 4544 00c0 00000000 		.4byte	.LFB60
 4545 00c4 0C000000 		.4byte	.LFE60
 4546 00c8 00000000 		.4byte	.LFB36
 4547 00cc 20010000 		.4byte	.LFE36
 4548 00d0 00000000 		.4byte	.LFB37
 4549 00d4 10000000 		.4byte	.LFE37
 4550 00d8 00000000 		.4byte	.LFB38
 4551 00dc 24000000 		.4byte	.LFE38
 4552 00e0 00000000 		.4byte	.LFB39
 4553 00e4 24000000 		.4byte	.LFE39
 4554 00e8 00000000 		.4byte	.LFB61
 4555 00ec 0C000000 		.4byte	.LFE61
 4556 00f0 00000000 		.4byte	.LFB62
 4557 00f4 0C000000 		.4byte	.LFE62
 4558 00f8 00000000 		.4byte	.LFB63
 4559 00fc 0C000000 		.4byte	.LFE63
 4560 0100 00000000 		.4byte	.LFB64
 4561 0104 0C000000 		.4byte	.LFE64
 4562 0108 00000000 		.4byte	.LFB65
 4563 010c 0C000000 		.4byte	.LFE65
 4564 0110 00000000 		.4byte	0
 4565 0114 00000000 		.4byte	0
 4566              		.section	.debug_line,"",%progbits
 4567              	.Ldebug_line0:
 4568 0000 A9030000 		.section	.debug_str,"MS",%progbits,1
 4568      02006A00 
 4568      00000201 
 4568      FB0E0D00 
 4568      01010101 
 4569              	.LASF107:
 4570 0000 43617053 		.ascii	"CapSense_sensorBaselineLow\000"
 4570      656E7365 
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 132


 4570      5F73656E 
 4570      736F7242 
 4570      6173656C 
 4571              	.LASF84:
 4572 001b 43617053 		.ascii	"CapSense_IIR4Filter\000"
 4572      656E7365 
 4572      5F494952 
 4572      3446696C 
 4572      74657200 
 4573              	.LASF102:
 4574 002f 43617053 		.ascii	"CapSense_debounceCounter\000"
 4574      656E7365 
 4574      5F646562 
 4574      6F756E63 
 4574      65436F75 
 4575              	.LASF31:
 4576 0048 7363616E 		.ascii	"scanSpeedTbl\000"
 4576      53706565 
 4576      6454626C 
 4576      00
 4577              	.LASF110:
 4578 0055 43617053 		.ascii	"CapSense_lowBaselineResetCnt\000"
 4578      656E7365 
 4578      5F6C6F77 
 4578      42617365 
 4578      6C696E65 
 4579              	.LASF85:
 4580 0072 43617053 		.ascii	"CapSense_UpdateBaselineNoThreshold\000"
 4580      656E7365 
 4580      5F557064 
 4580      61746542 
 4580      6173656C 
 4581              	.LASF34:
 4582 0095 6E756D62 		.ascii	"numberOfSensors\000"
 4582      65724F66 
 4582      53656E73 
 4582      6F727300 
 4583              	.LASF38:
 4584 00a5 70747247 		.ascii	"ptrGetBitValue\000"
 4584      65744269 
 4584      7456616C 
 4584      756500
 4585              	.LASF82:
 4586 00b4 43617053 		.ascii	"CapSense_DisableWidget\000"
 4586      656E7365 
 4586      5F446973 
 4586      61626C65 
 4586      57696467 
 4587              	.LASF92:
 4588 00cb 43617053 		.ascii	"CapSense_UpdateEnabledBaselines\000"
 4588      656E7365 
 4588      5F557064 
 4588      61746545 
 4588      6E61626C 
 4589              	.LASF120:
 4590 00eb 43617053 		.ascii	"CapSense_config\000"
 4590      656E7365 
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 133


 4590      5F636F6E 
 4590      66696700 
 4591              	.LASF54:
 4592 00fb 69735365 		.ascii	"isSensorEnabled\000"
 4592      6E736F72 
 4592      456E6162 
 4592      6C656400 
 4593              	.LASF78:
 4594 010b 6E756D4F 		.ascii	"numOfSensors\000"
 4594      6653656E 
 4594      736F7273 
 4594      00
 4595              	.LASF40:
 4596 0118 43617053 		.ascii	"CapSense_CONFIG_TYPE_POINTERS_P4_v2_60\000"
 4596      656E7365 
 4596      5F434F4E 
 4596      4649475F 
 4596      54595045 
 4597              	.LASF8:
 4598 013f 756E7369 		.ascii	"unsigned int\000"
 4598      676E6564 
 4598      20696E74 
 4598      00
 4599              	.LASF43:
 4600 014c 746F7461 		.ascii	"totalSensorsNum\000"
 4600      6C53656E 
 4600      736F7273 
 4600      4E756D00 
 4601              	.LASF131:
 4602 015c 433A5C55 		.ascii	"C:\\Users\\Zuru Shaunak\\Documents\\PSoC Creator\\W"
 4602      73657273 
 4602      5C5A7572 
 4602      75205368 
 4602      61756E61 
 4603 018a 6F726B73 		.ascii	"orkspace02\\Design01.cydsn\000"
 4603      70616365 
 4603      30325C44 
 4603      65736967 
 4603      6E30312E 
 4604              	.LASF28:
 4605 01a4 73616D70 		.ascii	"sampleMaxTbl\000"
 4605      6C654D61 
 4605      7854626C 
 4605      00
 4606              	.LASF53:
 4607 01b1 43617053 		.ascii	"CapSense_InitializeEnabledBaselines\000"
 4607      656E7365 
 4607      5F496E69 
 4607      7469616C 
 4607      697A6545 
 4608              	.LASF26:
 4609 01d5 7369676E 		.ascii	"signRegisterTbl\000"
 4609      52656769 
 4609      73746572 
 4609      54626C00 
 4610              	.LASF49:
 4611 01e5 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 134


 4611      656E7365 
 4611      5F496E69 
 4611      7469616C 
 4611      697A6553 
 4612              	.LASF123:
 4613 0207 43617053 		.ascii	"CapSense_IsBusy\000"
 4613      656E7365 
 4613      5F497342 
 4613      75737900 
 4614              	.LASF55:
 4615 0217 43617053 		.ascii	"CapSense_SetBaselineData\000"
 4615      656E7365 
 4615      5F536574 
 4615      42617365 
 4615      6C696E65 
 4616              	.LASF33:
 4617 0230 72617744 		.ascii	"rawDataIndex\000"
 4617      61746149 
 4617      6E646578 
 4617      00
 4618              	.LASF42:
 4619 023d 746F7461 		.ascii	"totalWidgetsNum\000"
 4619      6C576964 
 4619      67657473 
 4619      4E756D00 
 4620              	.LASF59:
 4621 024d 43617053 		.ascii	"CapSense_SetDiffCountData\000"
 4621      656E7365 
 4621      5F536574 
 4621      44696666 
 4621      436F756E 
 4622              	.LASF108:
 4623 0267 43617053 		.ascii	"CapSense_sensorSignal\000"
 4623      656E7365 
 4623      5F73656E 
 4623      736F7253 
 4623      69676E61 
 4624              	.LASF117:
 4625 027d 43617053 		.ascii	"CapSense_rawDataIndex\000"
 4625      656E7365 
 4625      5F726177 
 4625      44617461 
 4625      496E6465 
 4626              	.LASF66:
 4627 0293 43617053 		.ascii	"CapSense_SetNoiseThreshold\000"
 4627      656E7365 
 4627      5F536574 
 4627      4E6F6973 
 4627      65546872 
 4628              	.LASF93:
 4629 02ae 43617053 		.ascii	"CapSense_UpdateWidgetBaseline\000"
 4629      656E7365 
 4629      5F557064 
 4629      61746557 
 4629      69646765 
 4630              	.LASF115:
 4631 02cc 43617053 		.ascii	"CapSense_hysteresis\000"
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 135


 4631      656E7365 
 4631      5F687973 
 4631      74657265 
 4631      73697300 
 4632              	.LASF12:
 4633 02e0 666C6F61 		.ascii	"float\000"
 4633      7400
 4634              	.LASF23:
 4635 02e6 7265736F 		.ascii	"resolutionsTbl\000"
 4635      6C757469 
 4635      6F6E7354 
 4635      626C00
 4636              	.LASF62:
 4637 02f5 43617053 		.ascii	"CapSense_GetNoiseThreshold\000"
 4637      656E7365 
 4637      5F476574 
 4637      4E6F6973 
 4637      65546872 
 4638              	.LASF25:
 4639 0310 72756E6E 		.ascii	"runningDifferenceTbl\000"
 4639      696E6744 
 4639      69666665 
 4639      72656E63 
 4639      6554626C 
 4640              	.LASF7:
 4641 0325 6C6F6E67 		.ascii	"long long unsigned int\000"
 4641      206C6F6E 
 4641      6720756E 
 4641      7369676E 
 4641      65642069 
 4642              	.LASF104:
 4643 033c 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 4643      656E7365 
 4643      5F73656E 
 4643      736F7245 
 4643      6E61626C 
 4644              	.LASF52:
 4645 0356 77696467 		.ascii	"widget\000"
 4645      657400
 4646              	.LASF112:
 4647 035d 43617053 		.ascii	"CapSense_fingerThreshold\000"
 4647      656E7365 
 4647      5F66696E 
 4647      67657254 
 4647      68726573 
 4648              	.LASF47:
 4649 0376 43617053 		.ascii	"CapSense_CONFIG_TYPE_P4_v2_60\000"
 4649      656E7365 
 4649      5F434F4E 
 4649      4649475F 
 4649      54595045 
 4650              	.LASF105:
 4651 0394 43617053 		.ascii	"CapSense_widgetNumber\000"
 4651      656E7365 
 4651      5F776964 
 4651      6765744E 
 4651      756D6265 
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 136


 4652              	.LASF65:
 4653 03aa 43617053 		.ascii	"CapSense_SetFingerThreshold\000"
 4653      656E7365 
 4653      5F536574 
 4653      46696E67 
 4653      65725468 
 4654              	.LASF101:
 4655 03c6 43617053 		.ascii	"CapSense_DisableRawDataFilters\000"
 4655      656E7365 
 4655      5F446973 
 4655      61626C65 
 4655      52617744 
 4656              	.LASF60:
 4657 03e5 76616C75 		.ascii	"value\000"
 4657      6500
 4658              	.LASF63:
 4659 03eb 43617053 		.ascii	"CapSense_GetFingerHysteresis\000"
 4659      656E7365 
 4659      5F476574 
 4659      46696E67 
 4659      65724879 
 4660              	.LASF129:
 4661 0408 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4661      43313120 
 4661      352E342E 
 4661      31203230 
 4661      31363036 
 4662 043b 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 4662      20726576 
 4662      6973696F 
 4662      6E203233 
 4662      37373135 
 4663 046e 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4663      66756E63 
 4663      74696F6E 
 4663      2D736563 
 4663      74696F6E 
 4664              	.LASF58:
 4665 0496 43617053 		.ascii	"CapSense_GetDiffCountData\000"
 4665      656E7365 
 4665      5F476574 
 4665      44696666 
 4665      436F756E 
 4666              	.LASF87:
 4667 04b0 7369676E 		.ascii	"sign\000"
 4667      00
 4668              	.LASF24:
 4669 04b5 6E6F6973 		.ascii	"noiseEnvelopeTbl\000"
 4669      65456E76 
 4669      656C6F70 
 4669      6554626C 
 4669      00
 4670              	.LASF86:
 4671 04c6 63616C63 		.ascii	"calc\000"
 4671      00
 4672              	.LASF37:
 4673 04cb 70747252 		.ascii	"ptrReadSensorRaw\000"
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 137


 4673      65616453 
 4673      656E736F 
 4673      72526177 
 4673      00
 4674              	.LASF75:
 4675 04dc 68797374 		.ascii	"hysteresis\000"
 4675      65726573 
 4675      697300
 4676              	.LASF122:
 4677 04e7 43617053 		.ascii	"CapSense_ScanSensor\000"
 4677      656E7365 
 4677      5F536361 
 4677      6E53656E 
 4677      736F7200 
 4678              	.LASF89:
 4679 04fb 66696C74 		.ascii	"filteredRawData\000"
 4679      65726564 
 4679      52617744 
 4679      61746100 
 4680              	.LASF94:
 4681 050b 73656E73 		.ascii	"sensorsPerWidget\000"
 4681      6F727350 
 4681      65725769 
 4681      64676574 
 4681      00
 4682              	.LASF80:
 4683 051c 43617053 		.ascii	"CapSense_CheckIsAnyWidgetActive\000"
 4683      656E7365 
 4683      5F436865 
 4683      636B4973 
 4683      416E7957 
 4684              	.LASF118:
 4685 053c 43617053 		.ascii	"CapSense_numberOfSensors\000"
 4685      656E7365 
 4685      5F6E756D 
 4685      6265724F 
 4685      6653656E 
 4686              	.LASF114:
 4687 0555 43617053 		.ascii	"CapSense_negativeNoiseThreshold\000"
 4687      656E7365 
 4687      5F6E6567 
 4687      61746976 
 4687      654E6F69 
 4688              	.LASF41:
 4689 0575 746F7461 		.ascii	"totalScanslotsNum\000"
 4689      6C536361 
 4689      6E736C6F 
 4689      74734E75 
 4689      6D00
 4690              	.LASF127:
 4691 0587 4D656173 		.ascii	"MeasureNoiseEnvelope_P4_v2_60\000"
 4691      7572654E 
 4691      6F697365 
 4691      456E7665 
 4691      6C6F7065 
 4692              	.LASF50:
 4693 05a5 73656E73 		.ascii	"sensor\000"
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 138


 4693      6F7200
 4694              	.LASF44:
 4695 05ac 73656E73 		.ascii	"sensetivitySeed\000"
 4695      65746976 
 4695      69747953 
 4695      65656400 
 4696              	.LASF81:
 4697 05bc 43617053 		.ascii	"CapSense_EnableWidget\000"
 4697      656E7365 
 4697      5F456E61 
 4697      626C6557 
 4697      69646765 
 4698              	.LASF14:
 4699 05d2 63686172 		.ascii	"char\000"
 4699      00
 4700              	.LASF64:
 4701 05d7 43617053 		.ascii	"CapSense_GetNegativeNoiseThreshold\000"
 4701      656E7365 
 4701      5F476574 
 4701      4E656761 
 4701      74697665 
 4702              	.LASF32:
 4703 05fa 70726573 		.ascii	"prescalerTable\000"
 4703      63616C65 
 4703      72546162 
 4703      6C6500
 4704              	.LASF10:
 4705 0609 75696E74 		.ascii	"uint16\000"
 4705      313600
 4706              	.LASF56:
 4707 0610 64617461 		.ascii	"data\000"
 4707      00
 4708              	.LASF17:
 4709 0615 69646163 		.ascii	"idac1LevelsTbl\000"
 4709      314C6576 
 4709      656C7354 
 4709      626C00
 4710              	.LASF77:
 4711 0624 72617749 		.ascii	"rawIndex\000"
 4711      6E646578 
 4711      00
 4712              	.LASF128:
 4713 062d 43617053 		.ascii	"CapSense_UpdateThresholds\000"
 4713      656E7365 
 4713      5F557064 
 4713      61746554 
 4713      68726573 
 4714              	.LASF124:
 4715 0647 43617053 		.ascii	"CapSense_ScanEnabledWidgets\000"
 4715      656E7365 
 4715      5F536361 
 4715      6E456E61 
 4715      626C6564 
 4716              	.LASF6:
 4717 0663 6C6F6E67 		.ascii	"long long int\000"
 4717      206C6F6E 
 4717      6720696E 
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 139


 4717      7400
 4718              	.LASF97:
 4719 0671 43617053 		.ascii	"CapSense_GetWidgetNumber\000"
 4719      656E7365 
 4719      5F476574 
 4719      57696467 
 4719      65744E75 
 4720              	.LASF72:
 4721 068a 6465626F 		.ascii	"debounce\000"
 4721      756E6365 
 4721      00
 4722              	.LASF36:
 4723 0693 70747250 		.ascii	"ptrPreScan\000"
 4723      72655363 
 4723      616E00
 4724              	.LASF71:
 4725 069e 43617053 		.ascii	"CapSense_CheckIsSensorActive\000"
 4725      656E7365 
 4725      5F436865 
 4725      636B4973 
 4725      53656E73 
 4726              	.LASF35:
 4727 06bb 70747247 		.ascii	"ptrGetRaw\000"
 4727      65745261 
 4727      7700
 4728              	.LASF91:
 4729 06c5 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
 4729      656E7365 
 4729      5F557064 
 4729      61746553 
 4729      656E736F 
 4730              	.LASF48:
 4731 06e3 43617053 		.ascii	"CapSense_BaseInit\000"
 4731      656E7365 
 4731      5F426173 
 4731      65496E69 
 4731      7400
 4732              	.LASF27:
 4733 06f5 73616D70 		.ascii	"sampleMinTbl\000"
 4733      6C654D69 
 4733      6E54626C 
 4733      00
 4734              	.LASF103:
 4735 0702 43617053 		.ascii	"CapSense_sensorRaw\000"
 4735      656E7365 
 4735      5F73656E 
 4735      736F7252 
 4735      617700
 4736              	.LASF98:
 4737 0715 43617053 		.ascii	"CapSense_GetLowBaselineReset\000"
 4737      656E7365 
 4737      5F476574 
 4737      4C6F7742 
 4737      6173656C 
 4738              	.LASF68:
 4739 0732 43617053 		.ascii	"CapSense_SetNegativeNoiseThreshold\000"
 4739      656E7365 
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 140


 4739      5F536574 
 4739      4E656761 
 4739      74697665 
 4740              	.LASF11:
 4741 0755 75696E74 		.ascii	"uint32\000"
 4741      333200
 4742              	.LASF67:
 4743 075c 43617053 		.ascii	"CapSense_SetFingerHysteresis\000"
 4743      656E7365 
 4743      5F536574 
 4743      46696E67 
 4743      65724879 
 4744              	.LASF61:
 4745 0779 43617053 		.ascii	"CapSense_GetFingerThreshold\000"
 4745      656E7365 
 4745      5F476574 
 4745      46696E67 
 4745      65725468 
 4746              	.LASF16:
 4747 0795 6C6F6E67 		.ascii	"long double\000"
 4747      20646F75 
 4747      626C6500 
 4748              	.LASF96:
 4749 07a1 6C617374 		.ascii	"lastSensor\000"
 4749      53656E73 
 4749      6F7200
 4750              	.LASF45:
 4751 07ac 6866636C 		.ascii	"hfclkFreq_MHz\000"
 4751      6B467265 
 4751      715F4D48 
 4751      7A00
 4752              	.LASF18:
 4753 07ba 69646163 		.ascii	"idac2LevelsTbl\000"
 4753      324C6576 
 4753      656C7354 
 4753      626C00
 4754              	.LASF2:
 4755 07c9 73686F72 		.ascii	"short int\000"
 4755      7420696E 
 4755      7400
 4756              	.LASF4:
 4757 07d3 6C6F6E67 		.ascii	"long int\000"
 4757      20696E74 
 4757      00
 4758              	.LASF95:
 4759 07dc 66697273 		.ascii	"firstSensor\000"
 4759      7453656E 
 4759      736F7200 
 4760              	.LASF116:
 4761 07e8 43617053 		.ascii	"CapSense_debounce\000"
 4761      656E7365 
 4761      5F646562 
 4761      6F756E63 
 4761      6500
 4762              	.LASF22:
 4763 07fa 77696467 		.ascii	"widgetNubmersTbl\000"
 4763      65744E75 
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 141


 4763      626D6572 
 4763      7354626C 
 4763      00
 4764              	.LASF100:
 4765 080b 43617053 		.ascii	"CapSense_EnableRawDataFilters\000"
 4765      656E7365 
 4765      5F456E61 
 4765      626C6552 
 4765      61774461 
 4766              	.LASF111:
 4767 0829 43617053 		.ascii	"CapSense_lowBaselineReset\000"
 4767      656E7365 
 4767      5F6C6F77 
 4767      42617365 
 4767      6C696E65 
 4768              	.LASF30:
 4769 0843 6B56616C 		.ascii	"kValueTbl\000"
 4769      75655462 
 4769      6C00
 4770              	.LASF106:
 4771 084d 43617053 		.ascii	"CapSense_sensorBaseline\000"
 4771      656E7365 
 4771      5F73656E 
 4771      736F7242 
 4771      6173656C 
 4772              	.LASF15:
 4773 0865 73697A65 		.ascii	"sizetype\000"
 4773      74797065 
 4773      00
 4774              	.LASF5:
 4775 086e 6C6F6E67 		.ascii	"long unsigned int\000"
 4775      20756E73 
 4775      69676E65 
 4775      6420696E 
 4775      7400
 4776              	.LASF46:
 4777 0880 706F696E 		.ascii	"pointers\000"
 4777      74657273 
 4777      00
 4778              	.LASF90:
 4779 0889 6E6F6973 		.ascii	"noiseThreshold\000"
 4779      65546872 
 4779      6573686F 
 4779      6C6400
 4780              	.LASF29:
 4781 0898 70726576 		.ascii	"previousSampleTbl\000"
 4781      696F7573 
 4781      53616D70 
 4781      6C655462 
 4781      6C00
 4782              	.LASF69:
 4783 08aa 43617053 		.ascii	"CapSense_SetDebounce\000"
 4783      656E7365 
 4783      5F536574 
 4783      4465626F 
 4783      756E6365 
 4784              	.LASF74:
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 142


 4785 08bf 66696E67 		.ascii	"fingerThreshold\000"
 4785      65725468 
 4785      72657368 
 4785      6F6C6400 
 4786              	.LASF20:
 4787 08cf 63686172 		.ascii	"chargeDivTbl\000"
 4787      67654469 
 4787      7654626C 
 4787      00
 4788              	.LASF1:
 4789 08dc 756E7369 		.ascii	"unsigned char\000"
 4789      676E6564 
 4789      20636861 
 4789      7200
 4790              	.LASF113:
 4791 08ea 43617053 		.ascii	"CapSense_noiseThreshold\000"
 4791      656E7365 
 4791      5F6E6F69 
 4791      73655468 
 4791      72657368 
 4792              	.LASF73:
 4793 0902 6465626F 		.ascii	"debounceIndex\000"
 4793      756E6365 
 4793      496E6465 
 4793      7800
 4794              	.LASF51:
 4795 0910 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
 4795      656E7365 
 4795      5F496E69 
 4795      7469616C 
 4795      697A6541 
 4796              	.LASF57:
 4797 0930 43617053 		.ascii	"CapSense_GetBaselineData\000"
 4797      656E7365 
 4797      5F476574 
 4797      42617365 
 4797      6C696E65 
 4798              	.LASF70:
 4799 0949 43617053 		.ascii	"CapSense_SetLowBaselineReset\000"
 4799      656E7365 
 4799      5F536574 
 4799      4C6F7742 
 4799      6173656C 
 4800              	.LASF19:
 4801 0966 73656E73 		.ascii	"sensetivityTbl\000"
 4801      65746976 
 4801      69747954 
 4801      626C00
 4802              	.LASF126:
 4803 0975 43617053 		.ascii	"CapSense_SetBitValue\000"
 4803      656E7365 
 4803      5F536574 
 4803      42697456 
 4803      616C7565 
 4804              	.LASF130:
 4805 098a 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_CSHL.c\000"
 4805      72617465 
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 143


 4805      645F536F 
 4805      75726365 
 4805      5C50536F 
 4806              	.LASF125:
 4807 09b1 43617053 		.ascii	"CapSense_GetBitValue\000"
 4807      656E7365 
 4807      5F476574 
 4807      42697456 
 4807      616C7565 
 4808              	.LASF79:
 4809 09c6 73746174 		.ascii	"state\000"
 4809      6500
 4810              	.LASF121:
 4811 09cc 43617053 		.ascii	"CapSense_enableRawFilters\000"
 4811      656E7365 
 4811      5F656E61 
 4811      626C6552 
 4811      61774669 
 4812              	.LASF21:
 4813 09e6 6D6F6444 		.ascii	"modDivTbl\000"
 4813      69765462 
 4813      6C00
 4814              	.LASF0:
 4815 09f0 7369676E 		.ascii	"signed char\000"
 4815      65642063 
 4815      68617200 
 4816              	.LASF3:
 4817 09fc 73686F72 		.ascii	"short unsigned int\000"
 4817      7420756E 
 4817      7369676E 
 4817      65642069 
 4817      6E7400
 4818              	.LASF39:
 4819 0a0f 70747253 		.ascii	"ptrSetBitValue\000"
 4819      65744269 
 4819      7456616C 
 4819      756500
 4820              	.LASF83:
 4821 0a1e 43617053 		.ascii	"CapSense_MedianFilter\000"
 4821      656E7365 
 4821      5F4D6564 
 4821      69616E46 
 4821      696C7465 
 4822              	.LASF88:
 4823 0a34 74656D70 		.ascii	"tempRaw\000"
 4823      52617700 
 4824              	.LASF99:
 4825 0a3c 43617053 		.ascii	"CapSense_GetDebounce\000"
 4825      656E7365 
 4825      5F476574 
 4825      4465626F 
 4825      756E6365 
 4826              	.LASF76:
 4827 0a51 43617053 		.ascii	"CapSense_CheckIsWidgetActive\000"
 4827      656E7365 
 4827      5F436865 
 4827      636B4973 
ARM GAS  C:\Users\ZURUSH~1\AppData\Local\Temp\ccmil0rU.s 			page 144


 4827      57696467 
 4828              	.LASF9:
 4829 0a6e 75696E74 		.ascii	"uint8\000"
 4829      3800
 4830              	.LASF13:
 4831 0a74 646F7562 		.ascii	"double\000"
 4831      6C6500
 4832              	.LASF119:
 4833 0a7b 43617053 		.ascii	"CapSense_rawFilterData1\000"
 4833      656E7365 
 4833      5F726177 
 4833      46696C74 
 4833      65724461 
 4834              	.LASF109:
 4835 0a93 43617053 		.ascii	"CapSense_sensorOnMask\000"
 4835      656E7365 
 4835      5F73656E 
 4835      736F724F 
 4835      6E4D6173 
 4836              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
