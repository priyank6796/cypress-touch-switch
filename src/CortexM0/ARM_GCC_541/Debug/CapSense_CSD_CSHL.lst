ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_CSD_CSHL.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_CSD_BaseInit,"ax",%progbits
  20              		.align	2
  21              		.global	CapSense_CSD_BaseInit
  22              		.code	16
  23              		.thumb_func
  24              		.type	CapSense_CSD_BaseInit, %function
  25              	CapSense_CSD_BaseInit:
  26              	.LFB32:
  27              		.file 1 "Generated_Source\\PSoC4\\CapSense_CSD_CSHL.c"
   1:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * File Name: CapSense_CSD_CSHL.c
   3:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Version 2.60
   4:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
   5:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Description:
   6:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CSD component.
   8:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
   9:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Note:
  10:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
  11:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Copyright 2013-2016, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  18:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #include "CapSense_CSD_CSHL.h"
  19:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #include "CapSense_CSD_PVT.h"
  20:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  21:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /* SmartSense functions */
  22:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)
  23:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     extern void CapSense_CSD_UpdateThresholds(uint32 sensor);
  24:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) */
  25:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  26:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /* Storage of filters data */
  27:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER)) || \
  28:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER)) )
  29:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  30:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_rawFilterData1[CapSense_CSD_TOTAL_SENSOR_COUNT];
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 2


  31:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_rawFilterData2[CapSense_CSD_TOTAL_SENSOR_COUNT];
  32:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  33:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #elif ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER))   || \
  34:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER))   || \
  35:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER)) || \
  36:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER))   || \
  37:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER)) )
  38:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  39:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_rawFilterData1[CapSense_CSD_TOTAL_SENSOR_COUNT];
  40:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif  /* ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) || \
  41:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         *    (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER) )
  42:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         */
  43:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  44:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** extern uint16 CapSense_CSD_sensorRaw[CapSense_CSD_TOTAL_SENSOR_COUNT];
  45:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** extern uint8 CapSense_CSD_sensorEnableMask[CapSense_CSD_TOTAL_SENSOR_MASK];
  46:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** extern const uint8 CapSense_CSD_widgetNumber[CapSense_CSD_TOTAL_SENSOR_COUNT];
  47:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  48:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE)
  49:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     extern uint32 CapSense_CSD_widgetResolution[CapSense_CSD_RESOLUTIONS_TBL_SIZE];
  50:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) */
  51:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  52:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_sensorBaseline[CapSense_CSD_TOTAL_SENSOR_COUNT] = {0u};
  53:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_sensorBaselineLow[CapSense_CSD_TOTAL_SENSOR_COUNT] = {0u};
  54:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_sensorSignal[CapSense_CSD_TOTAL_SENSOR_COUNT] = {0u};
  55:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_sensorOnMask[CapSense_CSD_TOTAL_SENSOR_MASK] = {0u};
  56:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  57:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_lowBaselineResetCnt[CapSense_CSD_TOTAL_SENSOR_COUNT];
  58:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_lowBaselineReset[CapSense_CSD_TOTAL_SENSOR_COUNT] = {
  59:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     30u, 30u, 30u, 30u, 30u, 
  60:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
  61:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  62:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  63:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  64:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)
  65:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     extern CapSense_CSD_CONFIG_TYPE_P4_v2_60 CapSense_CSD_config;
  66:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif  /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) */
  67:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  68:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_RAW_FILTER_MASK != 0u)
  69:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_enableRawFilters = CapSense_CSD_RAW_FILTERS_ENABLED;
  70:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif  /* (CapSense_CSD_RAW_FILTER_MASK != 0u) */
  71:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  72:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /* Generated by Customizer */
  73:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_fingerThreshold[CapSense_CSD_THRESHOLD_TBL_SIZE];
  74:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  75:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_noiseThreshold[CapSense_CSD_THRESHOLD_TBL_SIZE];
  76:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  77:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_negativeNoiseThreshold[CapSense_CSD_THRESHOLD_TBL_SIZE];
  78:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  79:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_hysteresis[CapSense_CSD_WIDGET_PARAM_TBL_SIZE];
  80:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  81:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_debounce[] = {
  82:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     5u, 5u, 5u, 5u, 5u, 
  83:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
  84:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  85:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** static uint8 CapSense_CSD_debounceCounter[] = {
  86:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     0u, 0u, 0u, 0u, 0u, 0u, 
  87:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 3


  88:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  89:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** const uint8 CapSense_CSD_rawDataIndex[] = {
  90:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     0u, /* Button0__BTN */
  91:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, /* Button1__BTN */
  92:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     2u, /* Button2__BTN */
  93:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     3u, /* Button3__BTN */
  94:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     4u, /* Button4__BTN */
  95:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
  96:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  97:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** const uint8 CapSense_CSD_numberOfSensors[] = {
  98:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, /* Button0__BTN */
  99:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, /* Button1__BTN */
 100:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, /* Button2__BTN */
 101:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, /* Button3__BTN */
 102:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, /* Button4__BTN */
 103:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
 104:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 105:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 106:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 107:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 108:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 109:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_BaseInit
 110:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 111:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 112:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 113:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Loads the CapSense_CSD_sensorBaseline[sensor] array element with an
 114:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  initial value which is equal to the raw count value.
 115:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Resets to zero CapSense_CSD_sensorBaselineLow[sensor] and
 116:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[sensor] array element.
 117:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Loads the CapSense_CSD_rawFilterData2[sensor] and
 118:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData2[sensor] array element with an
 119:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  initial value which is equal to the raw count value if the raw data filter is enabled.
 120:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 121:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 122:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 123:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 124:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 125:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 126:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 127:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 128:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[]    - used to store the baseline value.
 129:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaselineLow[] - used to store the fraction byte of
 130:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  the baseline value.
 131:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[]      - used to store a difference between
 132:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  the current value of raw data and the previous value of the baseline.
 133:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData1[]    - used to store a previous sample of
 134:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  any enabled raw data filter.
 135:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData2[]    - used to store before a previous sample
 136:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  of the enabled raw data filter. Required only for median or average filters.
 137:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 138:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 139:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 140:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 141:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 142:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_BaseInit(uint32 sensor)
 143:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
  28              		.loc 1 143 0
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 4


  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 30B5     		push	{r4, r5, lr}
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
 144:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if ((CapSense_CSD_TOTAL_BUTTONS_COUNT) || (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT) || \
 145:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****          (CapSense_CSD_TOTAL_GENERICS_COUNT))
 146:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 widget = CapSense_CSD_widgetNumber[sensor];
  38              		.loc 1 146 0
  39 0002 094B     		ldr	r3, .L2
  40 0004 1B5C     		ldrb	r3, [r3, r0]
  41              	.LVL1:
 147:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif /* ((CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUN
 148:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 149:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT)
 150:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 debounceIndex;
 151:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT) */
 152:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 153:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 154:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 155:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(widget < CapSense_CSD_END_OF_WIDGETS_INDEX)
 156:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 157:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 158:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 159:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Initialize Baseline */
 160:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorBaseline[sensor] = CapSense_CSD_sensorRaw[sensor];
  42              		.loc 1 160 0
  43 0006 4200     		lsls	r2, r0, #1
  44 0008 0849     		ldr	r1, .L2+4
  45 000a 545A     		ldrh	r4, [r2, r1]
  46 000c 0849     		ldr	r1, .L2+8
  47 000e 5452     		strh	r4, [r2, r1]
 161:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorBaselineLow[sensor] = 0u;
  48              		.loc 1 161 0
  49 0010 0818     		adds	r0, r1, r0
  50              	.LVL2:
  51 0012 0025     		movs	r5, #0
  52 0014 0573     		strb	r5, [r0, #12]
 162:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorSignal[sensor] = 0u;
  53              		.loc 1 162 0
  54 0016 0575     		strb	r5, [r0, #20]
 163:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 164:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_debounceCounter[widget] =  CapSense_CSD_debounce[widget];
  55              		.loc 1 164 0
  56 0018 0648     		ldr	r0, .L2+12
  57 001a C05C     		ldrb	r0, [r0, r3]
  58 001c CB18     		adds	r3, r1, r3
  59              	.LVL3:
  60 001e 1877     		strb	r0, [r3, #28]
 165:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 166:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 167:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if ((0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER)) ||\
 168:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****          (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER)))
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 5


 169:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 170:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = CapSense_CSD_sensorRaw[sensor];
 171:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData2[sensor] = CapSense_CSD_sensorRaw[sensor];
 172:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 173:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #elif ((CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER) ||\
 174:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER) ||\
 175:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER) ||\
 176:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER) ||\
 177:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER))
 178:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 179:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = CapSense_CSD_sensorRaw[sensor];
  61              		.loc 1 179 0
  62 0020 054B     		ldr	r3, .L2+16
  63 0022 D452     		strh	r4, [r2, r3]
 180:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 181:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #else
 182:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* No Raw filters */
 183:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* ((CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) || \
 184:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             *   (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER))
 185:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             */
 186:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 187:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 188:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 189:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 190:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 191:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
  64              		.loc 1 191 0
  65              		@ sp needed
  66 0024 30BD     		pop	{r4, r5, pc}
  67              	.L3:
  68 0026 C046     		.align	2
  69              	.L2:
  70 0028 00000000 		.word	CapSense_CSD_widgetNumber
  71 002c 00000000 		.word	CapSense_CSD_sensorRaw
  72 0030 00000000 		.word	.LANCHOR0
  73 0034 00000000 		.word	.LANCHOR1
  74 0038 00000000 		.word	CapSense_CSD_rawFilterData1
  75              		.cfi_endproc
  76              	.LFE32:
  77              		.size	CapSense_CSD_BaseInit, .-CapSense_CSD_BaseInit
  78              		.section	.text.CapSense_CSD_InitializeSensorBaseline,"ax",%progbits
  79              		.align	2
  80              		.global	CapSense_CSD_InitializeSensorBaseline
  81              		.code	16
  82              		.thumb_func
  83              		.type	CapSense_CSD_InitializeSensorBaseline, %function
  84              	CapSense_CSD_InitializeSensorBaseline:
  85              	.LFB33:
 192:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 193:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 194:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 195:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_InitializeSensorBaseline
 196:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 197:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 198:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 199:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Loads the CapSense_CSD_sensorBaseline[sensor] array element with an
 200:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or a pair
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 6


 201:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the
 202:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if
 203:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  enabled.
 204:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 205:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 206:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 207:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 208:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 209:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 210:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 211:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 212:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 213:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 214:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 215:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 216:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 217:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 218:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_InitializeSensorBaseline(uint32 sensor)
 219:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
  86              		.loc 1 219 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90              	.LVL4:
  91 0000 10B5     		push	{r4, lr}
  92              		.cfi_def_cfa_offset 8
  93              		.cfi_offset 4, -8
  94              		.cfi_offset 14, -4
  95 0002 0400     		movs	r4, r0
 220:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Scan sensor */
 221:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_ScanSensor(sensor);
  96              		.loc 1 221 0
  97 0004 FFF7FEFF 		bl	CapSense_CSD_ScanSensor
  98              	.LVL5:
  99              	.L5:
 222:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     while(CapSense_CSD_IsBusy() != 0u)
 100              		.loc 1 222 0 discriminator 1
 101 0008 FFF7FEFF 		bl	CapSense_CSD_IsBusy
 102              	.LVL6:
 103 000c 0028     		cmp	r0, #0
 104 000e FBD1     		bne	.L5
 223:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 224:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Wait while sensor is busy */
 225:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 226:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 227:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Initialize Baseline, Signal and debounce counters */
 228:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_BaseInit(sensor);
 105              		.loc 1 228 0
 106 0010 2000     		movs	r0, r4
 107 0012 FFF7FEFF 		bl	CapSense_CSD_BaseInit
 108              	.LVL7:
 229:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 109              		.loc 1 229 0
 110              		@ sp needed
 111              	.LVL8:
 112 0016 10BD     		pop	{r4, pc}
 113              		.cfi_endproc
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 7


 114              	.LFE33:
 115              		.size	CapSense_CSD_InitializeSensorBaseline, .-CapSense_CSD_InitializeSensorBaseline
 116              		.section	.text.CapSense_CSD_InitializeAllBaselines,"ax",%progbits
 117              		.align	2
 118              		.global	CapSense_CSD_InitializeAllBaselines
 119              		.code	16
 120              		.thumb_func
 121              		.type	CapSense_CSD_InitializeAllBaselines, %function
 122              	CapSense_CSD_InitializeAllBaselines:
 123              	.LFB34:
 230:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 231:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 232:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 233:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_InitializeAllBaselines
 234:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 235:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 236:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 237:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Uses the CapSense_CSD_InitializeSensorBaseline function to load the
 238:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[] array with an initial values by scanning
 239:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  all the sensors. The raw count values are copied into the baseline array for
 240:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  all the sensors. The raw data filters are initialized if enabled.
 241:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 242:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 243:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 244:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 245:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 246:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 247:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 248:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 249:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 250:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 251:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 252:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 253:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 254:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 255:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_InitializeAllBaselines(void)
 256:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 124              		.loc 1 256 0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128 0000 10B5     		push	{r4, lr}
 129              		.cfi_def_cfa_offset 8
 130              		.cfi_offset 4, -8
 131              		.cfi_offset 14, -4
 132              	.LVL9:
 257:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 i;
 258:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 259:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SCANSLOT_COUNT; i++)
 133              		.loc 1 259 0
 134 0002 0024     		movs	r4, #0
 135 0004 03E0     		b	.L7
 136              	.LVL10:
 137              	.L8:
 260:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 261:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_InitializeSensorBaseline(i);
 138              		.loc 1 261 0 discriminator 3
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 8


 139 0006 2000     		movs	r0, r4
 140 0008 FFF7FEFF 		bl	CapSense_CSD_InitializeSensorBaseline
 141              	.LVL11:
 259:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 142              		.loc 1 259 0 discriminator 3
 143 000c 0134     		adds	r4, r4, #1
 144              	.LVL12:
 145              	.L7:
 259:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 146              		.loc 1 259 0 is_stmt 0 discriminator 1
 147 000e 042C     		cmp	r4, #4
 148 0010 F9D9     		bls	.L8
 262:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 263:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 149              		.loc 1 263 0 is_stmt 1
 150              		@ sp needed
 151              	.LVL13:
 152 0012 10BD     		pop	{r4, pc}
 153              		.cfi_endproc
 154              	.LFE34:
 155              		.size	CapSense_CSD_InitializeAllBaselines, .-CapSense_CSD_InitializeAllBaselines
 156              		.section	.text.CapSense_CSD_InitializeEnabledBaselines,"ax",%progbits
 157              		.align	2
 158              		.global	CapSense_CSD_InitializeEnabledBaselines
 159              		.code	16
 160              		.thumb_func
 161              		.type	CapSense_CSD_InitializeEnabledBaselines, %function
 162              	CapSense_CSD_InitializeEnabledBaselines:
 163              	.LFB35:
 264:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 265:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 266:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 267:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_InitializeEnabledBaselines
 268:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 269:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 270:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 271:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Scans all the enabled widgets and the raw count values are copied into the
 272:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  baseline array for all the sensors enabled in the scanning process. The baselines
 273:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  are initialized with zero values for sensors disabled from the scanning process.
 274:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  The raw data filters are initialized if enabled.
 275:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 276:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 277:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 278:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 279:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 280:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 281:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 282:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 283:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorRaw[] - used to store the sensors raw data.
 284:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[ ] - used to store bit masks of the enabled sensors.
 285:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 286:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 287:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 288:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 289:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 290:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_InitializeEnabledBaselines(void)
 291:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 9


 164              		.loc 1 291 0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 0, uses_anonymous_args = 0
 168 0000 10B5     		push	{r4, lr}
 169              		.cfi_def_cfa_offset 8
 170              		.cfi_offset 4, -8
 171              		.cfi_offset 14, -4
 292:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 i;
 293:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 isSensorEnabled;
 294:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 295:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_ScanEnabledWidgets();
 172              		.loc 1 295 0
 173 0002 FFF7FEFF 		bl	CapSense_CSD_ScanEnabledWidgets
 174              	.LVL14:
 175              	.L10:
 296:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     while(CapSense_CSD_IsBusy() != 0u)
 176              		.loc 1 296 0 discriminator 1
 177 0006 FFF7FEFF 		bl	CapSense_CSD_IsBusy
 178              	.LVL15:
 179 000a 0028     		cmp	r0, #0
 180 000c FBD1     		bne	.L10
 181 000e 0024     		movs	r4, #0
 182 0010 09E0     		b	.L11
 183              	.LVL16:
 184              	.L13:
 297:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 298:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Wait while sensor is busy */
 299:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 300:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 301:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SENSOR_COUNT; i++)
 302:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 303:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         isSensorEnabled = CapSense_CSD_GetBitValue(CapSense_CSD_sensorEnableMask, i);
 185              		.loc 1 303 0
 186 0012 2100     		movs	r1, r4
 187 0014 0548     		ldr	r0, .L14
 188 0016 FFF7FEFF 		bl	CapSense_CSD_GetBitValue
 189              	.LVL17:
 304:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 305:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 306:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(isSensorEnabled != 0u)
 190              		.loc 1 306 0
 191 001a 0028     		cmp	r0, #0
 192 001c 02D0     		beq	.L12
 307:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 308:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Initialize baselines */
 309:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_BaseInit(i);
 193              		.loc 1 309 0
 194 001e 2000     		movs	r0, r4
 195              	.LVL18:
 196 0020 FFF7FEFF 		bl	CapSense_CSD_BaseInit
 197              	.LVL19:
 198              	.L12:
 301:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 199              		.loc 1 301 0 discriminator 2
 200 0024 0134     		adds	r4, r4, #1
 201              	.LVL20:
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 10


 202              	.L11:
 301:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 203              		.loc 1 301 0 is_stmt 0 discriminator 1
 204 0026 042C     		cmp	r4, #4
 205 0028 F3D9     		bls	.L13
 310:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 311:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 312:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 206              		.loc 1 312 0 is_stmt 1
 207              		@ sp needed
 208              	.LVL21:
 209 002a 10BD     		pop	{r4, pc}
 210              	.L15:
 211              		.align	2
 212              	.L14:
 213 002c 00000000 		.word	CapSense_CSD_sensorEnableMask
 214              		.cfi_endproc
 215              	.LFE35:
 216              		.size	CapSense_CSD_InitializeEnabledBaselines, .-CapSense_CSD_InitializeEnabledBaselines
 217              		.section	.text.CapSense_CSD_GetBaselineData,"ax",%progbits
 218              		.align	2
 219              		.global	CapSense_CSD_GetBaselineData
 220              		.code	16
 221              		.thumb_func
 222              		.type	CapSense_CSD_GetBaselineData, %function
 223              	CapSense_CSD_GetBaselineData:
 224              	.LFB40:
 313:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 314:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 315:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 316:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_UpdateBaselineNoThreshold
 317:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 318:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 319:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 320:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Updates the CapSense_CSD_sensorBaseline[sensor] array element using the
 321:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 322:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 323:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  it in CapSense_CSD_sensorSignal[sensor].
 324:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 325:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating; baseline is loaded
 326:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  with a raw count value if a signal is greater than zero and if signal is less
 327:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  than noise threshold.
 328:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 329:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  calculation.
 330:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 331:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API does not update the thresholds in the Smartsense Mode.
 332:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 333:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 334:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 335:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 336:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 337:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 338:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 339:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 340:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_widgetNumber[]  - stores widget numbers.
 341:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[]    - used to store baseline value.
 342:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaselineLow[] - used to store fraction byte of
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 11


 343:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  baseline value.
 344:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[]      - used to store difference between
 345:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  current value of raw data and previous value of baseline.
 346:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData1[]    - used to store previous sample of
 347:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  any enabled raw data filter.
 348:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData2[]    - used to store before previous sample
 349:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 350:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 351:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 352:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 353:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 354:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 355:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_UpdateBaselineNoThreshold(uint32 sensor)
 356:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 357:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 calc;
 358:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 sign;
 359:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 tempRaw;
 360:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 filteredRawData;
 361:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 widget = CapSense_CSD_widgetNumber[sensor];
 362:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 noiseThreshold;
 363:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 364:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 365:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 366:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(widget < CapSense_CSD_END_OF_WIDGETS_INDEX)
 367:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 368:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 369:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 370:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     noiseThreshold = CapSense_CSD_noiseThreshold[widget];
 371:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     filteredRawData = CapSense_CSD_sensorRaw[sensor];
 372:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 373:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_RAW_FILTER_MASK != 0u)
 374:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     if(CapSense_CSD_enableRawFilters != 0u)
 375:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 376:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER)
 377:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             tempRaw = filteredRawData;
 378:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             filteredRawData = CapSense_CSD_MedianFilter(filteredRawData, CapSense_CSD_rawFilterData
 379:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                             CapSense_CSD_rawFilterData2[sensor]);
 380:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData2[sensor] = CapSense_CSD_rawFilterData1[sensor];
 381:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData1[sensor] = tempRaw;
 382:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 383:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER)
 384:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             tempRaw = filteredRawData;
 385:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             filteredRawData = CapSense_CSD_AveragingFilter(filteredRawData, CapSense_CSD_rawFilterD
 386:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                CapSense_CSD_rawFilterData2[sensor])
 387:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData2[sensor] = CapSense_CSD_rawFilterData1[sensor];
 388:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData1[sensor] = tempRaw;
 389:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 390:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER)
 391:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             filteredRawData = CapSense_CSD_IIR2Filter(filteredRawData, CapSense_CSD_rawFilterData1[
 392:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 393:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 394:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER)
 395:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             filteredRawData = CapSense_CSD_IIR4Filter(filteredRawData, CapSense_CSD_rawFilterData1[
 396:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 397:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 398:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER)
 399:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             filteredRawData = CapSense_CSD_JitterFilter(filteredRawData, CapSense_CSD_rawFilterData
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 12


 400:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 401:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 402:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER)
 403:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             filteredRawData = CapSense_CSD_IIR8Filter(filteredRawData, CapSense_CSD_rawFilterData1[
 404:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 405:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 406:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER)
 407:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             filteredRawData = CapSense_CSD_IIR16Filter(filteredRawData, CapSense_CSD_rawFilterData1
 408:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 409:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 410:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #else
 411:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* No Raw filters */
 412:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif  /* (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) */
 413:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 414:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* (CapSense_CSD_RAW_FILTER_MASK != 0u) */
 415:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 416:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)
 417:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         MeasureNoiseEnvelope_P4_v2_60(&CapSense_CSD_config, (uint8)sensor, CapSense_CSD_sensorRaw);
 418:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) */
 419:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 420:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Baseline calculation */
 421:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 422:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     if(filteredRawData >= CapSense_CSD_sensorBaseline[sensor])
 423:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 424:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_lowBaselineResetCnt[sensor] = 0u;
 425:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tempRaw = filteredRawData - CapSense_CSD_sensorBaseline[sensor];
 426:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 427:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 428:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     else
 429:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 430:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tempRaw = CapSense_CSD_sensorBaseline[sensor] - filteredRawData;
 431:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 432:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 433:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 434:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE)
 435:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_CSD_negativeNoiseThreshold[widget]))
 436:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #else
 437:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_CSD_NEGATIVE_NOISE_THRESHOLD))
 438:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif /* (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) */
 439:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 440:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_lowBaselineResetCnt[sensor] >= CapSense_CSD_lowBaselineReset[sensor])
 441:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 442:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_BaseInit(sensor);
 443:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_lowBaselineResetCnt[sensor] = 0u;
 444:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 445:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
 446:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 447:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_lowBaselineResetCnt[sensor]++;
 448:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 449:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 450:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     else
 451:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 452:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE)
 453:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE)
 454:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 455:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 456:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****              ((tempRaw < (uint16) CapSense_CSD_negativeNoiseThreshold[widget])
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 13


 457:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                && (sign == 0u)))
 458:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
 459:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #else
 460:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 461:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 462:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                  ((tempRaw < (uint16) CapSense_CSD_NEGATIVE_NOISE_THRESHOLD)
 463:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                    && (sign == 0u)))
 464:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
 465:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) */
 466:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE) */
 467:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Make full Baseline 23 bits */
 468:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 calc = (uint32) CapSense_CSD_sensorBaseline[sensor] << 8u;
 469:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 calc |= (uint32) CapSense_CSD_sensorBaselineLow[sensor];
 470:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 471:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Add Raw Data to Baseline */
 472:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 calc += filteredRawData;
 473:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 474:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Sub the high Baseline */
 475:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 calc -= CapSense_CSD_sensorBaseline[sensor];
 476:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 477:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Put Baseline and BaselineLow */
 478:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 479:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorBaselineLow[sensor] = ((uint8) calc);
 480:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 481:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_lowBaselineResetCnt[sensor] = 0u;
 482:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE)
 483:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
 484:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE) */
 485:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 486:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 487:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Calculate Signal if positive difference > noiseThreshold */
 488:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 489:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 490:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_SIGNAL_SIZE == CapSense_CSD_SIGNAL_SIZE_UINT8)
 491:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Over flow defence for uint8 */
 492:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if (tempRaw > 0xFFu)
 493:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
 494:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorSignal[sensor] = 0xFFu;
 495:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
 496:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             else
 497:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
 498:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorSignal[sensor] = ((uint8) tempRaw);
 499:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
 500:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #else
 501:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_sensorSignal[sensor] = ((uint16) tempRaw);
 502:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif  /* (CapSense_CSD_SIGNAL_SIZE == CapSense_CSD_SIGNAL_SIZE_UINT8) */
 503:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 504:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     else
 505:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 506:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Signal is zero */
 507:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_sensorSignal[sensor] = 0u;
 508:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 509:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 510:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 511:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 512:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 513:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 14


 514:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 515:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 516:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 517:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 518:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_UpdateSensorBaseline
 519:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 520:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 521:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 522:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Updates the CapSense_CSD_sensorBaseline[sensor] array element using the
 523:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 524:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 525:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  it in CapSense_CSD_sensorSignal[sensor].
 526:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 527:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating.
 528:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Baseline is loaded with raw count value if a signal is greater than zero and
 529:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  if signal is less than noise threshold.
 530:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 531:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  calculation.
 532:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API updates the thresholds in the Smartsense Mode.
 533:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 534:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 535:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 536:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 537:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 538:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 539:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 540:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 541:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_widgetNumber[]  - stores widget numbers.
 542:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 543:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 544:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 545:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 546:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 547:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****  void CapSense_CSD_UpdateSensorBaseline(uint32 sensor)
 548:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 549:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 550:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 widget;
 551:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 552:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         widget = CapSense_CSD_widgetNumber[sensor];
 553:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 554:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 555:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(widget < CapSense_CSD_END_OF_WIDGETS_INDEX)
 556:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 557:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 558:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 559:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)
 560:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_UpdateThresholds(sensor);
 561:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) */
 562:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 563:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_UpdateBaselineNoThreshold(sensor);
 564:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 565:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 566:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 567:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 568:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 569:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 570:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 15


 571:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 572:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 573:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_UpdateEnabledBaselines
 574:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 575:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 576:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 577:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Checks CapSense_CSD_sensorEnableMask[] array and calls the
 578:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_UpdateSensorBaseline function to update the baselines
 579:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  for the enabled sensors.
 580:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 581:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 582:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 583:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 584:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 585:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 586:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 587:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 588:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning
 589:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  state.
 590:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors
 591:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 592:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for
 593:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 594:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 595:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 596:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 597:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 598:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 599:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 600:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 601:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****  void CapSense_CSD_UpdateEnabledBaselines(void)
 602:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 603:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 i;
 604:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 isSensorEnabled;
 605:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 606:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SENSOR_COUNT; i++)
 607:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 608:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         isSensorEnabled = CapSense_CSD_GetBitValue(CapSense_CSD_sensorEnableMask, i);
 609:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 610:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(0u != isSensorEnabled)
 611:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 612:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_UpdateSensorBaseline(i);
 613:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 614:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 615:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 616:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 617:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 618:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_UpdateWidgetBaseline
 619:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 620:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 621:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 622:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Checks CapSense_CSD_sensorEnableMask[] array and calls the
 623:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_UpdateSensorBaseline function to update the baselines
 624:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  for the enabled sensors that belong to widget.
 625:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 626:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 627:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  Widget number.
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 16


 628:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 629:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 630:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 631:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 632:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 633:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning
 634:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  state.
 635:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors
 636:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 637:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for
 638:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 639:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 640:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 641:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 642:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 643:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 644:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 645:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 646:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_UpdateWidgetBaseline(uint32 widget)
 647:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 648:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 sensorsPerWidget;
 649:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 firstSensor;
 650:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 lastSensor;
 651:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 i;
 652:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 isSensorEnabled;
 653:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 654:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Get number of sensors in widget */
 655:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     sensorsPerWidget = CapSense_CSD_numberOfSensors[widget];
 656:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 657:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Get first sensor in widget */
 658:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     firstSensor = CapSense_CSD_rawDataIndex[widget];
 659:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 660:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Get last sensor in widget */
 661:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     lastSensor = (CapSense_CSD_rawDataIndex[widget] + sensorsPerWidget);
 662:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 663:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 664:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 665:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         isSensorEnabled = CapSense_CSD_GetBitValue(CapSense_CSD_sensorEnableMask, i);
 666:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 667:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(0u != isSensorEnabled)
 668:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 669:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_UpdateSensorBaseline(i);
 670:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 671:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 672:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 673:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 674:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 675:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 676:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetBaselineData
 677:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 678:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 679:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 680:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function reads the sensor baseline from the component.
 681:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 682:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 683:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 684:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 17


 685:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 686:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the baseline value of the sensor indicated by an argument.
 687:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 688:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 689:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[] - the array with an initial values by scanning
 690:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 691:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 692:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 693:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 694:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 695:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_GetBaselineData(uint32 sensor)
 696:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 225              		.loc 1 696 0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 0
 228              		@ frame_needed = 0, uses_anonymous_args = 0
 229              		@ link register save eliminated.
 230              	.LVL22:
 697:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return (CapSense_CSD_sensorBaseline[sensor]);
 231              		.loc 1 697 0
 232 0000 4000     		lsls	r0, r0, #1
 233              	.LVL23:
 234 0002 014B     		ldr	r3, .L17
 235 0004 185A     		ldrh	r0, [r3, r0]
 698:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 236              		.loc 1 698 0
 237              		@ sp needed
 238 0006 7047     		bx	lr
 239              	.L18:
 240              		.align	2
 241              	.L17:
 242 0008 00000000 		.word	.LANCHOR0
 243              		.cfi_endproc
 244              	.LFE40:
 245              		.size	CapSense_CSD_GetBaselineData, .-CapSense_CSD_GetBaselineData
 246              		.section	.text.CapSense_CSD_SetBaselineData,"ax",%progbits
 247              		.align	2
 248              		.global	CapSense_CSD_SetBaselineData
 249              		.code	16
 250              		.thumb_func
 251              		.type	CapSense_CSD_SetBaselineData, %function
 252              	CapSense_CSD_SetBaselineData:
 253              	.LFB41:
 699:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 700:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 701:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 702:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_SetBaselineData
 703:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 704:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 705:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 706:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API writes the data value passed as an argument to the sensor baseline array.
 707:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 708:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 709:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 710:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  data:    Sensor baseline.
 711:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 712:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 18


 713:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None.
 714:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 715:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 716:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[] - the array with initial values by scanning
 717:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 718:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 719:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 720:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 721:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 722:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_SetBaselineData(uint32 sensor, uint16 data)
 723:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 254              		.loc 1 723 0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              		@ link register save eliminated.
 259              	.LVL24:
 724:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorBaseline[sensor] = data;
 260              		.loc 1 724 0
 261 0000 4000     		lsls	r0, r0, #1
 262              	.LVL25:
 263 0002 014B     		ldr	r3, .L20
 264 0004 C152     		strh	r1, [r0, r3]
 725:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 265              		.loc 1 725 0
 266              		@ sp needed
 267 0006 7047     		bx	lr
 268              	.L21:
 269              		.align	2
 270              	.L20:
 271 0008 00000000 		.word	.LANCHOR0
 272              		.cfi_endproc
 273              	.LFE41:
 274              		.size	CapSense_CSD_SetBaselineData, .-CapSense_CSD_SetBaselineData
 275              		.section	.text.CapSense_CSD_GetDiffCountData,"ax",%progbits
 276              		.align	2
 277              		.global	CapSense_CSD_GetDiffCountData
 278              		.code	16
 279              		.thumb_func
 280              		.type	CapSense_CSD_GetDiffCountData, %function
 281              	CapSense_CSD_GetDiffCountData:
 282              	.LFB42:
 726:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 727:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 728:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 729:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetDiffCountData
 730:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 731:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 732:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 733:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function returns the Sensor Signal from the component.
 734:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 735:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 736:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 737:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 738:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 739:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the difference count value of the sensor indicated by the
 740:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  argument.
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 19


 741:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 742:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 743:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[] - the array with difference counts for sensors
 744:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 745:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 746:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 747:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 748:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 749:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_GetDiffCountData(uint32 sensor)
 750:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 283              		.loc 1 750 0
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 0
 286              		@ frame_needed = 0, uses_anonymous_args = 0
 287              		@ link register save eliminated.
 288              	.LVL26:
 751:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return (CapSense_CSD_sensorSignal[sensor]);
 289              		.loc 1 751 0
 290 0000 014B     		ldr	r3, .L23
 291 0002 1818     		adds	r0, r3, r0
 292              	.LVL27:
 293 0004 007D     		ldrb	r0, [r0, #20]
 752:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 294              		.loc 1 752 0
 295              		@ sp needed
 296 0006 7047     		bx	lr
 297              	.L24:
 298              		.align	2
 299              	.L23:
 300 0008 00000000 		.word	.LANCHOR0
 301              		.cfi_endproc
 302              	.LFE42:
 303              		.size	CapSense_CSD_GetDiffCountData, .-CapSense_CSD_GetDiffCountData
 304              		.section	.text.CapSense_CSD_SetDiffCountData,"ax",%progbits
 305              		.align	2
 306              		.global	CapSense_CSD_SetDiffCountData
 307              		.code	16
 308              		.thumb_func
 309              		.type	CapSense_CSD_SetDiffCountData, %function
 310              	CapSense_CSD_SetDiffCountData:
 311              	.LFB43:
 753:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 754:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 755:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 756:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_SetDiffCountData
 757:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 758:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 759:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 760:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API writes the data value passed as an argument to the sensor signal array.
 761:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 762:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 763:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 764:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  value:   Sensor signal.
 765:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 766:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 767:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None.
 768:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 20


 769:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 770:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[] - the array with difference counts for sensors
 771:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 772:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 773:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 774:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 775:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 776:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_SetDiffCountData(uint32 sensor, uint8 value)
 777:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 312              		.loc 1 777 0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 0, uses_anonymous_args = 0
 316              		@ link register save eliminated.
 317              	.LVL28:
 778:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorSignal[sensor] = value;
 318              		.loc 1 778 0
 319 0000 014B     		ldr	r3, .L26
 320 0002 1818     		adds	r0, r3, r0
 321              	.LVL29:
 322 0004 0175     		strb	r1, [r0, #20]
 779:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 323              		.loc 1 779 0
 324              		@ sp needed
 325 0006 7047     		bx	lr
 326              	.L27:
 327              		.align	2
 328              	.L26:
 329 0008 00000000 		.word	.LANCHOR0
 330              		.cfi_endproc
 331              	.LFE43:
 332              		.size	CapSense_CSD_SetDiffCountData, .-CapSense_CSD_SetDiffCountData
 333              		.section	.text.CapSense_CSD_GetFingerThreshold,"ax",%progbits
 334              		.align	2
 335              		.global	CapSense_CSD_GetFingerThreshold
 336              		.code	16
 337              		.thumb_func
 338              		.type	CapSense_CSD_GetFingerThreshold, %function
 339              	CapSense_CSD_GetFingerThreshold:
 340              	.LFB44:
 780:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 781:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 782:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 783:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetFingerThreshold
 784:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 785:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 786:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 787:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function reads the finger threshold from the component.
 788:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 789:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 790:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 791:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 792:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 793:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the finger threshold of the widget indicated by the argument.
 794:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 795:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 796:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_fingerThreshold[] - This array contains the level of signal
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 21


 797:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  for each widget that is determined if a finger is present on the widget.
 798:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 799:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 800:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 801:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 802:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 803:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_GetFingerThreshold(uint32 widget)
 804:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 341              		.loc 1 804 0
 342              		.cfi_startproc
 343              		@ args = 0, pretend = 0, frame = 0
 344              		@ frame_needed = 0, uses_anonymous_args = 0
 345              		@ link register save eliminated.
 346              	.LVL30:
 805:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return(CapSense_CSD_fingerThreshold[widget]);
 347              		.loc 1 805 0
 348 0000 014B     		ldr	r3, .L29
 349 0002 185C     		ldrb	r0, [r3, r0]
 350              	.LVL31:
 806:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 351              		.loc 1 806 0
 352              		@ sp needed
 353 0004 7047     		bx	lr
 354              	.L30:
 355 0006 C046     		.align	2
 356              	.L29:
 357 0008 00000000 		.word	CapSense_CSD_fingerThreshold
 358              		.cfi_endproc
 359              	.LFE44:
 360              		.size	CapSense_CSD_GetFingerThreshold, .-CapSense_CSD_GetFingerThreshold
 361              		.section	.text.CapSense_CSD_GetNoiseThreshold,"ax",%progbits
 362              		.align	2
 363              		.global	CapSense_CSD_GetNoiseThreshold
 364              		.code	16
 365              		.thumb_func
 366              		.type	CapSense_CSD_GetNoiseThreshold, %function
 367              	CapSense_CSD_GetNoiseThreshold:
 368              	.LFB45:
 807:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 808:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 809:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 810:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetNoiseThreshold
 811:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 812:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 813:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 814:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function reads the noise threshold from the component.
 815:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 816:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 817:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 818:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 819:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 820:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the noise threshold of the widget indicated by the argument.
 821:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 822:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 823:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_noiseThreshold[] - This array contains the level of signal
 824:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  for each widget that determines the level of noise in the capacitive scan.
 825:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 22


 826:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 827:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 828:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 829:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 830:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_GetNoiseThreshold(uint32 widget)
 831:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 369              		.loc 1 831 0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 0
 372              		@ frame_needed = 0, uses_anonymous_args = 0
 373              		@ link register save eliminated.
 374              	.LVL32:
 832:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return (CapSense_CSD_noiseThreshold[widget]);
 375              		.loc 1 832 0
 376 0000 014B     		ldr	r3, .L32
 377 0002 185C     		ldrb	r0, [r3, r0]
 378              	.LVL33:
 833:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 379              		.loc 1 833 0
 380              		@ sp needed
 381 0004 7047     		bx	lr
 382              	.L33:
 383 0006 C046     		.align	2
 384              	.L32:
 385 0008 00000000 		.word	CapSense_CSD_noiseThreshold
 386              		.cfi_endproc
 387              	.LFE45:
 388              		.size	CapSense_CSD_GetNoiseThreshold, .-CapSense_CSD_GetNoiseThreshold
 389              		.section	.text.CapSense_CSD_GetFingerHysteresis,"ax",%progbits
 390              		.align	2
 391              		.global	CapSense_CSD_GetFingerHysteresis
 392              		.code	16
 393              		.thumb_func
 394              		.type	CapSense_CSD_GetFingerHysteresis, %function
 395              	CapSense_CSD_GetFingerHysteresis:
 396              	.LFB46:
 834:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 835:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 836:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 837:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetFingerHysteresis
 838:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 839:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 840:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 841:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function reads the Hysteresis value from the component.
 842:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 843:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 844:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 845:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 846:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 847:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the Hysteresis of the widget indicated by the argument.
 848:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 849:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 850:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_hysteresis[] - This array contains the hysteresis value
 851:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *   for each widget.
 852:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_widgetNumberSld - structure with dynamic sliders' parameters.
 853:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 854:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 23


 855:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 856:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 857:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 858:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_GetFingerHysteresis(uint32 widget)
 859:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 397              		.loc 1 859 0
 398              		.cfi_startproc
 399              		@ args = 0, pretend = 0, frame = 0
 400              		@ frame_needed = 0, uses_anonymous_args = 0
 401              		@ link register save eliminated.
 402              	.LVL34:
 860:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return(CapSense_CSD_hysteresis[widget]);
 403              		.loc 1 860 0
 404 0000 014B     		ldr	r3, .L35
 405 0002 185C     		ldrb	r0, [r3, r0]
 406              	.LVL35:
 861:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 407              		.loc 1 861 0
 408              		@ sp needed
 409 0004 7047     		bx	lr
 410              	.L36:
 411 0006 C046     		.align	2
 412              	.L35:
 413 0008 00000000 		.word	CapSense_CSD_hysteresis
 414              		.cfi_endproc
 415              	.LFE46:
 416              		.size	CapSense_CSD_GetFingerHysteresis, .-CapSense_CSD_GetFingerHysteresis
 417              		.section	.text.CapSense_CSD_GetNegativeNoiseThreshold,"ax",%progbits
 418              		.align	2
 419              		.global	CapSense_CSD_GetNegativeNoiseThreshold
 420              		.code	16
 421              		.thumb_func
 422              		.type	CapSense_CSD_GetNegativeNoiseThreshold, %function
 423              	CapSense_CSD_GetNegativeNoiseThreshold:
 424              	.LFB47:
 862:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 863:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 864:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 865:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetNegativeNoiseThreshold
 866:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 867:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 868:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 869:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function reads the negative noise threshold from the component.
 870:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 871:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 872:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None.
 873:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 874:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return Value:
 875:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the negative noise threshold
 876:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 877:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 878:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_negativeNoiseThreshold - This variable specifies the negative
 879:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *   difference between the raw count and baseline levels for Baseline resetting
 880:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *   to the raw count level.
 881:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 882:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 883:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 24


 884:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 885:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 886:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_GetNegativeNoiseThreshold(uint32 widget)
 887:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 425              		.loc 1 887 0
 426              		.cfi_startproc
 427              		@ args = 0, pretend = 0, frame = 0
 428              		@ frame_needed = 0, uses_anonymous_args = 0
 429              		@ link register save eliminated.
 430              	.LVL36:
 888:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE)
 889:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return(CapSense_CSD_negativeNoiseThreshold[widget]);
 431              		.loc 1 889 0
 432 0000 014B     		ldr	r3, .L38
 433 0002 185C     		ldrb	r0, [r3, r0]
 434              	.LVL37:
 890:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #else
 891:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return(CapSense_CSD_NEGATIVE_NOISE_THRESHOLD);
 892:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) */
 893:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 435              		.loc 1 893 0
 436              		@ sp needed
 437 0004 7047     		bx	lr
 438              	.L39:
 439 0006 C046     		.align	2
 440              	.L38:
 441 0008 00000000 		.word	CapSense_CSD_negativeNoiseThreshold
 442              		.cfi_endproc
 443              	.LFE47:
 444              		.size	CapSense_CSD_GetNegativeNoiseThreshold, .-CapSense_CSD_GetNegativeNoiseThreshold
 445              		.section	.text.CapSense_CSD_SetFingerThreshold,"ax",%progbits
 446              		.align	2
 447              		.global	CapSense_CSD_SetFingerThreshold
 448              		.code	16
 449              		.thumb_func
 450              		.type	CapSense_CSD_SetFingerThreshold, %function
 451              	CapSense_CSD_SetFingerThreshold:
 452              	.LFB48:
 894:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 895:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 896:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if(CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE)
 897:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
 898:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_SetFingerThreshold
 899:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
 900:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 901:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
 902:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This API sets the finger threshold value for a widget.
 903:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 904:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
 905:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  sensorNumber:  widget index.
 906:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  value:  Finger threshold value for the widget.
 907:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 908:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return Value:
 909:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
 910:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 911:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
 912:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_fingerThreshold[] - This array contains the level of signal
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 25


 913:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *   for each widget that determines if a finger is present on the widget.
 914:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 915:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
 916:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
 917:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 918:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
 919:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_SetFingerThreshold(uint32 widget, uint8 value)
 920:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 453              		.loc 1 920 0
 454              		.cfi_startproc
 455              		@ args = 0, pretend = 0, frame = 0
 456              		@ frame_needed = 0, uses_anonymous_args = 0
 457              		@ link register save eliminated.
 458              	.LVL38:
 921:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_fingerThreshold[widget] = value;
 459              		.loc 1 921 0
 460 0000 014B     		ldr	r3, .L41
 461 0002 1954     		strb	r1, [r3, r0]
 922:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 462              		.loc 1 922 0
 463              		@ sp needed
 464 0004 7047     		bx	lr
 465              	.L42:
 466 0006 C046     		.align	2
 467              	.L41:
 468 0008 00000000 		.word	CapSense_CSD_fingerThreshold
 469              		.cfi_endproc
 470              	.LFE48:
 471              		.size	CapSense_CSD_SetFingerThreshold, .-CapSense_CSD_SetFingerThreshold
 472              		.section	.text.CapSense_CSD_SetNoiseThreshold,"ax",%progbits
 473              		.align	2
 474              		.global	CapSense_CSD_SetNoiseThreshold
 475              		.code	16
 476              		.thumb_func
 477              		.type	CapSense_CSD_SetNoiseThreshold, %function
 478              	CapSense_CSD_SetNoiseThreshold:
 479              	.LFB49:
 923:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 924:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 925:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
 926:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_SetNoiseThreshold
 927:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
 928:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 929:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
 930:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This API sets the Noise Threshold value for each widget.
 931:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 932:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
 933:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget:  Sensor index number.
 934:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  value:   Noise Threshold value for widget.
 935:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 936:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return Value:
 937:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
 938:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 939:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
 940:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_noiseThreshold[] - This array contains the level of signal
 941:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *   for each widget that determines the level of noise in the capacitive scan.
 942:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 26


 943:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
 944:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
 945:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 946:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
 947:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_SetNoiseThreshold(uint32 widget, uint8 value)
 948:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 480              		.loc 1 948 0
 481              		.cfi_startproc
 482              		@ args = 0, pretend = 0, frame = 0
 483              		@ frame_needed = 0, uses_anonymous_args = 0
 484              		@ link register save eliminated.
 485              	.LVL39:
 949:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_noiseThreshold[widget] = value;
 486              		.loc 1 949 0
 487 0000 014B     		ldr	r3, .L44
 488 0002 1954     		strb	r1, [r3, r0]
 950:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 489              		.loc 1 950 0
 490              		@ sp needed
 491 0004 7047     		bx	lr
 492              	.L45:
 493 0006 C046     		.align	2
 494              	.L44:
 495 0008 00000000 		.word	CapSense_CSD_noiseThreshold
 496              		.cfi_endproc
 497              	.LFE49:
 498              		.size	CapSense_CSD_SetNoiseThreshold, .-CapSense_CSD_SetNoiseThreshold
 499              		.section	.text.CapSense_CSD_SetFingerHysteresis,"ax",%progbits
 500              		.align	2
 501              		.global	CapSense_CSD_SetFingerHysteresis
 502              		.code	16
 503              		.thumb_func
 504              		.type	CapSense_CSD_SetFingerHysteresis, %function
 505              	CapSense_CSD_SetFingerHysteresis:
 506              	.LFB50:
 951:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 952:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 953:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
 954:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_SetFingerHysteresis
 955:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
 956:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 957:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
 958:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This API sets the Hysteresis value of a widget
 959:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 960:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
 961:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  value:  Hysteresis value for widgets.
 962:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget:  widget number
 963:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 964:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return Value:
 965:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
 966:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 967:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
 968:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_hysteresis[] - This array contains the hysteresis value for each widget.
 969:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_widgetNumberSld - structure with dynamic sliders' parameters.
 970:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 971:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
 972:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 27


 973:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 974:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
 975:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_SetFingerHysteresis(uint32 widget, uint8 value)
 976:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 507              		.loc 1 976 0
 508              		.cfi_startproc
 509              		@ args = 0, pretend = 0, frame = 0
 510              		@ frame_needed = 0, uses_anonymous_args = 0
 511              		@ link register save eliminated.
 512              	.LVL40:
 977:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_hysteresis[widget] = value;
 513              		.loc 1 977 0
 514 0000 014B     		ldr	r3, .L47
 515 0002 1954     		strb	r1, [r3, r0]
 978:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 516              		.loc 1 978 0
 517              		@ sp needed
 518 0004 7047     		bx	lr
 519              	.L48:
 520 0006 C046     		.align	2
 521              	.L47:
 522 0008 00000000 		.word	CapSense_CSD_hysteresis
 523              		.cfi_endproc
 524              	.LFE50:
 525              		.size	CapSense_CSD_SetFingerHysteresis, .-CapSense_CSD_SetFingerHysteresis
 526              		.section	.text.CapSense_CSD_SetNegativeNoiseThreshold,"ax",%progbits
 527              		.align	2
 528              		.global	CapSense_CSD_SetNegativeNoiseThreshold
 529              		.code	16
 530              		.thumb_func
 531              		.type	CapSense_CSD_SetNegativeNoiseThreshold, %function
 532              	CapSense_CSD_SetNegativeNoiseThreshold:
 533              	.LFB51:
 979:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 980:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 981:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
 982:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_SetNegativeNoiseThreshold
 983:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
 984:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 985:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
 986:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This API sets the Negative Noise Threshold value of a widget
 987:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 988:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
 989:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  value:  Negative Noise Threshold value for widgets.
 990:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget: widget number
 991:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 992:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return Value:
 993:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
 994:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 995:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
 996:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_negativeNoiseThreshold  - This parameter specifies the negative
 997:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *   difference between the raw count and baseline levels for Baseline resetting to
 998:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *   the raw count level.
 999:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1000:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
1001:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1002:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 28


1003:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1004:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_SetNegativeNoiseThreshold(uint32 widget, uint8 value)
1005:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 534              		.loc 1 1005 0
 535              		.cfi_startproc
 536              		@ args = 0, pretend = 0, frame = 0
 537              		@ frame_needed = 0, uses_anonymous_args = 0
 538              		@ link register save eliminated.
 539              	.LVL41:
1006:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_negativeNoiseThreshold[widget] = value;
 540              		.loc 1 1006 0
 541 0000 014B     		ldr	r3, .L50
 542 0002 1954     		strb	r1, [r3, r0]
1007:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 543              		.loc 1 1007 0
 544              		@ sp needed
 545 0004 7047     		bx	lr
 546              	.L51:
 547 0006 C046     		.align	2
 548              	.L50:
 549 0008 00000000 		.word	CapSense_CSD_negativeNoiseThreshold
 550              		.cfi_endproc
 551              	.LFE51:
 552              		.size	CapSense_CSD_SetNegativeNoiseThreshold, .-CapSense_CSD_SetNegativeNoiseThreshold
 553              		.section	.text.CapSense_CSD_SetDebounce,"ax",%progbits
 554              		.align	2
 555              		.global	CapSense_CSD_SetDebounce
 556              		.code	16
 557              		.thumb_func
 558              		.type	CapSense_CSD_SetDebounce, %function
 559              	CapSense_CSD_SetDebounce:
 560              	.LFB52:
1008:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1009:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1010:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1011:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_SetDebounce
1012:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
1013:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1014:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
1015:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This API sets the debounce value for a widget.
1016:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1017:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
1018:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  value:  Debounce value for widget.
1019:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget: widget index.
1020:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1021:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return Value:
1022:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1023:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1024:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
1025:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_debounce[] - This array contains the debounce value for each widget.
1026:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_widgetNumberSld - structure with dynamic sliders' parameters.
1027:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1028:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
1029:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1030:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1031:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1032:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_SetDebounce(uint32 widget, uint8 value)
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 29


1033:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 561              		.loc 1 1033 0
 562              		.cfi_startproc
 563              		@ args = 0, pretend = 0, frame = 0
 564              		@ frame_needed = 0, uses_anonymous_args = 0
 565              		@ link register save eliminated.
 566              	.LVL42:
1034:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_debounce[widget] = value;
 567              		.loc 1 1034 0
 568 0000 014B     		ldr	r3, .L53
 569 0002 1954     		strb	r1, [r3, r0]
1035:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 570              		.loc 1 1035 0
 571              		@ sp needed
 572 0004 7047     		bx	lr
 573              	.L54:
 574 0006 C046     		.align	2
 575              	.L53:
 576 0008 00000000 		.word	.LANCHOR1
 577              		.cfi_endproc
 578              	.LFE52:
 579              		.size	CapSense_CSD_SetDebounce, .-CapSense_CSD_SetDebounce
 580              		.section	.text.CapSense_CSD_SetLowBaselineReset,"ax",%progbits
 581              		.align	2
 582              		.global	CapSense_CSD_SetLowBaselineReset
 583              		.code	16
 584              		.thumb_func
 585              		.type	CapSense_CSD_SetLowBaselineReset, %function
 586              	CapSense_CSD_SetLowBaselineReset:
 587              	.LFB53:
1036:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1037:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1038:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1039:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_SetLowBaselineReset
1040:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
1041:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1042:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
1043:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This API sets the low baseline reset threshold value for the sensor.
1044:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1045:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
1046:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  value: low baseline reset threshold value.
1047:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  sensor: Sensor index.
1048:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1049:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return Value:
1050:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1051:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1052:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
1053:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_lowBaselineReset[] - This array contains the Baseline update
1054:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  threshold value for each sensor.
1055:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1056:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
1057:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1058:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1059:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1060:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_SetLowBaselineReset(uint32 sensor, uint8 value)
1061:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 588              		.loc 1 1061 0
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 30


 589              		.cfi_startproc
 590              		@ args = 0, pretend = 0, frame = 0
 591              		@ frame_needed = 0, uses_anonymous_args = 0
 592              		@ link register save eliminated.
 593              	.LVL43:
1062:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_lowBaselineReset[sensor] = value;
 594              		.loc 1 1062 0
 595 0000 014B     		ldr	r3, .L56
 596 0002 1818     		adds	r0, r3, r0
 597              	.LVL44:
 598 0004 0172     		strb	r1, [r0, #8]
1063:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 599              		.loc 1 1063 0
 600              		@ sp needed
 601 0006 7047     		bx	lr
 602              	.L57:
 603              		.align	2
 604              	.L56:
 605 0008 00000000 		.word	.LANCHOR1
 606              		.cfi_endproc
 607              	.LFE53:
 608              		.size	CapSense_CSD_SetLowBaselineReset, .-CapSense_CSD_SetLowBaselineReset
 609              		.section	.text.CapSense_CSD_CheckIsSensorActive,"ax",%progbits
 610              		.align	2
 611              		.global	CapSense_CSD_CheckIsSensorActive
 612              		.code	16
 613              		.thumb_func
 614              		.type	CapSense_CSD_CheckIsSensorActive, %function
 615              	CapSense_CSD_CheckIsSensorActive:
 616              	.LFB54:
1064:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) */
1065:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1066:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1067:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
1068:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_CheckIsSensorActive
1069:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
1070:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1071:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
1072:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Compares the CapSense_CSD_sensorSignal[sensor] array element to the finger
1073:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  threshold of the widget it belongs to. The hysteresis and debounce are taken into
1074:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold
1075:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  based on whether the sensor is currently active.
1076:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
1077:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
1078:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  The debounce counter is added to the sensor active transition.
1079:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function updates the CapSense_CSD_sensorOnMask[] array element.
1080:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1081:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
1082:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
1083:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1084:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
1085:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
1086:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1087:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
1088:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[] - used to store the difference between
1089:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  the current value of raw data and a previous value of the baseline.
1090:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_debounceCounter[]   - used to store the current debounce
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 31


1091:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  counter of the sensor. the widget which have this parameter are buttons, matrix
1092:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  buttons, proximity, and guard. All other widgets don't have the  debounce parameter
1093:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
1094:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorOnMask[] - used to store the sensors on/off state.
1095:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorOnMask[0] contains the masked bits for sensors
1096:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1097:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for
1098:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1099:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 - sensor is inactive.
1100:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  1 - sensor is active.
1101:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1102:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
1103:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1104:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1105:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
1106:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint32 CapSense_CSD_CheckIsSensorActive(uint32 sensor)
1107:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 617              		.loc 1 1107 0
 618              		.cfi_startproc
 619              		@ args = 0, pretend = 0, frame = 0
 620              		@ frame_needed = 0, uses_anonymous_args = 0
 621              	.LVL45:
 622 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 623              		.cfi_def_cfa_offset 20
 624              		.cfi_offset 4, -20
 625              		.cfi_offset 5, -16
 626              		.cfi_offset 6, -12
 627              		.cfi_offset 7, -8
 628              		.cfi_offset 14, -4
 629 0002 4746     		mov	r7, r8
 630 0004 80B4     		push	{r7}
 631              		.cfi_def_cfa_offset 24
 632              		.cfi_offset 8, -24
 633 0006 0400     		movs	r4, r0
1108:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 widget;
1109:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 debounce;
1110:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 debounceIndex;
1111:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1112:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 fingerThreshold;
1113:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 hysteresis;
1114:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
1115:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1116:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Prepare to find debounce counter index */
1117:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     widget = CapSense_CSD_widgetNumber[sensor];
 634              		.loc 1 1117 0
 635 0008 224B     		ldr	r3, .L63
 636 000a 1D5C     		ldrb	r5, [r3, r0]
1118:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1119:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     fingerThreshold = CapSense_CSD_fingerThreshold[widget];
 637              		.loc 1 1119 0
 638 000c 224B     		ldr	r3, .L63+4
 639 000e 5F5D     		ldrb	r7, [r3, r5]
 640              	.LVL46:
1120:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     hysteresis = CapSense_CSD_hysteresis[widget];
 641              		.loc 1 1120 0
 642 0010 224B     		ldr	r3, .L63+8
 643 0012 5E5D     		ldrb	r6, [r3, r5]
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 32


 644              	.LVL47:
1121:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     debounce = CapSense_CSD_debounce[widget];
 645              		.loc 1 1121 0
 646 0014 224B     		ldr	r3, .L63+12
 647 0016 5B5D     		ldrb	r3, [r3, r5]
 648 0018 9846     		mov	r8, r3
 649              	.LVL48:
1122:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1123:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         debounceIndex = widget;
1124:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1125:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1126:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Was on */
1127:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     if (0u != CapSense_CSD_GetBitValue(CapSense_CSD_sensorOnMask, sensor))
 650              		.loc 1 1127 0
 651 001a 0100     		movs	r1, r0
 652 001c 2148     		ldr	r0, .L63+16
 653              	.LVL49:
 654 001e 2430     		adds	r0, r0, #36
 655 0020 FFF7FEFF 		bl	CapSense_CSD_GetBitValue
 656              	.LVL50:
 657 0024 0028     		cmp	r0, #0
 658 0026 10D0     		beq	.L59
1128:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1129:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Hysteresis minus */
1130:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 659              		.loc 1 1130 0
 660 0028 1E4B     		ldr	r3, .L63+16
 661 002a 1B19     		adds	r3, r3, r4
 662 002c 1B7D     		ldrb	r3, [r3, #20]
 663 002e BE1B     		subs	r6, r7, r6
 664              	.LVL51:
 665 0030 B342     		cmp	r3, r6
 666 0032 23DA     		bge	.L60
1131:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1132:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_SetBitValue(CapSense_CSD_sensorOnMask, sensor, 0u);
 667              		.loc 1 1132 0
 668 0034 1B4E     		ldr	r6, .L63+16
 669 0036 3000     		movs	r0, r6
 670 0038 2430     		adds	r0, r0, #36
 671 003a 0022     		movs	r2, #0
 672 003c 2100     		movs	r1, r4
 673 003e FFF7FEFF 		bl	CapSense_CSD_SetBitValue
 674              	.LVL52:
1133:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1134:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_debounceCounter[debounceIndex] = debounce;
 675              		.loc 1 1134 0
 676 0042 7519     		adds	r5, r6, r5
 677 0044 4346     		mov	r3, r8
 678 0046 2B77     		strb	r3, [r5, #28]
 679 0048 18E0     		b	.L60
 680              	.LVL53:
 681              	.L59:
1135:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1136:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1137:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     else    /* Was off */
1138:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1139:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Hysteresis plus */
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 33


1140:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_sensorSignal[sensor] >= (fingerThreshold + hysteresis))
 682              		.loc 1 1140 0
 683 004a 164B     		ldr	r3, .L63+16
 684 004c 1B19     		adds	r3, r3, r4
 685 004e 1B7D     		ldrb	r3, [r3, #20]
 686 0050 BE19     		adds	r6, r7, r6
 687              	.LVL54:
 688 0052 B342     		cmp	r3, r6
 689 0054 0EDB     		blt	.L61
1141:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1142:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_debounceCounter[debounceIndex]--;
 690              		.loc 1 1142 0
 691 0056 134B     		ldr	r3, .L63+16
 692 0058 5D19     		adds	r5, r3, r5
 693 005a 2B7F     		ldrb	r3, [r5, #28]
 694 005c 013B     		subs	r3, r3, #1
 695 005e DBB2     		uxtb	r3, r3
 696 0060 2B77     		strb	r3, [r5, #28]
1143:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Sensor active, decrement debounce counter */
1144:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if(CapSense_CSD_debounceCounter[debounceIndex] == 0u)
 697              		.loc 1 1144 0
 698 0062 002B     		cmp	r3, #0
 699 0064 0AD1     		bne	.L60
1145:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1146:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_SetBitValue(CapSense_CSD_sensorOnMask, sensor, 1u);
 700              		.loc 1 1146 0
 701 0066 0122     		movs	r2, #1
 702 0068 2100     		movs	r1, r4
 703 006a 0E48     		ldr	r0, .L63+16
 704 006c 2430     		adds	r0, r0, #36
 705 006e FFF7FEFF 		bl	CapSense_CSD_SetBitValue
 706              	.LVL55:
 707 0072 03E0     		b	.L60
 708              	.L61:
1147:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1148:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1149:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
1150:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1151:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1152:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_debounceCounter[debounceIndex] = debounce;
 709              		.loc 1 1152 0
 710 0074 0B4B     		ldr	r3, .L63+16
 711 0076 5D19     		adds	r5, r3, r5
 712 0078 4346     		mov	r3, r8
 713 007a 2B77     		strb	r3, [r5, #28]
 714              	.L60:
1153:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1154:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1155:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1156:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return ((uint32)((0u != CapSense_CSD_GetBitValue(CapSense_CSD_sensorOnMask, sensor)) ? 1u : 0u)
 715              		.loc 1 1156 0
 716 007c 2100     		movs	r1, r4
 717 007e 0948     		ldr	r0, .L63+16
 718 0080 2430     		adds	r0, r0, #36
 719 0082 FFF7FEFF 		bl	CapSense_CSD_GetBitValue
 720              	.LVL56:
 721 0086 0028     		cmp	r0, #0
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 34


 722 0088 00D0     		beq	.L62
 723 008a 0120     		movs	r0, #1
 724              	.L62:
1157:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 725              		.loc 1 1157 0 discriminator 4
 726              		@ sp needed
 727              	.LVL57:
 728              	.LVL58:
 729              	.LVL59:
 730 008c 04BC     		pop	{r2}
 731 008e 9046     		mov	r8, r2
 732 0090 F0BD     		pop	{r4, r5, r6, r7, pc}
 733              	.L64:
 734 0092 C046     		.align	2
 735              	.L63:
 736 0094 00000000 		.word	CapSense_CSD_widgetNumber
 737 0098 00000000 		.word	CapSense_CSD_fingerThreshold
 738 009c 00000000 		.word	CapSense_CSD_hysteresis
 739 00a0 00000000 		.word	.LANCHOR1
 740 00a4 00000000 		.word	.LANCHOR0
 741              		.cfi_endproc
 742              	.LFE54:
 743              		.size	CapSense_CSD_CheckIsSensorActive, .-CapSense_CSD_CheckIsSensorActive
 744              		.section	.text.CapSense_CSD_CheckIsWidgetActive,"ax",%progbits
 745              		.align	2
 746              		.global	CapSense_CSD_CheckIsWidgetActive
 747              		.code	16
 748              		.thumb_func
 749              		.type	CapSense_CSD_CheckIsWidgetActive, %function
 750              	CapSense_CSD_CheckIsWidgetActive:
 751              	.LFB55:
1158:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1159:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1160:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
1161:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_CheckIsWidgetActive
1162:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
1163:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1164:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
1165:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Compares the CapSense_sensorSignal[] array element to the finger threshold of
1166:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * the widget it belongs to. The hysteresis and debounce are taken into account.
1167:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * The hysteresis is added or subtracted from the finger threshold based on whether
1168:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  the sensor is currently active. If the sensor is active, the threshold is
1169:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  lowered by the hysteresis amount. If the sensor is inactive, the threshold
1170:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  is raised by the hysteresis amount.
1171:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * The debounce counter added to the sensor active transition.
1172:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * This function updates CapSense_sensorOnMask[] array element
1173:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1174:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
1175:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
1176:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1177:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
1178:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are
1179:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
1180:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1181:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
1182:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  rawDataIndex[]: Contains the  1st sensor position in the widget
1183:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 35


1184:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
1185:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1186:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1187:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
1188:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint32 CapSense_CSD_CheckIsWidgetActive(uint32 widget)
1189:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 752              		.loc 1 1189 0
 753              		.cfi_startproc
 754              		@ args = 0, pretend = 0, frame = 0
 755              		@ frame_needed = 0, uses_anonymous_args = 0
 756              	.LVL60:
 757 0000 70B5     		push	{r4, r5, r6, lr}
 758              		.cfi_def_cfa_offset 16
 759              		.cfi_offset 4, -16
 760              		.cfi_offset 5, -12
 761              		.cfi_offset 6, -8
 762              		.cfi_offset 14, -4
1190:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 rawIndex = (uint32)CapSense_CSD_rawDataIndex[widget];
 763              		.loc 1 1190 0
 764 0002 084B     		ldr	r3, .L69
 765 0004 1C5C     		ldrb	r4, [r3, r0]
 766              	.LVL61:
1191:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 numOfSensors = (uint32)CapSense_CSD_numberOfSensors[widget] + rawIndex;
 767              		.loc 1 1191 0
 768 0006 1818     		adds	r0, r3, r0
 769              	.LVL62:
 770 0008 057A     		ldrb	r5, [r0, #8]
 771 000a 6519     		adds	r5, r4, r5
 772              	.LVL63:
1192:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 state = 0u;
 773              		.loc 1 1192 0
 774 000c 0026     		movs	r6, #0
 775              	.LVL64:
 776              	.L67:
1193:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1194:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Check all sensors of widget */
1195:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     do
1196:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1197:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_CheckIsSensorActive((uint32)rawIndex) != 0u)
 777              		.loc 1 1197 0
 778 000e 2000     		movs	r0, r4
 779 0010 FFF7FEFF 		bl	CapSense_CSD_CheckIsSensorActive
 780              	.LVL65:
 781 0014 0028     		cmp	r0, #0
 782 0016 00D0     		beq	.L66
1198:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1199:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             state = CapSense_CSD_SENSOR_IS_ACTIVE;
 783              		.loc 1 1199 0
 784 0018 0126     		movs	r6, #1
 785              	.LVL66:
 786              	.L66:
1200:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1201:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         rawIndex++;
 787              		.loc 1 1201 0
 788 001a 0134     		adds	r4, r4, #1
 789              	.LVL67:
1202:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 36


1203:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     while(rawIndex < numOfSensors);
 790              		.loc 1 1203 0
 791 001c A542     		cmp	r5, r4
 792 001e F6D8     		bhi	.L67
1204:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1205:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1206:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1207:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return state;
1208:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 793              		.loc 1 1208 0
 794 0020 3000     		movs	r0, r6
 795              		@ sp needed
 796              	.LVL68:
 797              	.LVL69:
 798              	.LVL70:
 799 0022 70BD     		pop	{r4, r5, r6, pc}
 800              	.L70:
 801              		.align	2
 802              	.L69:
 803 0024 00000000 		.word	.LANCHOR2
 804              		.cfi_endproc
 805              	.LFE55:
 806              		.size	CapSense_CSD_CheckIsWidgetActive, .-CapSense_CSD_CheckIsWidgetActive
 807              		.section	.text.CapSense_CSD_CheckIsAnyWidgetActive,"ax",%progbits
 808              		.align	2
 809              		.global	CapSense_CSD_CheckIsAnyWidgetActive
 810              		.code	16
 811              		.thumb_func
 812              		.type	CapSense_CSD_CheckIsAnyWidgetActive, %function
 813              	CapSense_CSD_CheckIsAnyWidgetActive:
 814              	.LFB56:
1209:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1210:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1211:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
1212:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_CheckIsAnyWidgetActive
1213:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
1214:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1215:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
1216:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Compares all the sensors of the CapSense_CSD_Signal[] array to their finger
1217:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  threshold. Calls CapSense_CSD_CheckIsWidgetActive() for each widget so
1218:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  the CapSense_CSD_sensorOnMask[] array is up to date after calling this
1219:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  function.
1220:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1221:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
1222:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
1223:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1224:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
1225:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
1226:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1227:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
1228:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1229:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1230:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
1231:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1232:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1233:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
1234:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint32 CapSense_CSD_CheckIsAnyWidgetActive(void)
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 37


1235:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 815              		.loc 1 1235 0
 816              		.cfi_startproc
 817              		@ args = 0, pretend = 0, frame = 0
 818              		@ frame_needed = 0, uses_anonymous_args = 0
 819 0000 70B5     		push	{r4, r5, r6, lr}
 820              		.cfi_def_cfa_offset 16
 821              		.cfi_offset 4, -16
 822              		.cfi_offset 5, -12
 823              		.cfi_offset 6, -8
 824              		.cfi_offset 14, -4
 825              	.LVL71:
1236:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1237:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 i;
1238:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 state = 0u;
 826              		.loc 1 1238 0
 827 0002 0025     		movs	r5, #0
1239:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
1240:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_WIDGET_COUNT; i++)
 828              		.loc 1 1240 0
 829 0004 0024     		movs	r4, #0
 830 0006 06E0     		b	.L72
 831              	.LVL72:
 832              	.L74:
1241:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1242:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_CheckIsWidgetActive(i) != 0u)
 833              		.loc 1 1242 0
 834 0008 2000     		movs	r0, r4
 835 000a FFF7FEFF 		bl	CapSense_CSD_CheckIsWidgetActive
 836              	.LVL73:
 837 000e 0028     		cmp	r0, #0
 838 0010 00D0     		beq	.L73
1243:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1244:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             state = CapSense_CSD_WIDGET_IS_ACTIVE;
 839              		.loc 1 1244 0
 840 0012 0125     		movs	r5, #1
 841              	.LVL74:
 842              	.L73:
1240:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 843              		.loc 1 1240 0 discriminator 2
 844 0014 0134     		adds	r4, r4, #1
 845              	.LVL75:
 846              	.L72:
1240:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 847              		.loc 1 1240 0 is_stmt 0 discriminator 1
 848 0016 042C     		cmp	r4, #4
 849 0018 F6D9     		bls	.L74
1245:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1246:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1247:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
1248:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1249:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1250:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return state;
1251:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 850              		.loc 1 1251 0 is_stmt 1
 851 001a 2800     		movs	r0, r5
 852              		@ sp needed
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 38


 853              	.LVL76:
 854              	.LVL77:
 855 001c 70BD     		pop	{r4, r5, r6, pc}
 856              		.cfi_endproc
 857              	.LFE56:
 858              		.size	CapSense_CSD_CheckIsAnyWidgetActive, .-CapSense_CSD_CheckIsAnyWidgetActive
 859 001e C046     		.section	.text.CapSense_CSD_EnableWidget,"ax",%progbits
 860              		.align	2
 861              		.global	CapSense_CSD_EnableWidget
 862              		.code	16
 863              		.thumb_func
 864              		.type	CapSense_CSD_EnableWidget, %function
 865              	CapSense_CSD_EnableWidget:
 866              	.LFB57:
1252:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1253:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1254:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
1255:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_EnableWidget
1256:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
1257:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1258:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
1259:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Enables all the widget elements (sensors) to the scanning process.
1260:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1261:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
1262:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
1263:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1264:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
1265:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1266:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1267:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
1268:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning
1269:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  state.
1270:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors
1271:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1272:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for
1273:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1274:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
1275:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
1276:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1277:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
1278:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1279:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1280:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
1281:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_EnableWidget(uint32 widget)
1282:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 867              		.loc 1 1282 0
 868              		.cfi_startproc
 869              		@ args = 0, pretend = 0, frame = 0
 870              		@ frame_needed = 0, uses_anonymous_args = 0
 871              	.LVL78:
 872 0000 70B5     		push	{r4, r5, r6, lr}
 873              		.cfi_def_cfa_offset 16
 874              		.cfi_offset 4, -16
 875              		.cfi_offset 5, -12
 876              		.cfi_offset 6, -8
 877              		.cfi_offset 14, -4
1283:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 39


1284:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 rawIndex = CapSense_CSD_rawDataIndex[widget];
 878              		.loc 1 1284 0
 879 0002 084B     		ldr	r3, .L78
 880 0004 1C5C     		ldrb	r4, [r3, r0]
 881              	.LVL79:
1285:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 numOfSensors = CapSense_CSD_numberOfSensors[widget] + rawIndex;
 882              		.loc 1 1285 0
 883 0006 1818     		adds	r0, r3, r0
 884              	.LVL80:
 885 0008 057A     		ldrb	r5, [r0, #8]
 886 000a 6519     		adds	r5, r4, r5
 887 000c EDB2     		uxtb	r5, r5
 888              	.LVL81:
 889              	.L77:
1286:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1287:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Enable all sensors of widget */
1288:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     do
1289:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1290:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_SetBitValue(CapSense_CSD_sensorEnableMask, (uint32)rawIndex, 1u);
 890              		.loc 1 1290 0 discriminator 1
 891 000e 0122     		movs	r2, #1
 892 0010 2100     		movs	r1, r4
 893 0012 0548     		ldr	r0, .L78+4
 894 0014 FFF7FEFF 		bl	CapSense_CSD_SetBitValue
 895              	.LVL82:
1291:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         rawIndex++;
 896              		.loc 1 1291 0 discriminator 1
 897 0018 0134     		adds	r4, r4, #1
 898              	.LVL83:
 899 001a E4B2     		uxtb	r4, r4
 900              	.LVL84:
1292:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1293:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     while(rawIndex < numOfSensors);
 901              		.loc 1 1293 0 discriminator 1
 902 001c A542     		cmp	r5, r4
 903 001e F6D8     		bhi	.L77
1294:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 904              		.loc 1 1294 0
 905              		@ sp needed
 906              	.LVL85:
 907              	.LVL86:
 908 0020 70BD     		pop	{r4, r5, r6, pc}
 909              	.L79:
 910 0022 C046     		.align	2
 911              	.L78:
 912 0024 00000000 		.word	.LANCHOR2
 913 0028 00000000 		.word	CapSense_CSD_sensorEnableMask
 914              		.cfi_endproc
 915              	.LFE57:
 916              		.size	CapSense_CSD_EnableWidget, .-CapSense_CSD_EnableWidget
 917              		.section	.text.CapSense_CSD_DisableWidget,"ax",%progbits
 918              		.align	2
 919              		.global	CapSense_CSD_DisableWidget
 920              		.code	16
 921              		.thumb_func
 922              		.type	CapSense_CSD_DisableWidget, %function
 923              	CapSense_CSD_DisableWidget:
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 40


 924              	.LFB58:
1295:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1296:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1297:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
1298:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_DisableWidget
1299:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
1300:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1301:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
1302:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Disables all the widget elements (sensors) from the scanning process.
1303:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1304:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
1305:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
1306:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1307:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
1308:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1309:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1310:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
1311:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning
1312:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  state.
1313:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors
1314:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1315:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for
1316:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1317:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 - sensor isn't scanned by CapSense_CSD_ScanEnabledWidgets().
1318:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  1 - sensor is scanned by CapSense_CSD_ScanEnabledWidgets().
1319:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1320:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
1321:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1322:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1323:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
1324:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_DisableWidget(uint32 widget)
1325:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 925              		.loc 1 1325 0
 926              		.cfi_startproc
 927              		@ args = 0, pretend = 0, frame = 0
 928              		@ frame_needed = 0, uses_anonymous_args = 0
 929              	.LVL87:
 930 0000 70B5     		push	{r4, r5, r6, lr}
 931              		.cfi_def_cfa_offset 16
 932              		.cfi_offset 4, -16
 933              		.cfi_offset 5, -12
 934              		.cfi_offset 6, -8
 935              		.cfi_offset 14, -4
1326:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 rawIndex = CapSense_CSD_rawDataIndex[widget];
 936              		.loc 1 1326 0
 937 0002 084B     		ldr	r3, .L82
 938 0004 1C5C     		ldrb	r4, [r3, r0]
 939              	.LVL88:
1327:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 numOfSensors = CapSense_CSD_numberOfSensors[widget] + rawIndex;
 940              		.loc 1 1327 0
 941 0006 1818     		adds	r0, r3, r0
 942              	.LVL89:
 943 0008 057A     		ldrb	r5, [r0, #8]
 944 000a 6519     		adds	r5, r4, r5
 945 000c EDB2     		uxtb	r5, r5
 946              	.LVL90:
 947              	.L81:
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 41


1328:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1329:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Disable all sensors of widget */
1330:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     do
1331:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1332:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1333:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_SetBitValue(CapSense_CSD_sensorEnableMask, (uint32)rawIndex, 0u);
 948              		.loc 1 1333 0 discriminator 1
 949 000e 0022     		movs	r2, #0
 950 0010 2100     		movs	r1, r4
 951 0012 0548     		ldr	r0, .L82+4
 952 0014 FFF7FEFF 		bl	CapSense_CSD_SetBitValue
 953              	.LVL91:
1334:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         rawIndex++;
 954              		.loc 1 1334 0 discriminator 1
 955 0018 0134     		adds	r4, r4, #1
 956              	.LVL92:
 957 001a E4B2     		uxtb	r4, r4
 958              	.LVL93:
1335:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1336:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     while(rawIndex < numOfSensors);
 959              		.loc 1 1336 0 discriminator 1
 960 001c A542     		cmp	r5, r4
 961 001e F6D8     		bhi	.L81
1337:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 962              		.loc 1 1337 0
 963              		@ sp needed
 964              	.LVL94:
 965              	.LVL95:
 966 0020 70BD     		pop	{r4, r5, r6, pc}
 967              	.L83:
 968 0022 C046     		.align	2
 969              	.L82:
 970 0024 00000000 		.word	.LANCHOR2
 971 0028 00000000 		.word	CapSense_CSD_sensorEnableMask
 972              		.cfi_endproc
 973              	.LFE58:
 974              		.size	CapSense_CSD_DisableWidget, .-CapSense_CSD_DisableWidget
 975              		.section	.text.CapSense_CSD_MedianFilter,"ax",%progbits
 976              		.align	2
 977              		.global	CapSense_CSD_MedianFilter
 978              		.code	16
 979              		.thumb_func
 980              		.type	CapSense_CSD_MedianFilter, %function
 981              	CapSense_CSD_MedianFilter:
 982              	.LFB59:
1338:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1339:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1340:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if(CapSense_CSD_TOTAL_CENTROIDS_BASIC_COUNT)
1341:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1342:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_FindMaximum
1343:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
1344:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1345:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
1346:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Finds the index of the maximum element within a defined centroid. Checks
1347:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_sensorSignal[] within a defined centroid and
1348:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  returns the index of the maximum element. The values below the finger threshold are
1349:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  ignored.
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 42


1350:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The centroid is defined by offset of the first element and a number of elements - count.
1351:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The diplexed centroid requires at least two consecutive elements above
1352:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  FingerThreshold to find the index of the maximum element.
1353:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1354:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
1355:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  offset:  Start index of centroid in CapSense_CSD_sensorSignal[] array.
1356:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  count:   number of elements within centroid.
1357:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  fingerThreshold:  Finger threshold.
1358:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  diplex:   pointer to diplex table.
1359:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1360:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
1361:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns the index of the maximum element within a defined centroid.
1362:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  If the index of the maximum element isn't found it returns 0xFF.
1363:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1364:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
1365:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_startOfSlider[] - contains the index of the first slider element
1366:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1367:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
1368:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1369:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1370:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1371:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1372:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 CapSense_CSD_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint
1373:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #else
1374:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 CapSense_CSD_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
1375:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1376:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1377:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 i;
1378:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1379:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 curPos = 0u;
1380:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* No centroid at Start */
1381:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 curCntrdSize = 0u;
1382:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 curCtrdStartPos = CapSense_CSD_MAXIMUM_CENTROID;
1383:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Biggest centroid is zero */
1384:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 biggestCtrdSize = 0u;
1385:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
1386:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1387:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 maximum = CapSense_CSD_MAXIMUM_CENTROID;
1388:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1389:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 temp = 0u;
1390:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 *startOfSlider = &CapSense_CSD_sensorSignal[offset];
1391:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1392:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1393:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if(diplex != 0u)
1394:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1395:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Initialize */
1396:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 i = 0u;
1397:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1398:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Make slider x2 as Diplexed */
1399:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 count <<= 1u;
1400:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 while(1u)
1401:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1402:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
1403:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1404:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         if (curCtrdStartPos == CapSense_CSD_MAXIMUM_CENTROID)
1405:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         {
1406:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             /* Start of centroid */
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 43


1407:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             curCtrdStartPos = i;
1408:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             curCntrdSize++;
1409:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         }
1410:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         else
1411:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         {
1412:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             curCntrdSize++;
1413:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         }
1414:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1415:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     else   /* Select biggest and indicate zero start */
1416:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1417:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         if(curCntrdSize > 0u)
1418:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         {
1419:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             /* We are at the end of current */
1420:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
1421:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1422:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
1423:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
1424:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1425:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1426:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             curCntrdSize = 0u;
1427:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             curCtrdStartPos = CapSense_CSD_MAXIMUM_CENTROID;
1428:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         }
1429:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1430:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1431:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     i++;
1432:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     curPos = diplex[i];
1433:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if(i == count)
1434:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1435:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         break;
1436:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1437:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1438:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1439:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Find biggest centroid if two are same size, last one wins
1440:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                        We are at the end of current */
1441:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize)
1442:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1443:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
1444:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
1445:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1446:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1447:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             else
1448:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1449:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Without diplexing */
1450:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 biggestCtrdSize = count;
1451:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1452:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1453:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1454:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Check centroid size */
1455:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if (CapSense_CSD_IS_NON_DIPLEX_SLIDER)
1456:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
1457:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #else
1458:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if(biggestCtrdSize >= 2u)
1459:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (CapSense_CSD_IS_NON_DIPLEX_SLIDER) */
1460:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1461:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
1462:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1463:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLIDER)
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 44


1464:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (diplex == 0u)
1465:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1466:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 curPos = i;
1467:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1468:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             else
1469:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1470:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 curPos = diplex[i];
1471:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1472:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #elif (CapSense_CSD_IS_DIPLEX_SLIDER)
1473:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             curPos = diplex[i];
1474:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLID
1475:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         /* Looking for greater element within centroid */
1476:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
1477:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         {
1478:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if(startOfSlider[curPos] > temp)
1479:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1480:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 maximum = i;
1481:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 temp = startOfSlider[curPos];
1482:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1483:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         }
1484:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1485:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1486:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #else
1487:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             for (i = 0u; i < count; i++)
1488:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1489:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Looking for greater element within centroid */
1490:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
1491:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1492:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if(startOfSlider[i] > temp)
1493:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1494:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         maximum = i;
1495:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         temp = startOfSlider[i];
1496:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1497:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1498:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1499:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1500:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return (maximum);
1501:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1502:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1503:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1504:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1505:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_CalcCentroid
1506:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
1507:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1508:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
1509:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns a position value calculated according to the index of the maximum element and API
1510:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  resolution.
1511:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1512:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
1513:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  type:  widget type.
1514:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  diplex:  pointer to diplex table.
1515:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1516:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  offset:   Start index of centroid in CapSense_CSD_sensorSignal[] array.
1517:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  count:    Number of elements within centroid.
1518:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1519:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  API resolution.
1520:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  noiseThreshold:  Noise threshold.
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 45


1521:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1522:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
1523:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns a position value of the slider.
1524:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1525:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
1526:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1527:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1528:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1529:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_TOTAL_TRACKPAD_GESTURES_COUNT > 0u)
1530:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 CapSense_CSD_CalcCentroid(uint8 maximum, uint8 offset,
1531:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         uint8 count, uint32 resolution, uint8 noiseThreshold)
1532:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #else
1533:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 CapSense_CSD_CalcCentroid(uint8 maximum, uint8 offset,
1534:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)
1535:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TOTAL_TRACKPAD_GESTURES_COUNT > 0u) */
1536:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1537:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_BASIC
1538:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posPrev;
1539:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posNext;
1540:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_B
1541:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1542:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Helps during centroid calculation */
1543:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_TOTAL_CENTROIDS_BASIC_COUNT)
1544:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             static uint8 CapSense_CSD_centroid[3u];
1545:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif  /* (CapSense_CSD_TOTAL_CENTROIDS_BASIC_COUNT) */
1546:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1547:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1548:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 pos;
1549:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1550:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1551:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 position;
1552:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 numerator;
1553:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         int32 denominator;
1554:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1555:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8  *startOfSlider = &CapSense_CSD_sensorSignal[offset];
1556:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1557:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_BASIC
1558:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             posPrev = 0u;
1559:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_B
1560:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1561:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_ADD_SLIDER_TYPE)
1562:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if(type == CapSense_CSD_TYPE_RADIAL_SLIDER)
1563:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1564:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_ADD_SLIDER_TYPE) */
1565:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1566:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if (CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1567:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Copy Signal to the centroid array */
1568:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_centroid[CapSense_CSD_POS] = startOfSlider[maximum];
1569:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1570:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Check borders for ROTARY Slider */
1571:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1572:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1573:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[count - 1u];
1574:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[1u];
1575:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1576:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1577:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 46


1578:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[maximum - 1u];
1579:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[0u];
1580:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1581:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 else                                /* Not first Not last */
1582:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1583:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[maximum - 1u];
1584:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[maximum + 1u];
1585:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1586:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1587:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1588:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_ADD_SLIDER_TYPE)
1589:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1590:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             else
1591:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1592:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_ADD_SLIDER_TYPE) */
1593:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1594:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_B
1595:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #if (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLIDER)
1596:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Calculate next and previous near to maximum */
1597:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if(diplex == 0u)
1598:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1599:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         pos     = maximum;
1600:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posPrev = maximum - 1u;
1601:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posNext = maximum + 1u;
1602:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1603:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     else
1604:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1605:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         pos     = diplex[maximum];
1606:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1607:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posNext = diplex[maximum + 1u];
1608:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         count <<= 1u;
1609:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1610:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #elif (CapSense_CSD_IS_DIPLEX_SLIDER)
1611:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Calculate next and previous near to maximum */
1612:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     pos     = diplex[maximum];
1613:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1614:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     posNext = diplex[maximum + 1u];
1615:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     count <<= 1u;
1616:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #else
1617:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Calculate next and previous near to maximum */
1618:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if (maximum >= 1u)
1619:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1620:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posPrev = maximum - 1u;
1621:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1622:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     posNext = maximum + 1u;
1623:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLIDER) */
1624:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1625:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Copy Signal to the centroid array */
1626:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1627:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS] = startOfSlider[pos];
1628:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #else
1629:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS] = startOfSlider[maximum];
1630:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1631:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1632:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Check borders for LINEAR Slider */
1633:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1634:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 47


1635:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = 0u;
1636:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[posNext];
1637:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1638:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
1639:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1640:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[posPrev];
1641:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = 0u;
1642:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1643:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 else                                /* Not first Not last */
1644:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1645:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[posPrev];
1646:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[posNext];
1647:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1648:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_CSD_TOTAL_TOUCH_PADS
1649:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1650:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_ADD_SLIDER_TYPE)
1651:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1652:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_ADD_SLIDER_TYPE) */
1653:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1654:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Subtract noiseThreshold */
1655:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_centroid[CapSense_CSD_POS_PREV] > noiseThreshold)
1656:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1657:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_PREV] -= noiseThreshold;
1658:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1659:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
1660:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1661:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = 0u;
1662:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1663:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1664:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Maximum always greater than fingerThreshold, so greater than noiseThreshold */
1665:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_centroid[CapSense_CSD_POS] -= noiseThreshold;
1666:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1667:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Subtract noiseThreshold */
1668:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] > noiseThreshold)
1669:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1670:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] -= noiseThreshold;
1671:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1672:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
1673:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1674:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = 0u;
1675:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1676:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1677:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1678:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Si+1 - Si-1 */
1679:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         numerator = (uint32) CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] -
1680:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     (uint32) CapSense_CSD_centroid[CapSense_CSD_POS_PREV];
1681:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1682:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Si+1 + Si + Si-1 */
1683:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         denominator = (int32) CapSense_CSD_centroid[CapSense_CSD_POS_PREV] +
1684:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                       (int32) CapSense_CSD_centroid[CapSense_CSD_POS] +
1685:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                       (int32) CapSense_CSD_centroid[CapSense_CSD_POS_NEXT];
1686:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1687:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* (numerator/denominator) + maximum */
1688:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
1689:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1690:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if(CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1691:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Only required for RADIAL Slider */
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 48


1692:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if(denominator < 0)
1693:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1694:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1695:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1696:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1697:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1698:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         denominator *= (int16)resolution;
1699:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1700:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Round result and put it to uint8 */
1701:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CSD_CENTROID_ROUND_VALUE));
1702:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1703:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return (position);
1704:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1705:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TOTAL_CENTROIDS_BASIC_COUNT) */
1706:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1707:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1708:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if((CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u
1709:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1710:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_GetCentroidPos
1711:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
1712:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1713:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
1714:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Checks the CapSense_CSD_Signal[ ] array for a centroid within
1715:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1716:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1717:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  result if enabled.
1718:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1719:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
1720:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget:  Widget number.
1721:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1722:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  #define CapSense_CSD_"widget_name"__LS           5
1723:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1724:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
1725:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns a position value of the linear slider.
1726:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1727:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
1728:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1729:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1730:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
1731:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1732:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1733:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1734:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1735:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1736:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1737:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1738:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Note:
1739:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1740:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1741:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1742:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  that noise will not generate a false centroid.
1743:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1744:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_GetCentroidPos(uint32 widget)
1745:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1746:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1747:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             const uint8 *diplex;
1748:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 49


1749:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1750:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)
1751:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posIndex;
1752:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 firstTimeIndex = CapSense_CSD_posFiltersData[widget];
1753:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posFiltersMask = CapSense_CSD_posFiltersMask[widget];
1754:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1755:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1756:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)) ||
1757:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****              (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1758:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 tempPos;
1759:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MAS
1760:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                *   (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_
1761:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                */
1762:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1763:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 maximum;
1764:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint16 position;
1765:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 offset = CapSense_CSD_rawDataIndex[widget];
1766:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 count = CapSense_CSD_numberOfSensors[widget];
1767:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1768:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1769:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if(widget < CapSense_CSD_TOTAL_DIPLEXED_SLIDERS_COUNT)
1770:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1771:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 maximum = CapSense_CSD_diplexTable[widget];
1772:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 diplex = &CapSense_CSD_diplexTable[maximum];
1773:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1774:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             else
1775:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1776:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 diplex = 0u;
1777:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1778:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1779:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1780:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Find Maximum within centroid */
1781:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1782:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             maximum = CapSense_CSD_FindMaximum(offset, count, (uint8)CapSense_CSD_fingerThreshold[w
1783:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #else
1784:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             maximum = CapSense_CSD_FindMaximum(offset, count, (uint8)CapSense_CSD_fingerThreshold[w
1785:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1786:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1787:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (maximum != 0xFFu)
1788:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1789:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Calculate centroid */
1790:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             position = (uint16) CapSense_CSD_CalcCentroid(maximum,
1791:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                          offset, count, CapSense_CSD_centroidMult[widget], CapSense_CSD_noiseThresh
1792:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1793:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)
1794:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1795:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_CSD_ANY_POS_FILTER))
1796:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1797:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Calculate position to store filters data */
1798:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1799:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1800:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if (0u == CapSense_CSD_posFiltersData[firstTimeIndex])
1801:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1802:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         /* Init filters */
1803:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1804:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & \
1805:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                      CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 50


1806:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                              (0u != (CapSense_CSD_AVERAGING_FILTER & \
1807:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                      CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1808:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1809:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER)) ||
1810:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER)) )
1811:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1812:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex + 1u] = (uint8) position;
1813:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1814:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & \
1815:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1816:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *   (0u != (CapSense_CSD_AVERAGING_FILTER & \
1817:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1818:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
1819:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1820:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         CapSense_CSD_posFiltersData[firstTimeIndex] = 1u;
1821:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1822:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     else
1823:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1824:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         /* Do filtering */
1825:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FI
1826:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER))
1827:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1828:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 tempPos = (uint8) position;
1829:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_MedianFilter(position,
1830:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1831:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1832:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex + 1u] =
1833:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                              CapSense_CSD_posFilter
1834:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = tempPos;
1835:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1836:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /*(0u != (CapSense_CSD_MEDIAN_FILTER &
1837:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *         CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1838:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
1839:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1840:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if(0u!=(CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FI
1841:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER))
1842:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1843:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 tempPos = (uint8) position;
1844:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_AveragingFilter(position,
1845:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1846:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1847:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex+1u]=CapSense_CSD_posFiltersDat
1848:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = tempPos;
1849:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1850:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_AVERAGING_FILTER & \
1851:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1852:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
1853:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1854:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_IIR2_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILT
1855:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_IIR2_FILTER))
1856:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1857:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_IIR2Filter(position,
1858:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
1859:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1860:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1861:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_IIR2_FILTER & \
1862:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 51


1863:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
1864:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1865:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_IIR4_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILT
1866:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_IIR4_FILTER))
1867:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1868:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_IIR4Filter(position,
1869:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
1870:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1871:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1872:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_IIR4_FILTER & \
1873:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1874:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
1875:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1876:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_JITTER_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FI
1877:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_JITTER_FILTER))
1878:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1879:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_JitterFilter(position,
1880:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
1881:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1882:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1883:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_JITTER_FILTER & \
1884:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1885:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
1886:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1887:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1888:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1889:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1890:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1891:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
1892:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1893:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Maximum wasn't found */
1894:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             position = 0xFFFFu;
1895:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1896:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if(0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)
1897:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Reset filters */
1898:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_CSD_ANY_POS_FILTER))
1899:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1900:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_posFiltersData[firstTimeIndex] = 0u;
1901:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1902:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1903:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1904:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1905:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1906:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return (position);
1907:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1908:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ((CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_LINEAR_SLIDERS_COU
1909:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1910:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1911:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if((CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u
1912:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1913:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_GetRadialCentroidPos
1914:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
1915:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1916:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
1917:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Checks the CapSense_CSD_Signal[ ] array for a centroid within
1918:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1919:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 52


1920:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  result if enabled.
1921:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1922:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
1923:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget:  Widget number.
1924:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1925:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  #define CapSense_CSD_"widget_name"__RS           5
1926:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1927:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
1928:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns a position value of the radial slider.
1929:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1930:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
1931:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
1932:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1933:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
1934:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1935:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1936:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1937:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1938:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1939:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1940:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Note:
1941:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1942:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1943:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1944:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  that noise will not generate a false centroid.
1945:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1946:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1947:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****      uint16 CapSense_CSD_GetRadialCentroidPos(uint32 widget)
1948:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1949:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)
1950:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posIndex;
1951:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 firstTimeIndex = CapSense_CSD_posFiltersData[widget];
1952:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posFiltersMask = CapSense_CSD_posFiltersMask[widget];
1953:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1954:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1955:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)) ||
1956:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****              (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
1957:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 tempPos;
1958:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MAS
1959:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                *   (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_
1960:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                */
1961:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1962:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 maximum;
1963:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint16 position;
1964:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 offset = CapSense_CSD_rawDataIndex[widget];
1965:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 count = CapSense_CSD_numberOfSensors[widget];
1966:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1967:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Find Maximum within centroid */
1968:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1969:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             maximum = CapSense_CSD_FindMaximum(offset, count, (uint8)CapSense_CSD_fingerThreshold[w
1970:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #else
1971:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             maximum = CapSense_CSD_FindMaximum(offset, count, (uint8)CapSense_CSD_fingerThreshold[w
1972:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1973:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1974:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (maximum != CapSense_CSD_MAXIMUM_CENTROID)
1975:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1976:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Calculate centroid */
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 53


1977:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             position = (uint16) CapSense_CSD_CalcCentroid(maximum,
1978:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                          offset, count, CapSense_CSD_centroidMult[widget], CapSense_CSD_noiseThresh
1979:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1980:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)
1981:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1982:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_CSD_ANY_POS_FILTER))
1983:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1984:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Calculate position to store filters data */
1985:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1986:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1987:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if (0u == CapSense_CSD_posFiltersData[firstTimeIndex])
1988:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1989:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         /* Init filters */
1990:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1991:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & \
1992:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                      CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1993:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                              (0u != (CapSense_CSD_AVERAGING_FILTER & \
1994:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                      CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1995:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1996:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER))  ||
1997:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER)) )
1998:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1999:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex + 1u] = (uint8) position;
2000:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
2001:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & \
2002:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
2003:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *   (0u != (CapSense_CSD_AVERAGING_FILTER & \
2004:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)))
2005:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
2006:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2007:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         CapSense_CSD_posFiltersData[firstTimeIndex] = 1u;
2008:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
2009:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     else
2010:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
2011:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         /* Do filtering */
2012:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FI
2013:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER))
2014:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
2015:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 tempPos = (uint8) position;
2016:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_MedianFilter(position,
2017:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                         CapSense_CSD_posFiltersData
2018:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                         CapSense_CSD_posFiltersData
2019:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex + 1u] =
2020:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                               CapSense_CSD_posFilte
2021:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = tempPos;
2022:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
2023:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_MEDIAN_FILTER &
2024:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
2025:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
2026:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2027:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_AVERAGING_FILTER & \
2028:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
2029:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER))
2030:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
2031:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 tempPos = (uint8) position;
2032:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_AveragingFilter(position,
2033:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 54


2034:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
2035:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex+1u]= CapSense_CSD_posFiltersDa
2036:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = tempPos;
2037:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
2038:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_AVERAGING_FILTER & \
2039:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
2040:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
2041:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2042:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_IIR2_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILT
2043:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_IIR2_FILTER))
2044:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
2045:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_IIR2Filter(position,
2046:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
2047:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
2048:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
2049:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_IIR2_FILTER &
2050:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
2051:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
2052:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2053:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_IIR4_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILT
2054:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_IIR4_FILTER))
2055:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
2056:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_IIR4Filter(position,
2057:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
2058:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
2059:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
2060:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_IIR4_FILTER &
2061:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
2062:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
2063:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2064:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_JITTER_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FI
2065:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_JITTER_FILTER))
2066:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
2067:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_JitterFilter(position,
2068:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                          CapSense_CSD_posFiltersDat
2069:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
2070:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
2071:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_JITTER_FILTER &
2072:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
2073:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
2074:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
2075:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
2076:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2077:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2078:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2079:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
2080:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2081:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Maximum was not found */
2082:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             position = 0xFFFFu;
2083:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2084:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)
2085:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Reset filters */
2086:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if((posFiltersMask & CapSense_CSD_ANY_POS_FILTER) != 0u)
2087:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
2088:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_posFiltersData[firstTimeIndex] = 0u;
2089:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
2090:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK) */
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 55


2091:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2092:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2093:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return (position);
2094:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2095:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ((CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_LINEAR_SLIDERS_COU
2096:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2097:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2098:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if(CapSense_CSD_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u)
2099:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2100:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_GetTouchCentroidPos
2101:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2102:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2103:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2104:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  If a finger is present on a touchpad, this function calculates the X and Y
2105:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  position of the finger by calculating the centroids within touchpad specified
2106:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  range. The X and Y positions are calculated according to the API resolutions set in the
2107:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense customizer. Returns 1 if a finger is on the touchpad.
2108:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The position filter is applied to the result if enabled.
2109:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
2110:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  customizer.
2111:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2112:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2113:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget:  Widget number.
2114:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  For every touchpad widget there are defines in this format:
2115:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  #define CapSense_CSD_"widget_name"__TP            5
2116:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2117:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
2118:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  result of calculation of X and Y position are stored.
2119:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  pos[0u]  - position of X
2120:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  pos[1u]  - position of Y
2121:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2122:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2123:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
2124:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2125:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2126:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
2127:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2128:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2129:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *   There are no checks of the widget type argument provided to this function.
2130:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
2131:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *   calculations.
2132:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2133:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2134:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 CapSense_CSD_GetTouchCentroidPos(uint32 widget, uint16* pos)
2135:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2136:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)
2137:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posXIndex;
2138:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posYIndex;
2139:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 firstTimeIndex = CapSense_CSD_posFiltersData[widget];
2140:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posFiltersMask = CapSense_CSD_posFiltersMask[widget];
2141:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK) */
2142:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2143:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)) || \
2144:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****              (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)))
2145:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint16 tempPos;
2146:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)) 
2147:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                *   (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 56


2148:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                */
2149:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2150:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 MaxX;
2151:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 MaxY;
2152:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 posX;
2153:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 posY;
2154:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 touch = 0u;
2155:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 offset = CapSense_CSD_rawDataIndex[widget];
2156:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 count = CapSense_CSD_numberOfSensors[widget];
2157:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2158:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Find Maximum within X centroid */
2159:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
2160:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             MaxX = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget], 0u
2161:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #else
2162:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             MaxX = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget]);
2163:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
2164:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2165:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (MaxX != CapSense_CSD_MAXIMUM_CENTROID)
2166:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2167:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             offset = CapSense_CSD_rawDataIndex[widget + 1u];
2168:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             count = CapSense_CSD_numberOfSensors[widget + 1u];
2169:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2170:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Find Maximum within Y centroid */
2171:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if (CapSense_CSD_IS_DIPLEX_SLIDER)
2172:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 MaxY = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget 
2173:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #else
2174:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 MaxY = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget 
2175:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
2176:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2177:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if (MaxY != CapSense_CSD_MAXIMUM_CENTROID)
2178:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
2179:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* X and Y maximums are found = true touch */
2180:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 touch = 1u;
2181:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2182:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Calculate Y centroid */
2183:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 posY = CapSense_CSD_CalcCentroid(MaxY, offset, count,
2184:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             CapSense_CSD_centroidMult[widget + 1u], CapSense_CSD_noiseThreshold[wid
2185:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2186:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Calculate X centroid */
2187:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 offset = CapSense_CSD_rawDataIndex[widget];
2188:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 count = CapSense_CSD_numberOfSensors[widget];
2189:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2190:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 posX = CapSense_CSD_CalcCentroid(MaxX, offset, count,
2191:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             CapSense_CSD_centroidMult[widget],CapSense_CSD_noiseThreshold[widget]);
2192:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2193:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #if (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)
2194:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Check if this TP has enabled filters */
2195:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_CSD_ANY_POS_FILTER))
2196:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
2197:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         /* Calculate position to store filters data */
2198:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
2199:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posYIndex  = CapSense_CSD_posFiltersData[widget + 1u];
2200:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2201:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         if (0u == CapSense_CSD_posFiltersData[firstTimeIndex])
2202:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         {
2203:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             /* Init filters */
2204:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             CapSense_CSD_posFiltersData[posXIndex] = posX;
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 57


2205:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             CapSense_CSD_posFiltersData[posYIndex] = posY;
2206:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2207:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #if((0u != (CapSense_CSD_MEDIAN_FILTER & \
2208:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))|| \
2209:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 (0u != (CapSense_CSD_AVERAGING_FILTER & \
2210:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)))
2211:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2212:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER)) ||
2213:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER)) )
2214:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 {
2215:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex + 1u] = posX;
2216:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex + 1u] = posY;
2217:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 }
2218:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & \
2219:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *           CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)) || \
2220:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *    (0u != (CapSense_CSD_AVERAGING_FILTER & \
2221:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *            CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)))
2222:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    */
2223:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2224:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             CapSense_CSD_posFiltersData[firstTimeIndex] = 1u;
2225:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         }
2226:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         else
2227:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         {
2228:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             /* Do filtering */
2229:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #if (0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_TOUCH_PADS_POS_FI
2230:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER))
2231:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 {
2232:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     tempPos = posX;
2233:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posX = (uint8) CapSense_CSD_MedianFilter(posX,
2234:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                       CapSense_CSD_posFiltersData[p
2235:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                       CapSense_CSD_posFiltersData[p
2236:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex + 1u] =
2237:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                              CapSense_CSD_posFilter
2238:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex] = tempPos;
2239:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2240:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     tempPos = posY;
2241:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posY = (uint8) CapSense_CSD_MedianFilter(posY,
2242:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
2243:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
2244:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex + 1u] =
2245:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                              CapSense_CSD_posFilter
2246:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex] = tempPos;
2247:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 }
2248:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2249:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_MEDIAN_FILTER & \
2250:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *          CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
2251:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    */
2252:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2253:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #if(0u !=(CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_TOUCH_PADS_POS_F
2254:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER))
2255:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 {
2256:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     tempPos = posX;
2257:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posX = (uint8) CapSense_CSD_AveragingFilter(posX,
2258:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
2259:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
2260:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex + 1u] =
2261:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                              CapSense_CSD_posFilter
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 58


2262:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex] = tempPos;
2263:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2264:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     tempPos = posY;
2265:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posY = (uint8) CapSense_CSD_AveragingFilter(posY,
2266:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                       CapSense_CSD_posFiltersData[p
2267:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                       CapSense_CSD_posFiltersData[p
2268:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex + 1u] =
2269:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                             CapSense_CSD_posFilters
2270:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex] = tempPos;
2271:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 }
2272:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2273:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_AVERAGING_FILTER & \
2274:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *           CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
2275:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    */
2276:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2277:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #if (0u != (CapSense_CSD_IIR2_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILT
2278:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_IIR2_FILTER))
2279:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 {
2280:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posX = (uint8) CapSense_CSD_IIR2Filter(posX,
2281:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                            CapSense_CSD_posFiltersD
2282:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex] = posX;
2283:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2284:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posY = (uint8) CapSense_CSD_IIR2Filter(posY,
2285:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                             CapSense_CSD_posFilters
2286:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex] = posY;
2287:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 }
2288:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2289:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_IIR2_FILTER & \
2290:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *          CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
2291:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    */
2292:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2293:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #if (0u != (CapSense_CSD_IIR4_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILT
2294:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_IIR4_FILTER))
2295:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 {
2296:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posX = (uint8) CapSense_CSD_IIR4Filter((uint16)posX,
2297:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
2298:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex] = posX;
2299:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2300:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posY = (uint8) CapSense_CSD_IIR4Filter((uint16)posY,
2301:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
2302:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex] = posY;
2303:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 }
2304:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2305:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_IIR4_FILTER & \
2306:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *           CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
2307:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    */
2308:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2309:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #if (0u != (CapSense_CSD_JITTER_FILTER & CapSense_CSD_TOUCH_PADS_POS_FI
2310:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_JITTER_FILTER))
2311:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     {
2312:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         posX = (uint8) CapSense_CSD_JitterFilter(posX,
2313:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                             CapSense_CSD_posFilters
2314:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         CapSense_CSD_posFiltersData[posXIndex] = posX;
2315:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2316:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         posY = (uint8) CapSense_CSD_JitterFilter(posY,
2317:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                             CapSense_CSD_posFilters
2318:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         CapSense_CSD_posFiltersData[posYIndex] = posY;
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 59


2319:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     }
2320:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_JITTER_FILTER & \
2321:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *           CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
2322:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    */
2323:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         }
2324:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
2325:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #endif /* (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK) */
2326:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2327:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Save positions */
2328:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 pos[0u] = posX;
2329:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 pos[1u] = posY;
2330:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
2331:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2332:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2333:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)
2334:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if(touch == 0u)
2335:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
2336:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Reset filters */
2337:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if ((posFiltersMask & CapSense_CSD_ANY_POS_FILTER) != 0u)
2338:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
2339:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_posFiltersData[firstTimeIndex] = 0u;
2340:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
2341:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
2342:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK) */
2343:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2344:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return (touch);
2345:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2346:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u) */
2347:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2348:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2349:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER)) || \
2350:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_MEDIAN_FILTER)) || \
2351:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       ((CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)) )
2352:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2353:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_MedianFilter
2354:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2355:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2356:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2357:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the Median filter function.
2358:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the
2359:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  median value.
2360:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2361:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2362:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2363:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2364:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x3:  Before previous value.
2365:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2366:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2367:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
2368:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2369:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2370:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
2371:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2372:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2373:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2374:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2375:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 60


2376:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
2377:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 983              		.loc 1 2377 0
 984              		.cfi_startproc
 985              		@ args = 0, pretend = 0, frame = 0
 986              		@ frame_needed = 0, uses_anonymous_args = 0
 987              		@ link register save eliminated.
 988              	.LVL96:
2378:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint16 tmp;
2379:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2380:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (x1 > x2)
 989              		.loc 1 2380 0
 990 0000 8842     		cmp	r0, r1
 991 0002 02D9     		bls	.L85
 992 0004 0300     		movs	r3, r0
2381:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2382:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             tmp = x2;
2383:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             x2 = x1;
2384:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             x1 = tmp;
 993              		.loc 1 2384 0
 994 0006 0800     		movs	r0, r1
 995              	.LVL97:
2383:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             x1 = tmp;
 996              		.loc 1 2383 0
 997 0008 1900     		movs	r1, r3
 998              	.LVL98:
 999              	.L85:
2385:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2386:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2387:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (x2 > x3)
 1000              		.loc 1 2387 0
 1001 000a 9142     		cmp	r1, r2
 1002 000c 00D9     		bls	.L86
2388:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2389:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             x2 = x3;
 1003              		.loc 1 2389 0
 1004 000e 1100     		movs	r1, r2
 1005              	.LVL99:
 1006              	.L86:
2390:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2391:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2392:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
 1007              		.loc 1 2392 0
 1008 0010 031C     		adds	r3, r0, #0
 1009 0012 8842     		cmp	r0, r1
 1010 0014 00D2     		bcs	.L87
 1011 0016 0B1C     		adds	r3, r1, #0
 1012              	.L87:
 1013 0018 98B2     		uxth	r0, r3
 1014              	.LVL100:
2393:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 1015              		.loc 1 2393 0
 1016              		@ sp needed
 1017 001a 7047     		bx	lr
 1018              		.cfi_endproc
 1019              	.LFE59:
 1020              		.size	CapSense_CSD_MedianFilter, .-CapSense_CSD_MedianFilter
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 61


 1021              		.section	.text.CapSense_CSD_IIR4Filter,"ax",%progbits
 1022              		.align	2
 1023              		.global	CapSense_CSD_IIR4Filter
 1024              		.code	16
 1025              		.thumb_func
 1026              		.type	CapSense_CSD_IIR4Filter, %function
 1027              	CapSense_CSD_IIR4Filter:
 1028              	.LFB60:
2394:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER)) || \
2395:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_MEDIAN_FILTER)) || \
2396:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       ((CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)) ) */
2397:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2398:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2399:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER)) || \
2400:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_AVERAGING_FILTER)) )
2401:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2402:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_AveragingFilter
2403:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2404:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2405:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2406:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the Averaging filter function.
2407:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The averaging filter looks at the three most recent samples of a position and
2408:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  reports the averaging value.
2409:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2410:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2411:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2412:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2413:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x3:  Before previous value.
2414:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2415:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2416:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
2417:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2418:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2419:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
2420:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2421:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2422:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2423:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2424:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2425:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
2426:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2427:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
2428:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2429:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return ((uint16) tmp);
2430:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2431:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER) || \
2432:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_AVERAGING_FILTER) ) */
2433:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2434:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2435:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER)) || \
2436:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_IIR2_FILTER)) )
2437:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2438:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_IIR2Filter
2439:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2440:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2441:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2442:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 62


2443:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2444:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2445:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2446:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2447:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2448:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2449:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
2450:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2451:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2452:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
2453:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2454:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2455:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2456:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2457:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2458:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_IIR2Filter(uint16 x1, uint16 x2)
2459:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2460:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 tmp;
2461:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2462:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
2463:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
2464:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp >>= 1u;
2465:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2466:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return ((uint16) tmp);
2467:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2468:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER)) || \
2469:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        *    (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_IIR2_FILTER)) )
2470:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        */
2471:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2472:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2473:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER)) || \
2474:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_IIR4_FILTER)) )
2475:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2476:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_IIR4Filter
2477:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2478:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2479:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2480:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
2481:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2482:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2483:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2484:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2485:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2486:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2487:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns a filtered value.
2488:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2489:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2490:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
2491:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2492:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2493:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2494:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2495:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2496:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_IIR4Filter(uint16 x1, uint16 x2)
2497:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1029              		.loc 1 2497 0
 1030              		.cfi_startproc
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 63


 1031              		@ args = 0, pretend = 0, frame = 0
 1032              		@ frame_needed = 0, uses_anonymous_args = 0
 1033              		@ link register save eliminated.
 1034              	.LVL101:
2498:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 tmp;
2499:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2500:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
2501:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
 1035              		.loc 1 2501 0
 1036 0000 4018     		adds	r0, r0, r1
 1037              	.LVL102:
2502:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 1038              		.loc 1 2502 0
 1039 0002 4900     		lsls	r1, r1, #1
 1040              	.LVL103:
 1041 0004 4018     		adds	r0, r0, r1
 1042              	.LVL104:
2503:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp >>= 2u;
 1043              		.loc 1 2503 0
 1044 0006 8008     		lsrs	r0, r0, #2
 1045              	.LVL105:
2504:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2505:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return ((uint16) tmp);
 1046              		.loc 1 2505 0
 1047 0008 80B2     		uxth	r0, r0
 1048              	.LVL106:
2506:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 1049              		.loc 1 2506 0
 1050              		@ sp needed
 1051 000a 7047     		bx	lr
 1052              		.cfi_endproc
 1053              	.LFE60:
 1054              		.size	CapSense_CSD_IIR4Filter, .-CapSense_CSD_IIR4Filter
 1055              		.section	.text.CapSense_CSD_UpdateBaselineNoThreshold,"ax",%progbits
 1056              		.align	2
 1057              		.global	CapSense_CSD_UpdateBaselineNoThreshold
 1058              		.code	16
 1059              		.thumb_func
 1060              		.type	CapSense_CSD_UpdateBaselineNoThreshold, %function
 1061              	CapSense_CSD_UpdateBaselineNoThreshold:
 1062              	.LFB36:
 356:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 calc;
 1063              		.loc 1 356 0
 1064              		.cfi_startproc
 1065              		@ args = 0, pretend = 0, frame = 8
 1066              		@ frame_needed = 0, uses_anonymous_args = 0
 1067              	.LVL107:
 1068 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1069              		.cfi_def_cfa_offset 20
 1070              		.cfi_offset 4, -20
 1071              		.cfi_offset 5, -16
 1072              		.cfi_offset 6, -12
 1073              		.cfi_offset 7, -8
 1074              		.cfi_offset 14, -4
 1075 0002 4746     		mov	r7, r8
 1076 0004 80B4     		push	{r7}
 1077              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 64


 1078              		.cfi_offset 8, -24
 1079 0006 82B0     		sub	sp, sp, #8
 1080              		.cfi_def_cfa_offset 32
 1081 0008 0400     		movs	r4, r0
 361:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 noiseThreshold;
 1082              		.loc 1 361 0
 1083 000a 3C4B     		ldr	r3, .L102
 1084 000c 1E5C     		ldrb	r6, [r3, r0]
 370:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     filteredRawData = CapSense_CSD_sensorRaw[sensor];
 1085              		.loc 1 370 0
 1086 000e 3C4B     		ldr	r3, .L102+4
 1087 0010 9B5D     		ldrb	r3, [r3, r6]
 1088 0012 0193     		str	r3, [sp, #4]
 1089              	.LVL108:
 371:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 1090              		.loc 1 371 0
 1091 0014 4200     		lsls	r2, r0, #1
 1092 0016 3B4B     		ldr	r3, .L102+8
 1093 0018 D75A     		ldrh	r7, [r2, r3]
 1094              	.LVL109:
 374:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1095              		.loc 1 374 0
 1096 001a 3B4B     		ldr	r3, .L102+12
 1097 001c 5B7B     		ldrb	r3, [r3, #13]
 1098 001e 002B     		cmp	r3, #0
 1099 0020 08D0     		beq	.L92
 395:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 1100              		.loc 1 395 0
 1101 0022 3A4D     		ldr	r5, .L102+16
 1102 0024 9046     		mov	r8, r2
 1103 0026 515B     		ldrh	r1, [r2, r5]
 1104 0028 3800     		movs	r0, r7
 1105              	.LVL110:
 1106 002a FFF7FEFF 		bl	CapSense_CSD_IIR4Filter
 1107              	.LVL111:
 1108 002e 0700     		movs	r7, r0
 1109              	.LVL112:
 396:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 1110              		.loc 1 396 0
 1111 0030 4346     		mov	r3, r8
 1112 0032 5853     		strh	r0, [r3, r5]
 1113              	.LVL113:
 1114              	.L92:
 417:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) */
 1115              		.loc 1 417 0
 1116 0034 E1B2     		uxtb	r1, r4
 1117 0036 334A     		ldr	r2, .L102+8
 1118 0038 3548     		ldr	r0, .L102+20
 1119 003a FFF7FEFF 		bl	MeasureNoiseEnvelope_P4_v2_60
 1120              	.LVL114:
 422:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1121              		.loc 1 422 0
 1122 003e 6300     		lsls	r3, r4, #1
 1123 0040 344A     		ldr	r2, .L102+24
 1124 0042 9A5A     		ldrh	r2, [r3, r2]
 1125 0044 9742     		cmp	r7, r2
 1126 0046 07D3     		bcc	.L93
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 65


 424:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tempRaw = filteredRawData - CapSense_CSD_sensorBaseline[sensor];
 1127              		.loc 1 424 0
 1128 0048 0021     		movs	r1, #0
 1129 004a 334B     		ldr	r3, .L102+28
 1130 004c 1955     		strb	r1, [r3, r4]
 425:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 1131              		.loc 1 425 0
 1132 004e BD1A     		subs	r5, r7, r2
 1133 0050 ADB2     		uxth	r5, r5
 1134              	.LVL115:
 426:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 1135              		.loc 1 426 0
 1136 0052 0123     		movs	r3, #1
 1137 0054 9846     		mov	r8, r3
 1138 0056 03E0     		b	.L94
 1139              	.LVL116:
 1140              	.L93:
 430:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 1141              		.loc 1 430 0
 1142 0058 D51B     		subs	r5, r2, r7
 1143 005a ADB2     		uxth	r5, r5
 1144              	.LVL117:
 431:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 1145              		.loc 1 431 0
 1146 005c 0023     		movs	r3, #0
 1147 005e 9846     		mov	r8, r3
 1148              	.LVL118:
 1149              	.L94:
 435:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #else
 1150              		.loc 1 435 0
 1151 0060 4346     		mov	r3, r8
 1152 0062 002B     		cmp	r3, #0
 1153 0064 15D1     		bne	.L95
 435:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #else
 1154              		.loc 1 435 0 is_stmt 0 discriminator 1
 1155 0066 2D4B     		ldr	r3, .L102+32
 1156 0068 9B5D     		ldrb	r3, [r3, r6]
 1157 006a 9D42     		cmp	r5, r3
 1158 006c 11D9     		bls	.L95
 440:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 1159              		.loc 1 440 0 is_stmt 1
 1160 006e 2A4B     		ldr	r3, .L102+28
 1161 0070 1B5D     		ldrb	r3, [r3, r4]
 1162 0072 254A     		ldr	r2, .L102+12
 1163 0074 1219     		adds	r2, r2, r4
 1164 0076 127A     		ldrb	r2, [r2, #8]
 1165 0078 9342     		cmp	r3, r2
 1166 007a 06D3     		bcc	.L96
 442:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_lowBaselineResetCnt[sensor] = 0u;
 1167              		.loc 1 442 0
 1168 007c 2000     		movs	r0, r4
 1169 007e FFF7FEFF 		bl	CapSense_CSD_BaseInit
 1170              	.LVL119:
 443:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 1171              		.loc 1 443 0
 1172 0082 0022     		movs	r2, #0
 1173 0084 244B     		ldr	r3, .L102+28
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 66


 1174 0086 1A55     		strb	r2, [r3, r4]
 1175 0088 1EE0     		b	.L97
 1176              	.L96:
 447:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 1177              		.loc 1 447 0
 1178 008a 0133     		adds	r3, r3, #1
 1179 008c 224A     		ldr	r2, .L102+28
 1180 008e 1355     		strb	r3, [r2, r4]
 1181 0090 1AE0     		b	.L97
 1182              	.L95:
 455:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****              ((tempRaw < (uint16) CapSense_CSD_negativeNoiseThreshold[widget])
 1183              		.loc 1 455 0
 1184 0092 6B46     		mov	r3, sp
 1185 0094 9B88     		ldrh	r3, [r3, #4]
 1186 0096 9D42     		cmp	r5, r3
 1187 0098 06D9     		bls	.L98
 456:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                && (sign == 0u)))
 1188              		.loc 1 456 0 discriminator 1
 1189 009a 204B     		ldr	r3, .L102+32
 1190 009c 9B5D     		ldrb	r3, [r3, r6]
 455:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****              ((tempRaw < (uint16) CapSense_CSD_negativeNoiseThreshold[widget])
 1191              		.loc 1 455 0 discriminator 1
 1192 009e 9D42     		cmp	r5, r3
 1193 00a0 12D2     		bcs	.L97
 457:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
 1194              		.loc 1 457 0
 1195 00a2 4346     		mov	r3, r8
 1196 00a4 002B     		cmp	r3, #0
 1197 00a6 0FD1     		bne	.L97
 1198              	.L98:
 468:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 calc |= (uint32) CapSense_CSD_sensorBaselineLow[sensor];
 1199              		.loc 1 468 0
 1200 00a8 1302     		lsls	r3, r2, #8
 1201 00aa 9C46     		mov	ip, r3
 1202              	.LVL120:
 469:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 1203              		.loc 1 469 0
 1204 00ac 1948     		ldr	r0, .L102+24
 1205 00ae 0119     		adds	r1, r0, r4
 1206 00b0 0B7B     		ldrb	r3, [r1, #12]
 1207              	.LVL121:
 1208 00b2 6646     		mov	r6, ip
 1209 00b4 3343     		orrs	r3, r6
 1210              	.LVL122:
 472:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 1211              		.loc 1 472 0
 1212 00b6 FF18     		adds	r7, r7, r3
 1213              	.LVL123:
 475:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 1214              		.loc 1 475 0
 1215 00b8 BF1A     		subs	r7, r7, r2
 1216              	.LVL124:
 478:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorBaselineLow[sensor] = ((uint8) calc);
 1217              		.loc 1 478 0
 1218 00ba 3A0A     		lsrs	r2, r7, #8
 1219 00bc 6300     		lsls	r3, r4, #1
 1220 00be C252     		strh	r2, [r0, r3]
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 67


 479:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 1221              		.loc 1 479 0
 1222 00c0 0F73     		strb	r7, [r1, #12]
 481:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE)
 1223              		.loc 1 481 0
 1224 00c2 0022     		movs	r2, #0
 1225 00c4 144B     		ldr	r3, .L102+28
 1226 00c6 1A55     		strb	r2, [r3, r4]
 1227              	.LVL125:
 1228              	.L97:
 488:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1229              		.loc 1 488 0
 1230 00c8 6B46     		mov	r3, sp
 1231 00ca 9E88     		ldrh	r6, [r3, #4]
 1232 00cc B542     		cmp	r5, r6
 1233 00ce 0DD9     		bls	.L99
 488:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1234              		.loc 1 488 0 is_stmt 0 discriminator 1
 1235 00d0 4346     		mov	r3, r8
 1236 00d2 002B     		cmp	r3, #0
 1237 00d4 0AD0     		beq	.L99
 1238              	.LVL126:
 492:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
 1239              		.loc 1 492 0 is_stmt 1
 1240 00d6 FF2D     		cmp	r5, #255
 1241 00d8 04D9     		bls	.L100
 494:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
 1242              		.loc 1 494 0
 1243 00da 0E4B     		ldr	r3, .L102+24
 1244              	.LVL127:
 1245 00dc 1C19     		adds	r4, r3, r4
 1246              	.LVL128:
 1247 00de FF23     		movs	r3, #255
 1248 00e0 2375     		strb	r3, [r4, #20]
 1249 00e2 07E0     		b	.L91
 1250              	.LVL129:
 1251              	.L100:
 498:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
 1252              		.loc 1 498 0
 1253 00e4 0B4B     		ldr	r3, .L102+24
 1254              	.LVL130:
 1255 00e6 1C19     		adds	r4, r3, r4
 1256              	.LVL131:
 1257 00e8 2575     		strb	r5, [r4, #20]
 1258 00ea 03E0     		b	.L91
 1259              	.LVL132:
 1260              	.L99:
 507:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 1261              		.loc 1 507 0
 1262 00ec 094B     		ldr	r3, .L102+24
 1263 00ee 1C19     		adds	r4, r3, r4
 1264              	.LVL133:
 1265 00f0 0023     		movs	r3, #0
 1266 00f2 2375     		strb	r3, [r4, #20]
 1267              	.L91:
 514:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 1268              		.loc 1 514 0
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 68


 1269 00f4 02B0     		add	sp, sp, #8
 1270              		@ sp needed
 1271              	.LVL134:
 1272              	.LVL135:
 1273 00f6 04BC     		pop	{r2}
 1274 00f8 9046     		mov	r8, r2
 1275 00fa F0BD     		pop	{r4, r5, r6, r7, pc}
 1276              	.L103:
 1277              		.align	2
 1278              	.L102:
 1279 00fc 00000000 		.word	CapSense_CSD_widgetNumber
 1280 0100 00000000 		.word	CapSense_CSD_noiseThreshold
 1281 0104 00000000 		.word	CapSense_CSD_sensorRaw
 1282 0108 00000000 		.word	.LANCHOR1
 1283 010c 00000000 		.word	CapSense_CSD_rawFilterData1
 1284 0110 00000000 		.word	CapSense_CSD_config
 1285 0114 00000000 		.word	.LANCHOR0
 1286 0118 00000000 		.word	CapSense_CSD_lowBaselineResetCnt
 1287 011c 00000000 		.word	CapSense_CSD_negativeNoiseThreshold
 1288              		.cfi_endproc
 1289              	.LFE36:
 1290              		.size	CapSense_CSD_UpdateBaselineNoThreshold, .-CapSense_CSD_UpdateBaselineNoThreshold
 1291              		.section	.text.CapSense_CSD_UpdateSensorBaseline,"ax",%progbits
 1292              		.align	2
 1293              		.global	CapSense_CSD_UpdateSensorBaseline
 1294              		.code	16
 1295              		.thumb_func
 1296              		.type	CapSense_CSD_UpdateSensorBaseline, %function
 1297              	CapSense_CSD_UpdateSensorBaseline:
 1298              	.LFB37:
 548:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 1299              		.loc 1 548 0
 1300              		.cfi_startproc
 1301              		@ args = 0, pretend = 0, frame = 0
 1302              		@ frame_needed = 0, uses_anonymous_args = 0
 1303              	.LVL136:
 1304 0000 10B5     		push	{r4, lr}
 1305              		.cfi_def_cfa_offset 8
 1306              		.cfi_offset 4, -8
 1307              		.cfi_offset 14, -4
 1308 0002 0400     		movs	r4, r0
 560:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) */
 1309              		.loc 1 560 0
 1310 0004 FFF7FEFF 		bl	CapSense_CSD_UpdateThresholds
 1311              	.LVL137:
 563:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 1312              		.loc 1 563 0
 1313 0008 2000     		movs	r0, r4
 1314 000a FFF7FEFF 		bl	CapSense_CSD_UpdateBaselineNoThreshold
 1315              	.LVL138:
 569:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 1316              		.loc 1 569 0
 1317              		@ sp needed
 1318              	.LVL139:
 1319 000e 10BD     		pop	{r4, pc}
 1320              		.cfi_endproc
 1321              	.LFE37:
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 69


 1322              		.size	CapSense_CSD_UpdateSensorBaseline, .-CapSense_CSD_UpdateSensorBaseline
 1323              		.section	.text.CapSense_CSD_UpdateEnabledBaselines,"ax",%progbits
 1324              		.align	2
 1325              		.global	CapSense_CSD_UpdateEnabledBaselines
 1326              		.code	16
 1327              		.thumb_func
 1328              		.type	CapSense_CSD_UpdateEnabledBaselines, %function
 1329              	CapSense_CSD_UpdateEnabledBaselines:
 1330              	.LFB38:
 602:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 i;
 1331              		.loc 1 602 0
 1332              		.cfi_startproc
 1333              		@ args = 0, pretend = 0, frame = 0
 1334              		@ frame_needed = 0, uses_anonymous_args = 0
 1335 0000 10B5     		push	{r4, lr}
 1336              		.cfi_def_cfa_offset 8
 1337              		.cfi_offset 4, -8
 1338              		.cfi_offset 14, -4
 1339              	.LVL140:
 606:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1340              		.loc 1 606 0
 1341 0002 0024     		movs	r4, #0
 1342 0004 09E0     		b	.L106
 1343              	.LVL141:
 1344              	.L108:
 608:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 1345              		.loc 1 608 0
 1346 0006 2100     		movs	r1, r4
 1347 0008 0548     		ldr	r0, .L109
 1348 000a FFF7FEFF 		bl	CapSense_CSD_GetBitValue
 1349              	.LVL142:
 610:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 1350              		.loc 1 610 0
 1351 000e 0028     		cmp	r0, #0
 1352 0010 02D0     		beq	.L107
 612:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 1353              		.loc 1 612 0
 1354 0012 2000     		movs	r0, r4
 1355              	.LVL143:
 1356 0014 FFF7FEFF 		bl	CapSense_CSD_UpdateSensorBaseline
 1357              	.LVL144:
 1358              	.L107:
 606:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1359              		.loc 1 606 0 discriminator 2
 1360 0018 0134     		adds	r4, r4, #1
 1361              	.LVL145:
 1362              	.L106:
 606:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1363              		.loc 1 606 0 is_stmt 0 discriminator 1
 1364 001a 042C     		cmp	r4, #4
 1365 001c F3D9     		bls	.L108
 615:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 1366              		.loc 1 615 0 is_stmt 1
 1367              		@ sp needed
 1368              	.LVL146:
 1369 001e 10BD     		pop	{r4, pc}
 1370              	.L110:
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 70


 1371              		.align	2
 1372              	.L109:
 1373 0020 00000000 		.word	CapSense_CSD_sensorEnableMask
 1374              		.cfi_endproc
 1375              	.LFE38:
 1376              		.size	CapSense_CSD_UpdateEnabledBaselines, .-CapSense_CSD_UpdateEnabledBaselines
 1377              		.section	.text.CapSense_CSD_UpdateWidgetBaseline,"ax",%progbits
 1378              		.align	2
 1379              		.global	CapSense_CSD_UpdateWidgetBaseline
 1380              		.code	16
 1381              		.thumb_func
 1382              		.type	CapSense_CSD_UpdateWidgetBaseline, %function
 1383              	CapSense_CSD_UpdateWidgetBaseline:
 1384              	.LFB39:
 647:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 sensorsPerWidget;
 1385              		.loc 1 647 0
 1386              		.cfi_startproc
 1387              		@ args = 0, pretend = 0, frame = 0
 1388              		@ frame_needed = 0, uses_anonymous_args = 0
 1389              	.LVL147:
 1390 0000 70B5     		push	{r4, r5, r6, lr}
 1391              		.cfi_def_cfa_offset 16
 1392              		.cfi_offset 4, -16
 1393              		.cfi_offset 5, -12
 1394              		.cfi_offset 6, -8
 1395              		.cfi_offset 14, -4
 655:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 1396              		.loc 1 655 0
 1397 0002 094B     		ldr	r3, .L115
 1398 0004 1A18     		adds	r2, r3, r0
 1399 0006 157A     		ldrb	r5, [r2, #8]
 1400              	.LVL148:
 658:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 1401              		.loc 1 658 0
 1402 0008 1C5C     		ldrb	r4, [r3, r0]
 1403              	.LVL149:
 661:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 1404              		.loc 1 661 0
 1405 000a 2D19     		adds	r5, r5, r4
 1406              	.LVL150:
 663:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1407              		.loc 1 663 0
 1408 000c 09E0     		b	.L112
 1409              	.LVL151:
 1410              	.L114:
 665:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 1411              		.loc 1 665 0
 1412 000e 2100     		movs	r1, r4
 1413 0010 0648     		ldr	r0, .L115+4
 1414 0012 FFF7FEFF 		bl	CapSense_CSD_GetBitValue
 1415              	.LVL152:
 667:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 1416              		.loc 1 667 0
 1417 0016 0028     		cmp	r0, #0
 1418 0018 02D0     		beq	.L113
 669:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 1419              		.loc 1 669 0
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 71


 1420 001a 2000     		movs	r0, r4
 1421              	.LVL153:
 1422 001c FFF7FEFF 		bl	CapSense_CSD_UpdateSensorBaseline
 1423              	.LVL154:
 1424              	.L113:
 663:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1425              		.loc 1 663 0 discriminator 2
 1426 0020 0134     		adds	r4, r4, #1
 1427              	.LVL155:
 1428              	.L112:
 663:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1429              		.loc 1 663 0 is_stmt 0 discriminator 1
 1430 0022 AC42     		cmp	r4, r5
 1431 0024 F3D3     		bcc	.L114
 672:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 1432              		.loc 1 672 0 is_stmt 1
 1433              		@ sp needed
 1434              	.LVL156:
 1435              	.LVL157:
 1436 0026 70BD     		pop	{r4, r5, r6, pc}
 1437              	.L116:
 1438              		.align	2
 1439              	.L115:
 1440 0028 00000000 		.word	.LANCHOR2
 1441 002c 00000000 		.word	CapSense_CSD_sensorEnableMask
 1442              		.cfi_endproc
 1443              	.LFE39:
 1444              		.size	CapSense_CSD_UpdateWidgetBaseline, .-CapSense_CSD_UpdateWidgetBaseline
 1445              		.section	.text.CapSense_CSD_GetWidgetNumber,"ax",%progbits
 1446              		.align	2
 1447              		.global	CapSense_CSD_GetWidgetNumber
 1448              		.code	16
 1449              		.thumb_func
 1450              		.type	CapSense_CSD_GetWidgetNumber, %function
 1451              	CapSense_CSD_GetWidgetNumber:
 1452              	.LFB61:
2507:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER)) || \
2508:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        *    (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_IIR4_FILTER)) )
2509:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        */
2510:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2511:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2512:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER)) || \
2513:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_JITTER_FILTER)) || \
2514:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_CSD_JITTER_FILTER)))
2515:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2516:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: uint16 CapSense_CSD_JitterFilter
2517:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2518:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2519:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2520:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the Jitter filter function.
2521:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2522:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2523:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2524:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2525:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2526:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2527:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 72


2528:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2529:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2530:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
2531:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2532:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2533:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2534:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2535:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2536:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_JitterFilter(uint16 x1, uint16 x2)
2537:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2538:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (x1 > x2)
2539:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2540:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             x1--;
2541:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2542:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
2543:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2544:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if (x1 < x2)
2545:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
2546:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 x1++;
2547:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
2548:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2549:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2550:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return x1;
2551:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2552:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER)) || \
2553:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        *    (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_JITTER_FILTER)) )
2554:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        *    (0u != (CapSense_CSD_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_CSD_JITTER_FILTER)) )
2555:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        */
2556:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2557:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2558:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER))
2559:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2560:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_IIR8Filter
2561:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2562:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2563:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2564:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the IIR1/8 filter function. IIR1/8 = 1/8current + 7/8previous.
2565:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Only applies for raw data.
2566:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2567:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2568:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2569:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2570:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2571:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2572:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
2573:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2574:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2575:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
2576:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2577:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2578:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2579:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2580:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2581:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_IIR8Filter(uint16 x1, uint16 x2)
2582:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2583:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 tmp;
2584:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 73


2585:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* IIR = 1/8 Current Value + 7/8 Previous Value */
2586:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp = (uint32)x1;
2587:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp += (((uint32)x2 << 3u) - ((uint32)x2));
2588:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp >>= 3u;
2589:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2590:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return ((uint16) tmp);
2591:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2592:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER)) */
2593:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2594:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2595:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER))
2596:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2597:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_IIR16Filter
2598:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2599:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2600:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2601:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the IIR1/16 filter function. IIR1/16 = 1/16current + 15/16previous.
2602:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Only applies for raw data.
2603:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2604:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2605:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2606:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2607:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2608:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2609:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
2610:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2611:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2612:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
2613:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2614:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2615:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2616:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2617:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2618:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_IIR16Filter(uint16 x1, uint16 x2)
2619:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2620:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 tmp;
2621:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2622:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* IIR = 1/16 Current Value + 15/16 Previous Value */
2623:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp = (uint32)x1;
2624:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp += (((uint32)x2 << 4u) - ((uint32)x2));
2625:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp >>= 4u;
2626:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2627:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return ((uint16) tmp);
2628:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2629:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER) */
2630:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2631:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2632:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (0u != (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT))
2633:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2634:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2635:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_GetMatrixButtonPos
2636:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2637:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2638:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2639:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Function calculates and returns a touch position (column and row) for the matrix
2640:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  button widget.
2641:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 74


2642:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2643:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget:  widget number;
2644:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  pos:     pointer to an array of two uint8, where touch position will be
2645:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *           stored:
2646:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *           pos[0] - column position;
2647:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *           pos[1] - raw position.
2648:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2649:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2650:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns 1 if row and column sensors of matrix button are active, 0 - in other
2651:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  cases.
2652:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2653:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2654:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_fingerThreshold[ ] - used to store the finger threshold for all widgets.
2655:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_sensorSignal[ ] - used to store a difference between the current value of
2656:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  raw data and a previous value of the baseline.
2657:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2658:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2659:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2660:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2661:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2662:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 CapSense_CSD_GetMatrixButtonPos(uint32 widget, uint8* pos)
2663:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2664:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 i;
2665:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 retVal = 0u;
2666:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint16 row_sig_max = 0u;
2667:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint16 col_sig_max = 0u;
2668:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 row_ind = 0u;
2669:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 col_ind = 0u;
2670:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2671:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_CheckIsWidgetActive(widget) == 1u)
2672:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2673:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Find row number with maximal signal value */
2674:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             for(i = CapSense_CSD_rawDataIndex[widget]; i < (CapSense_CSD_rawDataIndex[widget] + \
2675:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                  CapSense_CSD_numberOfSensors[widget]); i++)
2676:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
2677:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (CapSense_CSD_sensorSignal[i] > col_sig_max)
2678:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
2679:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     col_ind = i;
2680:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     col_sig_max = CapSense_CSD_sensorSignal[i];
2681:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
2682:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
2683:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2684:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Find row number with maximal signal value */
2685:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             for(i = CapSense_CSD_rawDataIndex[widget+1u]; i < (CapSense_CSD_rawDataIndex[widget+1u]
2686:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                  CapSense_CSD_numberOfSensors[widget+1u]); i++)
2687:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
2688:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (CapSense_CSD_sensorSignal[i] > row_sig_max)
2689:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
2690:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     row_ind = i;
2691:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     row_sig_max = CapSense_CSD_sensorSignal[i];
2692:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
2693:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
2694:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2695:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if((col_sig_max >= CapSense_CSD_fingerThreshold[widget]) && \
2696:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                (row_sig_max >= CapSense_CSD_fingerThreshold[widget+1u]))
2697:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
2698:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 pos[0u] = col_ind - CapSense_CSD_rawDataIndex[widget];
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 75


2699:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 pos[1u] = row_ind - CapSense_CSD_rawDataIndex[widget+1u];
2700:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 retVal = 1u;
2701:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
2702:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2703:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return (retVal);
2704:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2705:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2706:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (0u != (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT)) */
2707:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2708:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
2709:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetWidgetNumber
2710:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
2711:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2712:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
2713:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the widget number for the sensor.
2714:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2715:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
2716:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor: sensor index. The value of index can be
2717:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  from 0 to (CapSense_CSD_TOTAL_SENSOR_COUNT-1).
2718:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2719:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
2720:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the widget number for the sensor.
2721:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2722:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
2723:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_widgetNumber[]  - stores widget numbers.
2724:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2725:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
2726:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
2727:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2728:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
2729:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint32 CapSense_CSD_GetWidgetNumber(uint32 sensor)
2730:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1453              		.loc 1 2730 0
 1454              		.cfi_startproc
 1455              		@ args = 0, pretend = 0, frame = 0
 1456              		@ frame_needed = 0, uses_anonymous_args = 0
 1457              		@ link register save eliminated.
 1458              	.LVL158:
2731:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return((uint32)CapSense_CSD_widgetNumber[sensor]);
 1459              		.loc 1 2731 0
 1460 0000 014B     		ldr	r3, .L118
 1461 0002 185C     		ldrb	r0, [r3, r0]
 1462              	.LVL159:
2732:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1463              		.loc 1 2732 0
 1464              		@ sp needed
 1465 0004 7047     		bx	lr
 1466              	.L119:
 1467 0006 C046     		.align	2
 1468              	.L118:
 1469 0008 00000000 		.word	CapSense_CSD_widgetNumber
 1470              		.cfi_endproc
 1471              	.LFE61:
 1472              		.size	CapSense_CSD_GetWidgetNumber, .-CapSense_CSD_GetWidgetNumber
 1473              		.section	.text.CapSense_CSD_GetLowBaselineReset,"ax",%progbits
 1474              		.align	2
 1475              		.global	CapSense_CSD_GetLowBaselineReset
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 76


 1476              		.code	16
 1477              		.thumb_func
 1478              		.type	CapSense_CSD_GetLowBaselineReset, %function
 1479              	CapSense_CSD_GetLowBaselineReset:
 1480              	.LFB62:
2733:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2734:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
2735:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetLowBaselineReset
2736:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
2737:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2738:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
2739:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the low baseline reset threshold value for the  sensor.
2740:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2741:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
2742:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor: sensor index. The value of index can be
2743:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  from 0 to (CapSense_CSD_TOTAL_SENSOR_COUNT-1).
2744:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2745:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
2746:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  low baseline reset threshold value a sensor.
2747:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2748:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
2749:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_lowBaselineReset[]  - stores low baseline reset values.
2750:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2751:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
2752:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
2753:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2754:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
2755:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_GetLowBaselineReset(uint32 sensor)
2756:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1481              		.loc 1 2756 0
 1482              		.cfi_startproc
 1483              		@ args = 0, pretend = 0, frame = 0
 1484              		@ frame_needed = 0, uses_anonymous_args = 0
 1485              		@ link register save eliminated.
 1486              	.LVL160:
2757:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return(CapSense_CSD_lowBaselineReset[sensor]);
 1487              		.loc 1 2757 0
 1488 0000 014B     		ldr	r3, .L121
 1489 0002 1818     		adds	r0, r3, r0
 1490              	.LVL161:
 1491 0004 007A     		ldrb	r0, [r0, #8]
2758:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1492              		.loc 1 2758 0
 1493              		@ sp needed
 1494 0006 7047     		bx	lr
 1495              	.L122:
 1496              		.align	2
 1497              	.L121:
 1498 0008 00000000 		.word	.LANCHOR1
 1499              		.cfi_endproc
 1500              	.LFE62:
 1501              		.size	CapSense_CSD_GetLowBaselineReset, .-CapSense_CSD_GetLowBaselineReset
 1502              		.section	.text.CapSense_CSD_GetDebounce,"ax",%progbits
 1503              		.align	2
 1504              		.global	CapSense_CSD_GetDebounce
 1505              		.code	16
 1506              		.thumb_func
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 77


 1507              		.type	CapSense_CSD_GetDebounce, %function
 1508              	CapSense_CSD_GetDebounce:
 1509              	.LFB63:
2759:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2760:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
2761:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetDebounce
2762:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
2763:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2764:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
2765:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns a debounce value.
2766:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2767:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
2768:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor: sensor index. The value of index can be
2769:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  from 0 to (CapSense_CSD_TOTAL_SENSOR_COUNT-1).
2770:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2771:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
2772:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Debounce value
2773:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2774:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
2775:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_debounce[]  - stores the debounce value.
2776:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2777:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
2778:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
2779:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2780:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
2781:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_GetDebounce(uint32 widget)
2782:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1510              		.loc 1 2782 0
 1511              		.cfi_startproc
 1512              		@ args = 0, pretend = 0, frame = 0
 1513              		@ frame_needed = 0, uses_anonymous_args = 0
 1514              		@ link register save eliminated.
 1515              	.LVL162:
2783:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return(CapSense_CSD_debounce[widget]);
 1516              		.loc 1 2783 0
 1517 0000 014B     		ldr	r3, .L124
 1518 0002 185C     		ldrb	r0, [r3, r0]
 1519              	.LVL163:
2784:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1520              		.loc 1 2784 0
 1521              		@ sp needed
 1522 0004 7047     		bx	lr
 1523              	.L125:
 1524 0006 C046     		.align	2
 1525              	.L124:
 1526 0008 00000000 		.word	.LANCHOR1
 1527              		.cfi_endproc
 1528              	.LFE63:
 1529              		.size	CapSense_CSD_GetDebounce, .-CapSense_CSD_GetDebounce
 1530              		.section	.text.CapSense_CSD_EnableRawDataFilters,"ax",%progbits
 1531              		.align	2
 1532              		.global	CapSense_CSD_EnableRawDataFilters
 1533              		.code	16
 1534              		.thumb_func
 1535              		.type	CapSense_CSD_EnableRawDataFilters, %function
 1536              	CapSense_CSD_EnableRawDataFilters:
 1537              	.LFB64:
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 78


2785:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2786:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_RAW_FILTER_MASK != 0u)
2787:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2788:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_EnableRawDataFilters
2789:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2790:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2791:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2792:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Enables the rawdata filters for the sensor signals.
2793:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2794:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2795:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2796:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2797:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2798:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2799:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2800:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2801:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_enableRawFilters defines if the filters are enabled or not.
2802:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2803:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2804:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2805:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2806:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2807:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_EnableRawDataFilters(void)
2808:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1538              		.loc 1 2808 0
 1539              		.cfi_startproc
 1540              		@ args = 0, pretend = 0, frame = 0
 1541              		@ frame_needed = 0, uses_anonymous_args = 0
 1542              		@ link register save eliminated.
2809:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_enableRawFilters = CapSense_CSD_RAW_FILTERS_ENABLED;
 1543              		.loc 1 2809 0
 1544 0000 0122     		movs	r2, #1
 1545 0002 014B     		ldr	r3, .L127
 1546 0004 5A73     		strb	r2, [r3, #13]
2810:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 1547              		.loc 1 2810 0
 1548              		@ sp needed
 1549 0006 7047     		bx	lr
 1550              	.L128:
 1551              		.align	2
 1552              	.L127:
 1553 0008 00000000 		.word	.LANCHOR1
 1554              		.cfi_endproc
 1555              	.LFE64:
 1556              		.size	CapSense_CSD_EnableRawDataFilters, .-CapSense_CSD_EnableRawDataFilters
 1557              		.section	.text.CapSense_CSD_DisableRawDataFilters,"ax",%progbits
 1558              		.align	2
 1559              		.global	CapSense_CSD_DisableRawDataFilters
 1560              		.code	16
 1561              		.thumb_func
 1562              		.type	CapSense_CSD_DisableRawDataFilters, %function
 1563              	CapSense_CSD_DisableRawDataFilters:
 1564              	.LFB65:
2811:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2812:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2813:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_DisableRawDataFilters
2814:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 79


2815:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2816:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2817:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Disables the rawdata filters for the sensor signals.
2818:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2819:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2820:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2821:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2822:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2823:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2824:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2825:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2826:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_enableRawFilters defines if the filters are enabled or not.
2827:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2828:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2829:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2830:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2831:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2832:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_DisableRawDataFilters(void)
2833:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1565              		.loc 1 2833 0
 1566              		.cfi_startproc
 1567              		@ args = 0, pretend = 0, frame = 0
 1568              		@ frame_needed = 0, uses_anonymous_args = 0
 1569              		@ link register save eliminated.
2834:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_enableRawFilters = CapSense_CSD_RAW_FILTERS_DISABLED;
 1570              		.loc 1 2834 0
 1571 0000 0022     		movs	r2, #0
 1572 0002 014B     		ldr	r3, .L130
 1573 0004 5A73     		strb	r2, [r3, #13]
2835:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 1574              		.loc 1 2835 0
 1575              		@ sp needed
 1576 0006 7047     		bx	lr
 1577              	.L131:
 1578              		.align	2
 1579              	.L130:
 1580 0008 00000000 		.word	.LANCHOR1
 1581              		.cfi_endproc
 1582              	.LFE65:
 1583              		.size	CapSense_CSD_DisableRawDataFilters, .-CapSense_CSD_DisableRawDataFilters
 1584              		.global	CapSense_CSD_numberOfSensors
 1585              		.global	CapSense_CSD_rawDataIndex
 1586              		.global	CapSense_CSD_debounce
 1587              		.comm	CapSense_CSD_hysteresis,5,4
 1588              		.comm	CapSense_CSD_negativeNoiseThreshold,5,4
 1589              		.comm	CapSense_CSD_noiseThreshold,5,4
 1590              		.comm	CapSense_CSD_fingerThreshold,5,4
 1591              		.global	CapSense_CSD_enableRawFilters
 1592              		.global	CapSense_CSD_lowBaselineReset
 1593              		.comm	CapSense_CSD_lowBaselineResetCnt,5,4
 1594              		.global	CapSense_CSD_sensorOnMask
 1595              		.global	CapSense_CSD_sensorSignal
 1596              		.global	CapSense_CSD_sensorBaselineLow
 1597              		.global	CapSense_CSD_sensorBaseline
 1598              		.comm	CapSense_CSD_rawFilterData1,10,4
 1599              		.section	.rodata
 1600              		.align	2
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 80


 1601              		.set	.LANCHOR2,. + 0
 1602              		.type	CapSense_CSD_rawDataIndex, %object
 1603              		.size	CapSense_CSD_rawDataIndex, 5
 1604              	CapSense_CSD_rawDataIndex:
 1605 0000 00       		.byte	0
 1606 0001 01       		.byte	1
 1607 0002 02       		.byte	2
 1608 0003 03       		.byte	3
 1609 0004 04       		.byte	4
 1610 0005 000000   		.space	3
 1611              		.type	CapSense_CSD_numberOfSensors, %object
 1612              		.size	CapSense_CSD_numberOfSensors, 5
 1613              	CapSense_CSD_numberOfSensors:
 1614 0008 01       		.byte	1
 1615 0009 01       		.byte	1
 1616 000a 01       		.byte	1
 1617 000b 01       		.byte	1
 1618 000c 01       		.byte	1
 1619              		.data
 1620              		.align	2
 1621              		.set	.LANCHOR1,. + 0
 1622              		.type	CapSense_CSD_debounce, %object
 1623              		.size	CapSense_CSD_debounce, 5
 1624              	CapSense_CSD_debounce:
 1625 0000 05       		.byte	5
 1626 0001 05       		.byte	5
 1627 0002 05       		.byte	5
 1628 0003 05       		.byte	5
 1629 0004 05       		.byte	5
 1630 0005 000000   		.space	3
 1631              		.type	CapSense_CSD_lowBaselineReset, %object
 1632              		.size	CapSense_CSD_lowBaselineReset, 5
 1633              	CapSense_CSD_lowBaselineReset:
 1634 0008 1E       		.byte	30
 1635 0009 1E       		.byte	30
 1636 000a 1E       		.byte	30
 1637 000b 1E       		.byte	30
 1638 000c 1E       		.byte	30
 1639              		.type	CapSense_CSD_enableRawFilters, %object
 1640              		.size	CapSense_CSD_enableRawFilters, 1
 1641              	CapSense_CSD_enableRawFilters:
 1642 000d 01       		.byte	1
 1643              		.bss
 1644              		.align	2
 1645              		.set	.LANCHOR0,. + 0
 1646              		.type	CapSense_CSD_sensorBaseline, %object
 1647              		.size	CapSense_CSD_sensorBaseline, 10
 1648              	CapSense_CSD_sensorBaseline:
 1649 0000 00000000 		.space	10
 1649      00000000 
 1649      0000
 1650 000a 0000     		.space	2
 1651              		.type	CapSense_CSD_sensorBaselineLow, %object
 1652              		.size	CapSense_CSD_sensorBaselineLow, 5
 1653              	CapSense_CSD_sensorBaselineLow:
 1654 000c 00000000 		.space	5
 1654      00
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 81


 1655 0011 000000   		.space	3
 1656              		.type	CapSense_CSD_sensorSignal, %object
 1657              		.size	CapSense_CSD_sensorSignal, 5
 1658              	CapSense_CSD_sensorSignal:
 1659 0014 00000000 		.space	5
 1659      00
 1660 0019 000000   		.space	3
 1661              		.type	CapSense_CSD_debounceCounter, %object
 1662              		.size	CapSense_CSD_debounceCounter, 6
 1663              	CapSense_CSD_debounceCounter:
 1664 001c 00000000 		.space	6
 1664      0000
 1665 0022 0000     		.space	2
 1666              		.type	CapSense_CSD_sensorOnMask, %object
 1667              		.size	CapSense_CSD_sensorOnMask, 1
 1668              	CapSense_CSD_sensorOnMask:
 1669 0024 00       		.space	1
 1670              		.text
 1671              	.Letext0:
 1672              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1673              		.file 3 "Generated_Source\\PSoC4\\CapSense_CSD_PVT.h"
 1674              		.file 4 "Generated_Source\\PSoC4\\CapSense_CSD.h"
 1675              		.section	.debug_info,"",%progbits
 1676              	.Ldebug_info0:
 1677 0000 F00D0000 		.4byte	0xdf0
 1678 0004 0400     		.2byte	0x4
 1679 0006 00000000 		.4byte	.Ldebug_abbrev0
 1680 000a 04       		.byte	0x4
 1681 000b 01       		.uleb128 0x1
 1682 000c 7A030000 		.4byte	.LASF129
 1683 0010 0C       		.byte	0xc
 1684 0011 FC010000 		.4byte	.LASF130
 1685 0015 2B090000 		.4byte	.LASF131
 1686 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1687 001d 00000000 		.4byte	0
 1688 0021 00000000 		.4byte	.Ldebug_line0
 1689 0025 02       		.uleb128 0x2
 1690 0026 01       		.byte	0x1
 1691 0027 06       		.byte	0x6
 1692 0028 190B0000 		.4byte	.LASF0
 1693 002c 02       		.uleb128 0x2
 1694 002d 01       		.byte	0x1
 1695 002e 08       		.byte	0x8
 1696 002f 9E0A0000 		.4byte	.LASF1
 1697 0033 02       		.uleb128 0x2
 1698 0034 02       		.byte	0x2
 1699 0035 05       		.byte	0x5
 1700 0036 89080000 		.4byte	.LASF2
 1701 003a 02       		.uleb128 0x2
 1702 003b 02       		.byte	0x2
 1703 003c 07       		.byte	0x7
 1704 003d 250B0000 		.4byte	.LASF3
 1705 0041 02       		.uleb128 0x2
 1706 0042 04       		.byte	0x4
 1707 0043 05       		.byte	0x5
 1708 0044 93080000 		.4byte	.LASF4
 1709 0048 02       		.uleb128 0x2
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 82


 1710 0049 04       		.byte	0x4
 1711 004a 07       		.byte	0x7
 1712 004b B1090000 		.4byte	.LASF5
 1713 004f 02       		.uleb128 0x2
 1714 0050 08       		.byte	0x8
 1715 0051 05       		.byte	0x5
 1716 0052 0E060000 		.4byte	.LASF6
 1717 0056 02       		.uleb128 0x2
 1718 0057 08       		.byte	0x8
 1719 0058 07       		.byte	0x7
 1720 0059 AE020000 		.4byte	.LASF7
 1721 005d 03       		.uleb128 0x3
 1722 005e 04       		.byte	0x4
 1723 005f 05       		.byte	0x5
 1724 0060 696E7400 		.ascii	"int\000"
 1725 0064 02       		.uleb128 0x2
 1726 0065 04       		.byte	0x4
 1727 0066 07       		.byte	0x7
 1728 0067 9B000000 		.4byte	.LASF8
 1729 006b 04       		.uleb128 0x4
 1730 006c 730B0000 		.4byte	.LASF9
 1731 0070 02       		.byte	0x2
 1732 0071 D201     		.2byte	0x1d2
 1733 0073 2C000000 		.4byte	0x2c
 1734 0077 04       		.uleb128 0x4
 1735 0078 8D050000 		.4byte	.LASF10
 1736 007c 02       		.byte	0x2
 1737 007d D301     		.2byte	0x1d3
 1738 007f 3A000000 		.4byte	0x3a
 1739 0083 04       		.uleb128 0x4
 1740 0084 1C070000 		.4byte	.LASF11
 1741 0088 02       		.byte	0x2
 1742 0089 D401     		.2byte	0x1d4
 1743 008b 48000000 		.4byte	0x48
 1744 008f 02       		.uleb128 0x2
 1745 0090 04       		.byte	0x4
 1746 0091 04       		.byte	0x4
 1747 0092 63020000 		.4byte	.LASF12
 1748 0096 02       		.uleb128 0x2
 1749 0097 08       		.byte	0x8
 1750 0098 04       		.byte	0x4
 1751 0099 790B0000 		.4byte	.LASF13
 1752 009d 02       		.uleb128 0x2
 1753 009e 01       		.byte	0x1
 1754 009f 08       		.byte	0x8
 1755 00a0 5E050000 		.4byte	.LASF14
 1756 00a4 02       		.uleb128 0x2
 1757 00a5 04       		.byte	0x4
 1758 00a6 07       		.byte	0x7
 1759 00a7 A8090000 		.4byte	.LASF15
 1760 00ab 02       		.uleb128 0x2
 1761 00ac 08       		.byte	0x8
 1762 00ad 04       		.byte	0x4
 1763 00ae 23080000 		.4byte	.LASF16
 1764 00b2 05       		.uleb128 0x5
 1765 00b3 5C       		.byte	0x5c
 1766 00b4 03       		.byte	0x3
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 83


 1767 00b5 2F       		.byte	0x2f
 1768 00b6 CF010000 		.4byte	0x1cf
 1769 00ba 06       		.uleb128 0x6
 1770 00bb 99050000 		.4byte	.LASF17
 1771 00bf 03       		.byte	0x3
 1772 00c0 31       		.byte	0x31
 1773 00c1 CF010000 		.4byte	0x1cf
 1774 00c5 00       		.byte	0
 1775 00c6 06       		.uleb128 0x6
 1776 00c7 7A080000 		.4byte	.LASF18
 1777 00cb 03       		.byte	0x3
 1778 00cc 32       		.byte	0x32
 1779 00cd CF010000 		.4byte	0x1cf
 1780 00d1 04       		.byte	0x4
 1781 00d2 06       		.uleb128 0x6
 1782 00d3 FA0A0000 		.4byte	.LASF19
 1783 00d7 03       		.byte	0x3
 1784 00d8 33       		.byte	0x33
 1785 00d9 CF010000 		.4byte	0x1cf
 1786 00dd 08       		.byte	0x8
 1787 00de 06       		.uleb128 0x6
 1788 00df 770A0000 		.4byte	.LASF20
 1789 00e3 03       		.byte	0x3
 1790 00e4 34       		.byte	0x34
 1791 00e5 CF010000 		.4byte	0x1cf
 1792 00e9 0C       		.byte	0xc
 1793 00ea 06       		.uleb128 0x6
 1794 00eb 0F0B0000 		.4byte	.LASF21
 1795 00ef 03       		.byte	0x3
 1796 00f0 35       		.byte	0x35
 1797 00f1 CF010000 		.4byte	0x1cf
 1798 00f5 10       		.byte	0x10
 1799 00f6 06       		.uleb128 0x6
 1800 00f7 DE080000 		.4byte	.LASF22
 1801 00fb 03       		.byte	0x3
 1802 00fc 36       		.byte	0x36
 1803 00fd D5010000 		.4byte	0x1d5
 1804 0101 14       		.byte	0x14
 1805 0102 06       		.uleb128 0x6
 1806 0103 69020000 		.4byte	.LASF23
 1807 0107 03       		.byte	0x3
 1808 0108 37       		.byte	0x37
 1809 0109 E0010000 		.4byte	0x1e0
 1810 010d 18       		.byte	0x18
 1811 010e 06       		.uleb128 0x6
 1812 010f 29040000 		.4byte	.LASF24
 1813 0113 03       		.byte	0x3
 1814 0114 38       		.byte	0x38
 1815 0115 CF010000 		.4byte	0x1cf
 1816 0119 1C       		.byte	0x1c
 1817 011a 06       		.uleb128 0x6
 1818 011b 78020000 		.4byte	.LASF25
 1819 011f 03       		.byte	0x3
 1820 0120 39       		.byte	0x39
 1821 0121 CF010000 		.4byte	0x1cf
 1822 0125 20       		.byte	0x20
 1823 0126 06       		.uleb128 0x6
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 84


 1824 0127 23010000 		.4byte	.LASF26
 1825 012b 03       		.byte	0x3
 1826 012c 3A       		.byte	0x3a
 1827 012d CF010000 		.4byte	0x1cf
 1828 0131 24       		.byte	0x24
 1829 0132 06       		.uleb128 0x6
 1830 0133 0F070000 		.4byte	.LASF27
 1831 0137 03       		.byte	0x3
 1832 0138 3B       		.byte	0x3b
 1833 0139 E6010000 		.4byte	0x1e6
 1834 013d 28       		.byte	0x28
 1835 013e 06       		.uleb128 0x6
 1836 013f 16010000 		.4byte	.LASF28
 1837 0143 03       		.byte	0x3
 1838 0144 3C       		.byte	0x3c
 1839 0145 E6010000 		.4byte	0x1e6
 1840 0149 2C       		.byte	0x2c
 1841 014a 06       		.uleb128 0x6
 1842 014b 550A0000 		.4byte	.LASF29
 1843 014f 03       		.byte	0x3
 1844 0150 3D       		.byte	0x3d
 1845 0151 E6010000 		.4byte	0x1e6
 1846 0155 30       		.byte	0x30
 1847 0156 06       		.uleb128 0x6
 1848 0157 6D090000 		.4byte	.LASF30
 1849 015b 03       		.byte	0x3
 1850 015c 3E       		.byte	0x3e
 1851 015d CF010000 		.4byte	0x1cf
 1852 0161 34       		.byte	0x34
 1853 0162 06       		.uleb128 0x6
 1854 0163 00000000 		.4byte	.LASF31
 1855 0167 03       		.byte	0x3
 1856 0168 3F       		.byte	0x3f
 1857 0169 CF010000 		.4byte	0x1cf
 1858 016d 38       		.byte	0x38
 1859 016e 06       		.uleb128 0x6
 1860 016f 7E050000 		.4byte	.LASF32
 1861 0173 03       		.byte	0x3
 1862 0174 40       		.byte	0x40
 1863 0175 D5010000 		.4byte	0x1d5
 1864 0179 3C       		.byte	0x3c
 1865 017a 06       		.uleb128 0x6
 1866 017b 4A010000 		.4byte	.LASF33
 1867 017f 03       		.byte	0x3
 1868 0180 41       		.byte	0x41
 1869 0181 D5010000 		.4byte	0x1d5
 1870 0185 40       		.byte	0x40
 1871 0186 06       		.uleb128 0x6
 1872 0187 0D000000 		.4byte	.LASF34
 1873 018b 03       		.byte	0x3
 1874 018c 42       		.byte	0x42
 1875 018d D5010000 		.4byte	0x1d5
 1876 0191 44       		.byte	0x44
 1877 0192 06       		.uleb128 0x6
 1878 0193 AA060000 		.4byte	.LASF35
 1879 0197 03       		.byte	0x3
 1880 0198 43       		.byte	0x43
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 85


 1881 0199 FB010000 		.4byte	0x1fb
 1882 019d 48       		.byte	0x48
 1883 019e 06       		.uleb128 0x6
 1884 019f 7E060000 		.4byte	.LASF36
 1885 01a3 03       		.byte	0x3
 1886 01a4 44       		.byte	0x44
 1887 01a5 0C020000 		.4byte	0x20c
 1888 01a9 4C       		.byte	0x4c
 1889 01aa 06       		.uleb128 0x6
 1890 01ab 3F040000 		.4byte	.LASF37
 1891 01af 03       		.byte	0x3
 1892 01b0 45       		.byte	0x45
 1893 01b1 FB010000 		.4byte	0x1fb
 1894 01b5 50       		.byte	0x50
 1895 01b6 06       		.uleb128 0x6
 1896 01b7 1D000000 		.4byte	.LASF38
 1897 01bb 03       		.byte	0x3
 1898 01bc 46       		.byte	0x46
 1899 01bd 26020000 		.4byte	0x226
 1900 01c1 54       		.byte	0x54
 1901 01c2 06       		.uleb128 0x6
 1902 01c3 380B0000 		.4byte	.LASF39
 1903 01c7 03       		.byte	0x3
 1904 01c8 47       		.byte	0x47
 1905 01c9 41020000 		.4byte	0x241
 1906 01cd 58       		.byte	0x58
 1907 01ce 00       		.byte	0
 1908 01cf 07       		.uleb128 0x7
 1909 01d0 04       		.byte	0x4
 1910 01d1 6B000000 		.4byte	0x6b
 1911 01d5 07       		.uleb128 0x7
 1912 01d6 04       		.byte	0x4
 1913 01d7 DB010000 		.4byte	0x1db
 1914 01db 08       		.uleb128 0x8
 1915 01dc 6B000000 		.4byte	0x6b
 1916 01e0 07       		.uleb128 0x7
 1917 01e1 04       		.byte	0x4
 1918 01e2 83000000 		.4byte	0x83
 1919 01e6 07       		.uleb128 0x7
 1920 01e7 04       		.byte	0x4
 1921 01e8 77000000 		.4byte	0x77
 1922 01ec 09       		.uleb128 0x9
 1923 01ed 77000000 		.4byte	0x77
 1924 01f1 FB010000 		.4byte	0x1fb
 1925 01f5 0A       		.uleb128 0xa
 1926 01f6 83000000 		.4byte	0x83
 1927 01fa 00       		.byte	0
 1928 01fb 07       		.uleb128 0x7
 1929 01fc 04       		.byte	0x4
 1930 01fd EC010000 		.4byte	0x1ec
 1931 0201 0B       		.uleb128 0xb
 1932 0202 0C020000 		.4byte	0x20c
 1933 0206 0A       		.uleb128 0xa
 1934 0207 83000000 		.4byte	0x83
 1935 020b 00       		.byte	0
 1936 020c 07       		.uleb128 0x7
 1937 020d 04       		.byte	0x4
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 86


 1938 020e 01020000 		.4byte	0x201
 1939 0212 09       		.uleb128 0x9
 1940 0213 83000000 		.4byte	0x83
 1941 0217 26020000 		.4byte	0x226
 1942 021b 0A       		.uleb128 0xa
 1943 021c D5010000 		.4byte	0x1d5
 1944 0220 0A       		.uleb128 0xa
 1945 0221 83000000 		.4byte	0x83
 1946 0225 00       		.byte	0
 1947 0226 07       		.uleb128 0x7
 1948 0227 04       		.byte	0x4
 1949 0228 12020000 		.4byte	0x212
 1950 022c 0B       		.uleb128 0xb
 1951 022d 41020000 		.4byte	0x241
 1952 0231 0A       		.uleb128 0xa
 1953 0232 CF010000 		.4byte	0x1cf
 1954 0236 0A       		.uleb128 0xa
 1955 0237 83000000 		.4byte	0x83
 1956 023b 0A       		.uleb128 0xa
 1957 023c 83000000 		.4byte	0x83
 1958 0240 00       		.byte	0
 1959 0241 07       		.uleb128 0x7
 1960 0242 04       		.byte	0x4
 1961 0243 2C020000 		.4byte	0x22c
 1962 0247 0C       		.uleb128 0xc
 1963 0248 47070000 		.4byte	.LASF40
 1964 024c 03       		.byte	0x3
 1965 024d 48       		.byte	0x48
 1966 024e B2000000 		.4byte	0xb2
 1967 0252 05       		.uleb128 0x5
 1968 0253 0C       		.byte	0xc
 1969 0254 03       		.byte	0x3
 1970 0255 4A       		.byte	0x4a
 1971 0256 A3020000 		.4byte	0x2a3
 1972 025a 06       		.uleb128 0x6
 1973 025b D7040000 		.4byte	.LASF41
 1974 025f 03       		.byte	0x3
 1975 0260 4C       		.byte	0x4c
 1976 0261 6B000000 		.4byte	0x6b
 1977 0265 00       		.byte	0
 1978 0266 06       		.uleb128 0x6
 1979 0267 57010000 		.4byte	.LASF42
 1980 026b 03       		.byte	0x3
 1981 026c 4D       		.byte	0x4d
 1982 026d 6B000000 		.4byte	0x6b
 1983 0271 01       		.byte	0x1
 1984 0272 06       		.uleb128 0x6
 1985 0273 A8000000 		.4byte	.LASF43
 1986 0277 03       		.byte	0x3
 1987 0278 4E       		.byte	0x4e
 1988 0279 6B000000 		.4byte	0x6b
 1989 027d 02       		.byte	0x2
 1990 027e 06       		.uleb128 0x6
 1991 027f 31050000 		.4byte	.LASF44
 1992 0283 03       		.byte	0x3
 1993 0284 4F       		.byte	0x4f
 1994 0285 77000000 		.4byte	0x77
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 87


 1995 0289 04       		.byte	0x4
 1996 028a 06       		.uleb128 0x6
 1997 028b 4E080000 		.4byte	.LASF45
 1998 028f 03       		.byte	0x3
 1999 0290 50       		.byte	0x50
 2000 0291 77000000 		.4byte	0x77
 2001 0295 06       		.byte	0x6
 2002 0296 06       		.uleb128 0x6
 2003 0297 C3090000 		.4byte	.LASF46
 2004 029b 03       		.byte	0x3
 2005 029c 51       		.byte	0x51
 2006 029d A3020000 		.4byte	0x2a3
 2007 02a1 08       		.byte	0x8
 2008 02a2 00       		.byte	0
 2009 02a3 07       		.uleb128 0x7
 2010 02a4 04       		.byte	0x4
 2011 02a5 A9020000 		.4byte	0x2a9
 2012 02a9 08       		.uleb128 0x8
 2013 02aa 47020000 		.4byte	0x247
 2014 02ae 0C       		.uleb128 0xc
 2015 02af 50040000 		.4byte	.LASF47
 2016 02b3 03       		.byte	0x3
 2017 02b4 52       		.byte	0x52
 2018 02b5 52020000 		.4byte	0x252
 2019 02b9 0D       		.uleb128 0xd
 2020 02ba 2C000000 		.4byte	.LASF48
 2021 02be 01       		.byte	0x1
 2022 02bf 8E       		.byte	0x8e
 2023 02c0 00000000 		.4byte	.LFB32
 2024 02c4 3C000000 		.4byte	.LFE32-.LFB32
 2025 02c8 01       		.uleb128 0x1
 2026 02c9 9C       		.byte	0x9c
 2027 02ca ED020000 		.4byte	0x2ed
 2028 02ce 0E       		.uleb128 0xe
 2029 02cf 2A050000 		.4byte	.LASF50
 2030 02d3 01       		.byte	0x1
 2031 02d4 8E       		.byte	0x8e
 2032 02d5 83000000 		.4byte	0x83
 2033 02d9 00000000 		.4byte	.LLST0
 2034 02dd 0F       		.uleb128 0xf
 2035 02de C5020000 		.4byte	.LASF52
 2036 02e2 01       		.byte	0x1
 2037 02e3 92       		.byte	0x92
 2038 02e4 6B000000 		.4byte	0x6b
 2039 02e8 21000000 		.4byte	.LLST1
 2040 02ec 00       		.byte	0
 2041 02ed 0D       		.uleb128 0xd
 2042 02ee BA0A0000 		.4byte	.LASF49
 2043 02f2 01       		.byte	0x1
 2044 02f3 DA       		.byte	0xda
 2045 02f4 00000000 		.4byte	.LFB33
 2046 02f8 18000000 		.4byte	.LFE33-.LFB33
 2047 02fc 01       		.uleb128 0x1
 2048 02fd 9C       		.byte	0x9c
 2049 02fe 3F030000 		.4byte	0x33f
 2050 0302 0E       		.uleb128 0xe
 2051 0303 2A050000 		.4byte	.LASF50
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 88


 2052 0307 01       		.byte	0x1
 2053 0308 DA       		.byte	0xda
 2054 0309 83000000 		.4byte	0x83
 2055 030d 34000000 		.4byte	.LLST2
 2056 0311 10       		.uleb128 0x10
 2057 0312 08000000 		.4byte	.LVL5
 2058 0316 A60D0000 		.4byte	0xda6
 2059 031a 25030000 		.4byte	0x325
 2060 031e 11       		.uleb128 0x11
 2061 031f 01       		.uleb128 0x1
 2062 0320 50       		.byte	0x50
 2063 0321 02       		.uleb128 0x2
 2064 0322 74       		.byte	0x74
 2065 0323 00       		.sleb128 0
 2066 0324 00       		.byte	0
 2067 0325 12       		.uleb128 0x12
 2068 0326 0C000000 		.4byte	.LVL6
 2069 032a B10D0000 		.4byte	0xdb1
 2070 032e 13       		.uleb128 0x13
 2071 032f 16000000 		.4byte	.LVL7
 2072 0333 B9020000 		.4byte	0x2b9
 2073 0337 11       		.uleb128 0x11
 2074 0338 01       		.uleb128 0x1
 2075 0339 50       		.byte	0x50
 2076 033a 02       		.uleb128 0x2
 2077 033b 74       		.byte	0x74
 2078 033c 00       		.sleb128 0
 2079 033d 00       		.byte	0
 2080 033e 00       		.byte	0
 2081 033f 0D       		.uleb128 0xd
 2082 0340 470B0000 		.4byte	.LASF51
 2083 0344 01       		.byte	0x1
 2084 0345 FF       		.byte	0xff
 2085 0346 00000000 		.4byte	.LFB34
 2086 034a 14000000 		.4byte	.LFE34-.LFB34
 2087 034e 01       		.uleb128 0x1
 2088 034f 9C       		.byte	0x9c
 2089 0350 73030000 		.4byte	0x373
 2090 0354 14       		.uleb128 0x14
 2091 0355 6900     		.ascii	"i\000"
 2092 0357 01       		.byte	0x1
 2093 0358 0101     		.2byte	0x101
 2094 035a 83000000 		.4byte	0x83
 2095 035e 60000000 		.4byte	.LLST3
 2096 0362 13       		.uleb128 0x13
 2097 0363 0C000000 		.4byte	.LVL11
 2098 0367 ED020000 		.4byte	0x2ed
 2099 036b 11       		.uleb128 0x11
 2100 036c 01       		.uleb128 0x1
 2101 036d 50       		.byte	0x50
 2102 036e 02       		.uleb128 0x2
 2103 036f 74       		.byte	0x74
 2104 0370 00       		.sleb128 0
 2105 0371 00       		.byte	0
 2106 0372 00       		.byte	0
 2107 0373 15       		.uleb128 0x15
 2108 0374 B8000000 		.4byte	.LASF53
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 89


 2109 0378 01       		.byte	0x1
 2110 0379 2201     		.2byte	0x122
 2111 037b 00000000 		.4byte	.LFB35
 2112 037f 30000000 		.4byte	.LFE35-.LFB35
 2113 0383 01       		.uleb128 0x1
 2114 0384 9C       		.byte	0x9c
 2115 0385 DE030000 		.4byte	0x3de
 2116 0389 14       		.uleb128 0x14
 2117 038a 6900     		.ascii	"i\000"
 2118 038c 01       		.byte	0x1
 2119 038d 2401     		.2byte	0x124
 2120 038f 83000000 		.4byte	0x83
 2121 0393 7F000000 		.4byte	.LLST4
 2122 0397 16       		.uleb128 0x16
 2123 0398 7E000000 		.4byte	.LASF54
 2124 039c 01       		.byte	0x1
 2125 039d 2501     		.2byte	0x125
 2126 039f 83000000 		.4byte	0x83
 2127 03a3 92000000 		.4byte	.LLST5
 2128 03a7 12       		.uleb128 0x12
 2129 03a8 06000000 		.4byte	.LVL14
 2130 03ac BC0D0000 		.4byte	0xdbc
 2131 03b0 12       		.uleb128 0x12
 2132 03b1 0A000000 		.4byte	.LVL15
 2133 03b5 B10D0000 		.4byte	0xdb1
 2134 03b9 10       		.uleb128 0x10
 2135 03ba 1A000000 		.4byte	.LVL17
 2136 03be C70D0000 		.4byte	0xdc7
 2137 03c2 CD030000 		.4byte	0x3cd
 2138 03c6 11       		.uleb128 0x11
 2139 03c7 01       		.uleb128 0x1
 2140 03c8 51       		.byte	0x51
 2141 03c9 02       		.uleb128 0x2
 2142 03ca 74       		.byte	0x74
 2143 03cb 00       		.sleb128 0
 2144 03cc 00       		.byte	0
 2145 03cd 13       		.uleb128 0x13
 2146 03ce 24000000 		.4byte	.LVL19
 2147 03d2 B9020000 		.4byte	0x2b9
 2148 03d6 11       		.uleb128 0x11
 2149 03d7 01       		.uleb128 0x1
 2150 03d8 50       		.byte	0x50
 2151 03d9 02       		.uleb128 0x2
 2152 03da 74       		.byte	0x74
 2153 03db 00       		.sleb128 0
 2154 03dc 00       		.byte	0
 2155 03dd 00       		.byte	0
 2156 03de 17       		.uleb128 0x17
 2157 03df 8B090000 		.4byte	.LASF57
 2158 03e3 01       		.byte	0x1
 2159 03e4 B702     		.2byte	0x2b7
 2160 03e6 77000000 		.4byte	0x77
 2161 03ea 00000000 		.4byte	.LFB40
 2162 03ee 0C000000 		.4byte	.LFE40-.LFB40
 2163 03f2 01       		.uleb128 0x1
 2164 03f3 9C       		.byte	0x9c
 2165 03f4 09040000 		.4byte	0x409
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 90


 2166 03f8 18       		.uleb128 0x18
 2167 03f9 2A050000 		.4byte	.LASF50
 2168 03fd 01       		.byte	0x1
 2169 03fe B702     		.2byte	0x2b7
 2170 0400 83000000 		.4byte	0x83
 2171 0404 A5000000 		.4byte	.LLST6
 2172 0408 00       		.byte	0
 2173 0409 15       		.uleb128 0x15
 2174 040a E0000000 		.4byte	.LASF55
 2175 040e 01       		.byte	0x1
 2176 040f D202     		.2byte	0x2d2
 2177 0411 00000000 		.4byte	.LFB41
 2178 0415 0C000000 		.4byte	.LFE41-.LFB41
 2179 0419 01       		.uleb128 0x1
 2180 041a 9C       		.byte	0x9c
 2181 041b 3E040000 		.4byte	0x43e
 2182 041f 18       		.uleb128 0x18
 2183 0420 2A050000 		.4byte	.LASF50
 2184 0424 01       		.byte	0x1
 2185 0425 D202     		.2byte	0x2d2
 2186 0427 83000000 		.4byte	0x83
 2187 042b C6000000 		.4byte	.LLST7
 2188 042f 19       		.uleb128 0x19
 2189 0430 94050000 		.4byte	.LASF56
 2190 0434 01       		.byte	0x1
 2191 0435 D202     		.2byte	0x2d2
 2192 0437 77000000 		.4byte	0x77
 2193 043b 01       		.uleb128 0x1
 2194 043c 51       		.byte	0x51
 2195 043d 00       		.byte	0
 2196 043e 17       		.uleb128 0x17
 2197 043f C0080000 		.4byte	.LASF58
 2198 0443 01       		.byte	0x1
 2199 0444 ED02     		.2byte	0x2ed
 2200 0446 6B000000 		.4byte	0x6b
 2201 044a 00000000 		.4byte	.LFB42
 2202 044e 0C000000 		.4byte	.LFE42-.LFB42
 2203 0452 01       		.uleb128 0x1
 2204 0453 9C       		.byte	0x9c
 2205 0454 69040000 		.4byte	0x469
 2206 0458 18       		.uleb128 0x18
 2207 0459 2A050000 		.4byte	.LASF50
 2208 045d 01       		.byte	0x1
 2209 045e ED02     		.2byte	0x2ed
 2210 0460 83000000 		.4byte	0x83
 2211 0464 E7000000 		.4byte	.LLST8
 2212 0468 00       		.byte	0
 2213 0469 15       		.uleb128 0x15
 2214 046a 72070000 		.4byte	.LASF59
 2215 046e 01       		.byte	0x1
 2216 046f 0803     		.2byte	0x308
 2217 0471 00000000 		.4byte	.LFB43
 2218 0475 0C000000 		.4byte	.LFE43-.LFB43
 2219 0479 01       		.uleb128 0x1
 2220 047a 9C       		.byte	0x9c
 2221 047b 9E040000 		.4byte	0x49e
 2222 047f 18       		.uleb128 0x18
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 91


 2223 0480 2A050000 		.4byte	.LASF50
 2224 0484 01       		.byte	0x1
 2225 0485 0803     		.2byte	0x308
 2226 0487 83000000 		.4byte	0x83
 2227 048b 08010000 		.4byte	.LLST9
 2228 048f 19       		.uleb128 0x19
 2229 0490 0D030000 		.4byte	.LASF60
 2230 0494 01       		.byte	0x1
 2231 0495 0803     		.2byte	0x308
 2232 0497 6B000000 		.4byte	0x6b
 2233 049b 01       		.uleb128 0x1
 2234 049c 51       		.byte	0x51
 2235 049d 00       		.byte	0
 2236 049e 17       		.uleb128 0x17
 2237 049f 1C060000 		.4byte	.LASF61
 2238 04a3 01       		.byte	0x1
 2239 04a4 2303     		.2byte	0x323
 2240 04a6 6B000000 		.4byte	0x6b
 2241 04aa 00000000 		.4byte	.LFB44
 2242 04ae 0C000000 		.4byte	.LFE44-.LFB44
 2243 04b2 01       		.uleb128 0x1
 2244 04b3 9C       		.byte	0x9c
 2245 04b4 C9040000 		.4byte	0x4c9
 2246 04b8 18       		.uleb128 0x18
 2247 04b9 C5020000 		.4byte	.LASF52
 2248 04bd 01       		.byte	0x1
 2249 04be 2303     		.2byte	0x323
 2250 04c0 83000000 		.4byte	0x83
 2251 04c4 29010000 		.4byte	.LLST10
 2252 04c8 00       		.byte	0
 2253 04c9 17       		.uleb128 0x17
 2254 04ca 44020000 		.4byte	.LASF62
 2255 04ce 01       		.byte	0x1
 2256 04cf 3E03     		.2byte	0x33e
 2257 04d1 6B000000 		.4byte	0x6b
 2258 04d5 00000000 		.4byte	.LFB45
 2259 04d9 0C000000 		.4byte	.LFE45-.LFB45
 2260 04dd 01       		.uleb128 0x1
 2261 04de 9C       		.byte	0x9c
 2262 04df F4040000 		.4byte	0x4f4
 2263 04e3 18       		.uleb128 0x18
 2264 04e4 C5020000 		.4byte	.LASF52
 2265 04e8 01       		.byte	0x1
 2266 04e9 3E03     		.2byte	0x33e
 2267 04eb 83000000 		.4byte	0x83
 2268 04ef 4A010000 		.4byte	.LLST11
 2269 04f3 00       		.byte	0
 2270 04f4 17       		.uleb128 0x17
 2271 04f5 89060000 		.4byte	.LASF63
 2272 04f9 01       		.byte	0x1
 2273 04fa 5A03     		.2byte	0x35a
 2274 04fc 6B000000 		.4byte	0x6b
 2275 0500 00000000 		.4byte	.LFB46
 2276 0504 0C000000 		.4byte	.LFE46-.LFB46
 2277 0508 01       		.uleb128 0x1
 2278 0509 9C       		.byte	0x9c
 2279 050a 1F050000 		.4byte	0x51f
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 92


 2280 050e 18       		.uleb128 0x18
 2281 050f C5020000 		.4byte	.LASF52
 2282 0513 01       		.byte	0x1
 2283 0514 5A03     		.2byte	0x35a
 2284 0516 83000000 		.4byte	0x83
 2285 051a 6B010000 		.4byte	.LLST12
 2286 051e 00       		.byte	0
 2287 051f 17       		.uleb128 0x17
 2288 0520 A8050000 		.4byte	.LASF64
 2289 0524 01       		.byte	0x1
 2290 0525 7603     		.2byte	0x376
 2291 0527 6B000000 		.4byte	0x6b
 2292 052b 00000000 		.4byte	.LFB47
 2293 052f 0C000000 		.4byte	.LFE47-.LFB47
 2294 0533 01       		.uleb128 0x1
 2295 0534 9C       		.byte	0x9c
 2296 0535 4A050000 		.4byte	0x54a
 2297 0539 18       		.uleb128 0x18
 2298 053a C5020000 		.4byte	.LASF52
 2299 053e 01       		.byte	0x1
 2300 053f 7603     		.2byte	0x376
 2301 0541 83000000 		.4byte	0x83
 2302 0545 8C010000 		.4byte	.LLST13
 2303 0549 00       		.byte	0
 2304 054a 15       		.uleb128 0x15
 2305 054b 88010000 		.4byte	.LASF65
 2306 054f 01       		.byte	0x1
 2307 0550 9703     		.2byte	0x397
 2308 0552 00000000 		.4byte	.LFB48
 2309 0556 0C000000 		.4byte	.LFE48-.LFB48
 2310 055a 01       		.uleb128 0x1
 2311 055b 9C       		.byte	0x9c
 2312 055c 7D050000 		.4byte	0x57d
 2313 0560 19       		.uleb128 0x19
 2314 0561 C5020000 		.4byte	.LASF52
 2315 0565 01       		.byte	0x1
 2316 0566 9703     		.2byte	0x397
 2317 0568 83000000 		.4byte	0x83
 2318 056c 01       		.uleb128 0x1
 2319 056d 50       		.byte	0x50
 2320 056e 19       		.uleb128 0x19
 2321 056f 0D030000 		.4byte	.LASF60
 2322 0573 01       		.byte	0x1
 2323 0574 9703     		.2byte	0x397
 2324 0576 6B000000 		.4byte	0x6b
 2325 057a 01       		.uleb128 0x1
 2326 057b 51       		.byte	0x51
 2327 057c 00       		.byte	0
 2328 057d 15       		.uleb128 0x15
 2329 057e CC020000 		.4byte	.LASF66
 2330 0582 01       		.byte	0x1
 2331 0583 B303     		.2byte	0x3b3
 2332 0585 00000000 		.4byte	.LFB49
 2333 0589 0C000000 		.4byte	.LFE49-.LFB49
 2334 058d 01       		.uleb128 0x1
 2335 058e 9C       		.byte	0x9c
 2336 058f B0050000 		.4byte	0x5b0
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 93


 2337 0593 19       		.uleb128 0x19
 2338 0594 C5020000 		.4byte	.LASF52
 2339 0598 01       		.byte	0x1
 2340 0599 B303     		.2byte	0x3b3
 2341 059b 83000000 		.4byte	0x83
 2342 059f 01       		.uleb128 0x1
 2343 05a0 50       		.byte	0x50
 2344 05a1 19       		.uleb128 0x19
 2345 05a2 0D030000 		.4byte	.LASF60
 2346 05a6 01       		.byte	0x1
 2347 05a7 B303     		.2byte	0x3b3
 2348 05a9 6B000000 		.4byte	0x6b
 2349 05ad 01       		.uleb128 0x1
 2350 05ae 51       		.byte	0x51
 2351 05af 00       		.byte	0
 2352 05b0 15       		.uleb128 0x15
 2353 05b1 340A0000 		.4byte	.LASF67
 2354 05b5 01       		.byte	0x1
 2355 05b6 CF03     		.2byte	0x3cf
 2356 05b8 00000000 		.4byte	.LFB50
 2357 05bc 0C000000 		.4byte	.LFE50-.LFB50
 2358 05c0 01       		.uleb128 0x1
 2359 05c1 9C       		.byte	0x9c
 2360 05c2 E3050000 		.4byte	0x5e3
 2361 05c6 19       		.uleb128 0x19
 2362 05c7 C5020000 		.4byte	.LASF52
 2363 05cb 01       		.byte	0x1
 2364 05cc CF03     		.2byte	0x3cf
 2365 05ce 83000000 		.4byte	0x83
 2366 05d2 01       		.uleb128 0x1
 2367 05d3 50       		.byte	0x50
 2368 05d4 19       		.uleb128 0x19
 2369 05d5 0D030000 		.4byte	.LASF60
 2370 05d9 01       		.byte	0x1
 2371 05da CF03     		.2byte	0x3cf
 2372 05dc 6B000000 		.4byte	0x6b
 2373 05e0 01       		.uleb128 0x1
 2374 05e1 51       		.byte	0x51
 2375 05e2 00       		.byte	0
 2376 05e3 15       		.uleb128 0x15
 2377 05e4 13030000 		.4byte	.LASF68
 2378 05e8 01       		.byte	0x1
 2379 05e9 EC03     		.2byte	0x3ec
 2380 05eb 00000000 		.4byte	.LFB51
 2381 05ef 0C000000 		.4byte	.LFE51-.LFB51
 2382 05f3 01       		.uleb128 0x1
 2383 05f4 9C       		.byte	0x9c
 2384 05f5 16060000 		.4byte	0x616
 2385 05f9 19       		.uleb128 0x19
 2386 05fa C5020000 		.4byte	.LASF52
 2387 05fe 01       		.byte	0x1
 2388 05ff EC03     		.2byte	0x3ec
 2389 0601 83000000 		.4byte	0x83
 2390 0605 01       		.uleb128 0x1
 2391 0606 50       		.byte	0x50
 2392 0607 19       		.uleb128 0x19
 2393 0608 0D030000 		.4byte	.LASF60
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 94


 2394 060c 01       		.byte	0x1
 2395 060d EC03     		.2byte	0x3ec
 2396 060f 6B000000 		.4byte	0x6b
 2397 0613 01       		.uleb128 0x1
 2398 0614 51       		.byte	0x51
 2399 0615 00       		.byte	0
 2400 0616 15       		.uleb128 0x15
 2401 0617 7D040000 		.4byte	.LASF69
 2402 061b 01       		.byte	0x1
 2403 061c 0804     		.2byte	0x408
 2404 061e 00000000 		.4byte	.LFB52
 2405 0622 0C000000 		.4byte	.LFE52-.LFB52
 2406 0626 01       		.uleb128 0x1
 2407 0627 9C       		.byte	0x9c
 2408 0628 49060000 		.4byte	0x649
 2409 062c 19       		.uleb128 0x19
 2410 062d C5020000 		.4byte	.LASF52
 2411 0631 01       		.byte	0x1
 2412 0632 0804     		.2byte	0x408
 2413 0634 83000000 		.4byte	0x83
 2414 0638 01       		.uleb128 0x1
 2415 0639 50       		.byte	0x50
 2416 063a 19       		.uleb128 0x19
 2417 063b 0D030000 		.4byte	.LASF60
 2418 063f 01       		.byte	0x1
 2419 0640 0804     		.2byte	0x408
 2420 0642 6B000000 		.4byte	0x6b
 2421 0646 01       		.uleb128 0x1
 2422 0647 51       		.byte	0x51
 2423 0648 00       		.byte	0
 2424 0649 15       		.uleb128 0x15
 2425 064a E8070000 		.4byte	.LASF70
 2426 064e 01       		.byte	0x1
 2427 064f 2404     		.2byte	0x424
 2428 0651 00000000 		.4byte	.LFB53
 2429 0655 0C000000 		.4byte	.LFE53-.LFB53
 2430 0659 01       		.uleb128 0x1
 2431 065a 9C       		.byte	0x9c
 2432 065b 7E060000 		.4byte	0x67e
 2433 065f 18       		.uleb128 0x18
 2434 0660 2A050000 		.4byte	.LASF50
 2435 0664 01       		.byte	0x1
 2436 0665 2404     		.2byte	0x424
 2437 0667 83000000 		.4byte	0x83
 2438 066b AD010000 		.4byte	.LLST14
 2439 066f 19       		.uleb128 0x19
 2440 0670 0D030000 		.4byte	.LASF60
 2441 0674 01       		.byte	0x1
 2442 0675 2404     		.2byte	0x424
 2443 0677 6B000000 		.4byte	0x6b
 2444 067b 01       		.uleb128 0x1
 2445 067c 51       		.byte	0x51
 2446 067d 00       		.byte	0
 2447 067e 17       		.uleb128 0x17
 2448 067f 45060000 		.4byte	.LASF71
 2449 0683 01       		.byte	0x1
 2450 0684 5204     		.2byte	0x452
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 95


 2451 0686 83000000 		.4byte	0x83
 2452 068a 00000000 		.4byte	.LFB54
 2453 068e A8000000 		.4byte	.LFE54-.LFB54
 2454 0692 01       		.uleb128 0x1
 2455 0693 9C       		.byte	0x9c
 2456 0694 68070000 		.4byte	0x768
 2457 0698 18       		.uleb128 0x18
 2458 0699 2A050000 		.4byte	.LASF50
 2459 069d 01       		.byte	0x1
 2460 069e 5204     		.2byte	0x452
 2461 06a0 83000000 		.4byte	0x83
 2462 06a4 CE010000 		.4byte	.LLST15
 2463 06a8 1A       		.uleb128 0x1a
 2464 06a9 C5020000 		.4byte	.LASF52
 2465 06ad 01       		.byte	0x1
 2466 06ae 5404     		.2byte	0x454
 2467 06b0 6B000000 		.4byte	0x6b
 2468 06b4 16       		.uleb128 0x16
 2469 06b5 3C060000 		.4byte	.LASF72
 2470 06b9 01       		.byte	0x1
 2471 06ba 5504     		.2byte	0x455
 2472 06bc 6B000000 		.4byte	0x6b
 2473 06c0 05020000 		.4byte	.LLST16
 2474 06c4 1A       		.uleb128 0x1a
 2475 06c5 AC0A0000 		.4byte	.LASF73
 2476 06c9 01       		.byte	0x1
 2477 06ca 5604     		.2byte	0x456
 2478 06cc 6B000000 		.4byte	0x6b
 2479 06d0 16       		.uleb128 0x16
 2480 06d1 670A0000 		.4byte	.LASF74
 2481 06d5 01       		.byte	0x1
 2482 06d6 5804     		.2byte	0x458
 2483 06d8 6B000000 		.4byte	0x6b
 2484 06dc 18020000 		.4byte	.LLST17
 2485 06e0 16       		.uleb128 0x16
 2486 06e1 72040000 		.4byte	.LASF75
 2487 06e5 01       		.byte	0x1
 2488 06e6 5904     		.2byte	0x459
 2489 06e8 6B000000 		.4byte	0x6b
 2490 06ec 2B020000 		.4byte	.LLST18
 2491 06f0 10       		.uleb128 0x10
 2492 06f1 24000000 		.4byte	.LVL50
 2493 06f5 C70D0000 		.4byte	0xdc7
 2494 06f9 0D070000 		.4byte	0x70d
 2495 06fd 11       		.uleb128 0x11
 2496 06fe 01       		.uleb128 0x1
 2497 06ff 50       		.byte	0x50
 2498 0700 05       		.uleb128 0x5
 2499 0701 03       		.byte	0x3
 2500 0702 24000000 		.4byte	.LANCHOR0+36
 2501 0706 11       		.uleb128 0x11
 2502 0707 01       		.uleb128 0x1
 2503 0708 51       		.byte	0x51
 2504 0709 02       		.uleb128 0x2
 2505 070a 74       		.byte	0x74
 2506 070b 00       		.sleb128 0
 2507 070c 00       		.byte	0
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 96


 2508 070d 10       		.uleb128 0x10
 2509 070e 42000000 		.4byte	.LVL52
 2510 0712 D20D0000 		.4byte	0xdd2
 2511 0716 2C070000 		.4byte	0x72c
 2512 071a 11       		.uleb128 0x11
 2513 071b 01       		.uleb128 0x1
 2514 071c 50       		.byte	0x50
 2515 071d 02       		.uleb128 0x2
 2516 071e 76       		.byte	0x76
 2517 071f 24       		.sleb128 36
 2518 0720 11       		.uleb128 0x11
 2519 0721 01       		.uleb128 0x1
 2520 0722 51       		.byte	0x51
 2521 0723 02       		.uleb128 0x2
 2522 0724 74       		.byte	0x74
 2523 0725 00       		.sleb128 0
 2524 0726 11       		.uleb128 0x11
 2525 0727 01       		.uleb128 0x1
 2526 0728 52       		.byte	0x52
 2527 0729 01       		.uleb128 0x1
 2528 072a 30       		.byte	0x30
 2529 072b 00       		.byte	0
 2530 072c 10       		.uleb128 0x10
 2531 072d 72000000 		.4byte	.LVL55
 2532 0731 D20D0000 		.4byte	0xdd2
 2533 0735 4E070000 		.4byte	0x74e
 2534 0739 11       		.uleb128 0x11
 2535 073a 01       		.uleb128 0x1
 2536 073b 50       		.byte	0x50
 2537 073c 05       		.uleb128 0x5
 2538 073d 03       		.byte	0x3
 2539 073e 24000000 		.4byte	.LANCHOR0+36
 2540 0742 11       		.uleb128 0x11
 2541 0743 01       		.uleb128 0x1
 2542 0744 51       		.byte	0x51
 2543 0745 02       		.uleb128 0x2
 2544 0746 74       		.byte	0x74
 2545 0747 00       		.sleb128 0
 2546 0748 11       		.uleb128 0x11
 2547 0749 01       		.uleb128 0x1
 2548 074a 52       		.byte	0x52
 2549 074b 01       		.uleb128 0x1
 2550 074c 31       		.byte	0x31
 2551 074d 00       		.byte	0
 2552 074e 13       		.uleb128 0x13
 2553 074f 86000000 		.4byte	.LVL56
 2554 0753 C70D0000 		.4byte	0xdc7
 2555 0757 11       		.uleb128 0x11
 2556 0758 01       		.uleb128 0x1
 2557 0759 50       		.byte	0x50
 2558 075a 05       		.uleb128 0x5
 2559 075b 03       		.byte	0x3
 2560 075c 24000000 		.4byte	.LANCHOR0+36
 2561 0760 11       		.uleb128 0x11
 2562 0761 01       		.uleb128 0x1
 2563 0762 51       		.byte	0x51
 2564 0763 02       		.uleb128 0x2
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 97


 2565 0764 74       		.byte	0x74
 2566 0765 00       		.sleb128 0
 2567 0766 00       		.byte	0
 2568 0767 00       		.byte	0
 2569 0768 17       		.uleb128 0x17
 2570 0769 67010000 		.4byte	.LASF76
 2571 076d 01       		.byte	0x1
 2572 076e A404     		.2byte	0x4a4
 2573 0770 83000000 		.4byte	0x83
 2574 0774 00000000 		.4byte	.LFB55
 2575 0778 28000000 		.4byte	.LFE55-.LFB55
 2576 077c 01       		.uleb128 0x1
 2577 077d 9C       		.byte	0x9c
 2578 077e D3070000 		.4byte	0x7d3
 2579 0782 18       		.uleb128 0x18
 2580 0783 C5020000 		.4byte	.LASF52
 2581 0787 01       		.byte	0x1
 2582 0788 A404     		.2byte	0x4a4
 2583 078a 83000000 		.4byte	0x83
 2584 078e 49020000 		.4byte	.LLST19
 2585 0792 16       		.uleb128 0x16
 2586 0793 CF050000 		.4byte	.LASF77
 2587 0797 01       		.byte	0x1
 2588 0798 A604     		.2byte	0x4a6
 2589 079a 83000000 		.4byte	0x83
 2590 079e 6A020000 		.4byte	.LLST20
 2591 07a2 16       		.uleb128 0x16
 2592 07a3 8E000000 		.4byte	.LASF78
 2593 07a7 01       		.byte	0x1
 2594 07a8 A704     		.2byte	0x4a7
 2595 07aa 83000000 		.4byte	0x83
 2596 07ae 7D020000 		.4byte	.LLST21
 2597 07b2 16       		.uleb128 0x16
 2598 07b3 090B0000 		.4byte	.LASF79
 2599 07b7 01       		.byte	0x1
 2600 07b8 A804     		.2byte	0x4a8
 2601 07ba 83000000 		.4byte	0x83
 2602 07be B8020000 		.4byte	.LLST22
 2603 07c2 13       		.uleb128 0x13
 2604 07c3 14000000 		.4byte	.LVL65
 2605 07c7 7E060000 		.4byte	0x67e
 2606 07cb 11       		.uleb128 0x11
 2607 07cc 01       		.uleb128 0x1
 2608 07cd 50       		.byte	0x50
 2609 07ce 02       		.uleb128 0x2
 2610 07cf 74       		.byte	0x74
 2611 07d0 00       		.sleb128 0
 2612 07d1 00       		.byte	0
 2613 07d2 00       		.byte	0
 2614 07d3 17       		.uleb128 0x17
 2615 07d4 EF080000 		.4byte	.LASF80
 2616 07d8 01       		.byte	0x1
 2617 07d9 D204     		.2byte	0x4d2
 2618 07db 83000000 		.4byte	0x83
 2619 07df 00000000 		.4byte	.LFB56
 2620 07e3 1E000000 		.4byte	.LFE56-.LFB56
 2621 07e7 01       		.uleb128 0x1
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 98


 2622 07e8 9C       		.byte	0x9c
 2623 07e9 1C080000 		.4byte	0x81c
 2624 07ed 14       		.uleb128 0x14
 2625 07ee 6900     		.ascii	"i\000"
 2626 07f0 01       		.byte	0x1
 2627 07f1 D504     		.2byte	0x4d5
 2628 07f3 83000000 		.4byte	0x83
 2629 07f7 E2020000 		.4byte	.LLST23
 2630 07fb 16       		.uleb128 0x16
 2631 07fc 090B0000 		.4byte	.LASF79
 2632 0800 01       		.byte	0x1
 2633 0801 D604     		.2byte	0x4d6
 2634 0803 83000000 		.4byte	0x83
 2635 0807 01030000 		.4byte	.LLST24
 2636 080b 13       		.uleb128 0x13
 2637 080c 0E000000 		.4byte	.LVL73
 2638 0810 68070000 		.4byte	0x768
 2639 0814 11       		.uleb128 0x11
 2640 0815 01       		.uleb128 0x1
 2641 0816 50       		.byte	0x50
 2642 0817 02       		.uleb128 0x2
 2643 0818 74       		.byte	0x74
 2644 0819 00       		.sleb128 0
 2645 081a 00       		.byte	0
 2646 081b 00       		.byte	0
 2647 081c 15       		.uleb128 0x15
 2648 081d E00A0000 		.4byte	.LASF81
 2649 0821 01       		.byte	0x1
 2650 0822 0105     		.2byte	0x501
 2651 0824 00000000 		.4byte	.LFB57
 2652 0828 2C000000 		.4byte	.LFE57-.LFB57
 2653 082c 01       		.uleb128 0x1
 2654 082d 9C       		.byte	0x9c
 2655 082e 78080000 		.4byte	0x878
 2656 0832 18       		.uleb128 0x18
 2657 0833 C5020000 		.4byte	.LASF52
 2658 0837 01       		.byte	0x1
 2659 0838 0105     		.2byte	0x501
 2660 083a 83000000 		.4byte	0x83
 2661 083e 2B030000 		.4byte	.LLST25
 2662 0842 16       		.uleb128 0x16
 2663 0843 CF050000 		.4byte	.LASF77
 2664 0847 01       		.byte	0x1
 2665 0848 0405     		.2byte	0x504
 2666 084a 6B000000 		.4byte	0x6b
 2667 084e 4C030000 		.4byte	.LLST26
 2668 0852 16       		.uleb128 0x16
 2669 0853 8E000000 		.4byte	.LASF78
 2670 0857 01       		.byte	0x1
 2671 0858 0505     		.2byte	0x505
 2672 085a 6B000000 		.4byte	0x6b
 2673 085e 6A030000 		.4byte	.LLST27
 2674 0862 13       		.uleb128 0x13
 2675 0863 18000000 		.4byte	.LVL82
 2676 0867 D20D0000 		.4byte	0xdd2
 2677 086b 11       		.uleb128 0x11
 2678 086c 01       		.uleb128 0x1
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 99


 2679 086d 51       		.byte	0x51
 2680 086e 02       		.uleb128 0x2
 2681 086f 74       		.byte	0x74
 2682 0870 00       		.sleb128 0
 2683 0871 11       		.uleb128 0x11
 2684 0872 01       		.uleb128 0x1
 2685 0873 52       		.byte	0x52
 2686 0874 01       		.uleb128 0x1
 2687 0875 31       		.byte	0x31
 2688 0876 00       		.byte	0
 2689 0877 00       		.byte	0
 2690 0878 15       		.uleb128 0x15
 2691 0879 63050000 		.4byte	.LASF82
 2692 087d 01       		.byte	0x1
 2693 087e 2C05     		.2byte	0x52c
 2694 0880 00000000 		.4byte	.LFB58
 2695 0884 2C000000 		.4byte	.LFE58-.LFB58
 2696 0888 01       		.uleb128 0x1
 2697 0889 9C       		.byte	0x9c
 2698 088a D4080000 		.4byte	0x8d4
 2699 088e 18       		.uleb128 0x18
 2700 088f C5020000 		.4byte	.LASF52
 2701 0893 01       		.byte	0x1
 2702 0894 2C05     		.2byte	0x52c
 2703 0896 83000000 		.4byte	0x83
 2704 089a A5030000 		.4byte	.LLST28
 2705 089e 16       		.uleb128 0x16
 2706 089f CF050000 		.4byte	.LASF77
 2707 08a3 01       		.byte	0x1
 2708 08a4 2E05     		.2byte	0x52e
 2709 08a6 6B000000 		.4byte	0x6b
 2710 08aa C6030000 		.4byte	.LLST29
 2711 08ae 16       		.uleb128 0x16
 2712 08af 8E000000 		.4byte	.LASF78
 2713 08b3 01       		.byte	0x1
 2714 08b4 2F05     		.2byte	0x52f
 2715 08b6 6B000000 		.4byte	0x6b
 2716 08ba E4030000 		.4byte	.LLST30
 2717 08be 13       		.uleb128 0x13
 2718 08bf 18000000 		.4byte	.LVL91
 2719 08c3 D20D0000 		.4byte	0xdd2
 2720 08c7 11       		.uleb128 0x11
 2721 08c8 01       		.uleb128 0x1
 2722 08c9 51       		.byte	0x51
 2723 08ca 02       		.uleb128 0x2
 2724 08cb 74       		.byte	0x74
 2725 08cc 00       		.sleb128 0
 2726 08cd 11       		.uleb128 0x11
 2727 08ce 01       		.uleb128 0x1
 2728 08cf 52       		.byte	0x52
 2729 08d0 01       		.uleb128 0x1
 2730 08d1 30       		.byte	0x30
 2731 08d2 00       		.byte	0
 2732 08d3 00       		.byte	0
 2733 08d4 17       		.uleb128 0x17
 2734 08d5 D8050000 		.4byte	.LASF83
 2735 08d9 01       		.byte	0x1
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 100


 2736 08da 4809     		.2byte	0x948
 2737 08dc 77000000 		.4byte	0x77
 2738 08e0 00000000 		.4byte	.LFB59
 2739 08e4 1C000000 		.4byte	.LFE59-.LFB59
 2740 08e8 01       		.uleb128 0x1
 2741 08e9 9C       		.byte	0x9c
 2742 08ea 26090000 		.4byte	0x926
 2743 08ee 1B       		.uleb128 0x1b
 2744 08ef 783100   		.ascii	"x1\000"
 2745 08f2 01       		.byte	0x1
 2746 08f3 4809     		.2byte	0x948
 2747 08f5 77000000 		.4byte	0x77
 2748 08f9 1F040000 		.4byte	.LLST31
 2749 08fd 1B       		.uleb128 0x1b
 2750 08fe 783200   		.ascii	"x2\000"
 2751 0901 01       		.byte	0x1
 2752 0902 4809     		.2byte	0x948
 2753 0904 77000000 		.4byte	0x77
 2754 0908 4B040000 		.4byte	.LLST32
 2755 090c 1C       		.uleb128 0x1c
 2756 090d 783300   		.ascii	"x3\000"
 2757 0910 01       		.byte	0x1
 2758 0911 4809     		.2byte	0x948
 2759 0913 77000000 		.4byte	0x77
 2760 0917 01       		.uleb128 0x1
 2761 0918 52       		.byte	0x52
 2762 0919 1D       		.uleb128 0x1d
 2763 091a 746D7000 		.ascii	"tmp\000"
 2764 091e 01       		.byte	0x1
 2765 091f 4A09     		.2byte	0x94a
 2766 0921 77000000 		.4byte	0x77
 2767 0925 00       		.byte	0
 2768 0926 17       		.uleb128 0x17
 2769 0927 66060000 		.4byte	.LASF84
 2770 092b 01       		.byte	0x1
 2771 092c C009     		.2byte	0x9c0
 2772 092e 77000000 		.4byte	0x77
 2773 0932 00000000 		.4byte	.LFB60
 2774 0936 0C000000 		.4byte	.LFE60-.LFB60
 2775 093a 01       		.uleb128 0x1
 2776 093b 9C       		.byte	0x9c
 2777 093c 6F090000 		.4byte	0x96f
 2778 0940 1B       		.uleb128 0x1b
 2779 0941 783100   		.ascii	"x1\000"
 2780 0944 01       		.byte	0x1
 2781 0945 C009     		.2byte	0x9c0
 2782 0947 77000000 		.4byte	0x77
 2783 094b 69040000 		.4byte	.LLST33
 2784 094f 1B       		.uleb128 0x1b
 2785 0950 783200   		.ascii	"x2\000"
 2786 0953 01       		.byte	0x1
 2787 0954 C009     		.2byte	0x9c0
 2788 0956 77000000 		.4byte	0x77
 2789 095a 8A040000 		.4byte	.LLST34
 2790 095e 14       		.uleb128 0x14
 2791 095f 746D7000 		.ascii	"tmp\000"
 2792 0963 01       		.byte	0x1
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 101


 2793 0964 C209     		.2byte	0x9c2
 2794 0966 83000000 		.4byte	0x83
 2795 096a AB040000 		.4byte	.LLST35
 2796 096e 00       		.byte	0
 2797 096f 15       		.uleb128 0x15
 2798 0970 53030000 		.4byte	.LASF85
 2799 0974 01       		.byte	0x1
 2800 0975 6301     		.2byte	0x163
 2801 0977 00000000 		.4byte	.LFB36
 2802 097b 20010000 		.4byte	.LFE36-.LFB36
 2803 097f 01       		.uleb128 0x1
 2804 0980 9C       		.byte	0x9c
 2805 0981 290A0000 		.4byte	0xa29
 2806 0985 18       		.uleb128 0x18
 2807 0986 2A050000 		.4byte	.LASF50
 2808 098a 01       		.byte	0x1
 2809 098b 6301     		.2byte	0x163
 2810 098d 83000000 		.4byte	0x83
 2811 0991 BE040000 		.4byte	.LLST36
 2812 0995 16       		.uleb128 0x16
 2813 0996 3A040000 		.4byte	.LASF86
 2814 099a 01       		.byte	0x1
 2815 099b 6501     		.2byte	0x165
 2816 099d 83000000 		.4byte	0x83
 2817 09a1 1C050000 		.4byte	.LLST37
 2818 09a5 16       		.uleb128 0x16
 2819 09a6 24040000 		.4byte	.LASF87
 2820 09aa 01       		.byte	0x1
 2821 09ab 6601     		.2byte	0x166
 2822 09ad 83000000 		.4byte	0x83
 2823 09b1 50050000 		.4byte	.LLST38
 2824 09b5 16       		.uleb128 0x16
 2825 09b6 6B0B0000 		.4byte	.LASF88
 2826 09ba 01       		.byte	0x1
 2827 09bb 6701     		.2byte	0x167
 2828 09bd 77000000 		.4byte	0x77
 2829 09c1 A7050000 		.4byte	.LLST39
 2830 09c5 16       		.uleb128 0x16
 2831 09c6 96040000 		.4byte	.LASF89
 2832 09ca 01       		.byte	0x1
 2833 09cb 6801     		.2byte	0x168
 2834 09cd 77000000 		.4byte	0x77
 2835 09d1 C5050000 		.4byte	.LLST40
 2836 09d5 1A       		.uleb128 0x1a
 2837 09d6 C5020000 		.4byte	.LASF52
 2838 09da 01       		.byte	0x1
 2839 09db 6901     		.2byte	0x169
 2840 09dd 6B000000 		.4byte	0x6b
 2841 09e1 1E       		.uleb128 0x1e
 2842 09e2 030A0000 		.4byte	.LASF90
 2843 09e6 01       		.byte	0x1
 2844 09e7 6A01     		.2byte	0x16a
 2845 09e9 6B000000 		.4byte	0x6b
 2846 09ed 02       		.uleb128 0x2
 2847 09ee 91       		.byte	0x91
 2848 09ef 64       		.sleb128 -28
 2849 09f0 10       		.uleb128 0x10
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 102


 2850 09f1 2E000000 		.4byte	.LVL111
 2851 09f5 26090000 		.4byte	0x926
 2852 09f9 040A0000 		.4byte	0xa04
 2853 09fd 11       		.uleb128 0x11
 2854 09fe 01       		.uleb128 0x1
 2855 09ff 50       		.byte	0x50
 2856 0a00 02       		.uleb128 0x2
 2857 0a01 77       		.byte	0x77
 2858 0a02 00       		.sleb128 0
 2859 0a03 00       		.byte	0
 2860 0a04 10       		.uleb128 0x10
 2861 0a05 3E000000 		.4byte	.LVL114
 2862 0a09 DD0D0000 		.4byte	0xddd
 2863 0a0d 180A0000 		.4byte	0xa18
 2864 0a11 11       		.uleb128 0x11
 2865 0a12 01       		.uleb128 0x1
 2866 0a13 51       		.byte	0x51
 2867 0a14 02       		.uleb128 0x2
 2868 0a15 74       		.byte	0x74
 2869 0a16 00       		.sleb128 0
 2870 0a17 00       		.byte	0
 2871 0a18 13       		.uleb128 0x13
 2872 0a19 82000000 		.4byte	.LVL119
 2873 0a1d B9020000 		.4byte	0x2b9
 2874 0a21 11       		.uleb128 0x11
 2875 0a22 01       		.uleb128 0x1
 2876 0a23 50       		.byte	0x50
 2877 0a24 02       		.uleb128 0x2
 2878 0a25 74       		.byte	0x74
 2879 0a26 00       		.sleb128 0
 2880 0a27 00       		.byte	0
 2881 0a28 00       		.byte	0
 2882 0a29 15       		.uleb128 0x15
 2883 0a2a 90070000 		.4byte	.LASF91
 2884 0a2e 01       		.byte	0x1
 2885 0a2f 2302     		.2byte	0x223
 2886 0a31 00000000 		.4byte	.LFB37
 2887 0a35 10000000 		.4byte	.LFE37-.LFB37
 2888 0a39 01       		.uleb128 0x1
 2889 0a3a 9C       		.byte	0x9c
 2890 0a3b 740A0000 		.4byte	0xa74
 2891 0a3f 18       		.uleb128 0x18
 2892 0a40 2A050000 		.4byte	.LASF50
 2893 0a44 01       		.byte	0x1
 2894 0a45 2302     		.2byte	0x223
 2895 0a47 83000000 		.4byte	0x83
 2896 0a4b EE050000 		.4byte	.LLST41
 2897 0a4f 10       		.uleb128 0x10
 2898 0a50 08000000 		.4byte	.LVL137
 2899 0a54 E80D0000 		.4byte	0xde8
 2900 0a58 630A0000 		.4byte	0xa63
 2901 0a5c 11       		.uleb128 0x11
 2902 0a5d 01       		.uleb128 0x1
 2903 0a5e 50       		.byte	0x50
 2904 0a5f 02       		.uleb128 0x2
 2905 0a60 74       		.byte	0x74
 2906 0a61 00       		.sleb128 0
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 103


 2907 0a62 00       		.byte	0
 2908 0a63 13       		.uleb128 0x13
 2909 0a64 0E000000 		.4byte	.LVL138
 2910 0a68 6F090000 		.4byte	0x96f
 2911 0a6c 11       		.uleb128 0x11
 2912 0a6d 01       		.uleb128 0x1
 2913 0a6e 50       		.byte	0x50
 2914 0a6f 02       		.uleb128 0x2
 2915 0a70 74       		.byte	0x74
 2916 0a71 00       		.sleb128 0
 2917 0a72 00       		.byte	0
 2918 0a73 00       		.byte	0
 2919 0a74 15       		.uleb128 0x15
 2920 0a75 D1060000 		.4byte	.LASF92
 2921 0a79 01       		.byte	0x1
 2922 0a7a 5902     		.2byte	0x259
 2923 0a7c 00000000 		.4byte	.LFB38
 2924 0a80 24000000 		.4byte	.LFE38-.LFB38
 2925 0a84 01       		.uleb128 0x1
 2926 0a85 9C       		.byte	0x9c
 2927 0a86 CD0A0000 		.4byte	0xacd
 2928 0a8a 14       		.uleb128 0x14
 2929 0a8b 6900     		.ascii	"i\000"
 2930 0a8d 01       		.byte	0x1
 2931 0a8e 5B02     		.2byte	0x25b
 2932 0a90 83000000 		.4byte	0x83
 2933 0a94 1A060000 		.4byte	.LLST42
 2934 0a98 16       		.uleb128 0x16
 2935 0a99 7E000000 		.4byte	.LASF54
 2936 0a9d 01       		.byte	0x1
 2937 0a9e 5C02     		.2byte	0x25c
 2938 0aa0 83000000 		.4byte	0x83
 2939 0aa4 39060000 		.4byte	.LLST43
 2940 0aa8 10       		.uleb128 0x10
 2941 0aa9 0E000000 		.4byte	.LVL142
 2942 0aad C70D0000 		.4byte	0xdc7
 2943 0ab1 BC0A0000 		.4byte	0xabc
 2944 0ab5 11       		.uleb128 0x11
 2945 0ab6 01       		.uleb128 0x1
 2946 0ab7 51       		.byte	0x51
 2947 0ab8 02       		.uleb128 0x2
 2948 0ab9 74       		.byte	0x74
 2949 0aba 00       		.sleb128 0
 2950 0abb 00       		.byte	0
 2951 0abc 13       		.uleb128 0x13
 2952 0abd 18000000 		.4byte	.LVL144
 2953 0ac1 290A0000 		.4byte	0xa29
 2954 0ac5 11       		.uleb128 0x11
 2955 0ac6 01       		.uleb128 0x1
 2956 0ac7 50       		.byte	0x50
 2957 0ac8 02       		.uleb128 0x2
 2958 0ac9 74       		.byte	0x74
 2959 0aca 00       		.sleb128 0
 2960 0acb 00       		.byte	0
 2961 0acc 00       		.byte	0
 2962 0acd 15       		.uleb128 0x15
 2963 0ace EB020000 		.4byte	.LASF93
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 104


 2964 0ad2 01       		.byte	0x1
 2965 0ad3 8602     		.2byte	0x286
 2966 0ad5 00000000 		.4byte	.LFB39
 2967 0ad9 30000000 		.4byte	.LFE39-.LFB39
 2968 0add 01       		.uleb128 0x1
 2969 0ade 9C       		.byte	0x9c
 2970 0adf 660B0000 		.4byte	0xb66
 2971 0ae3 18       		.uleb128 0x18
 2972 0ae4 C5020000 		.4byte	.LASF52
 2973 0ae8 01       		.byte	0x1
 2974 0ae9 8602     		.2byte	0x286
 2975 0aeb 83000000 		.4byte	0x83
 2976 0aef 4C060000 		.4byte	.LLST44
 2977 0af3 16       		.uleb128 0x16
 2978 0af4 A6040000 		.4byte	.LASF94
 2979 0af8 01       		.byte	0x1
 2980 0af9 8802     		.2byte	0x288
 2981 0afb 83000000 		.4byte	0x83
 2982 0aff 6D060000 		.4byte	.LLST45
 2983 0b03 16       		.uleb128 0x16
 2984 0b04 9C080000 		.4byte	.LASF95
 2985 0b08 01       		.byte	0x1
 2986 0b09 8902     		.2byte	0x289
 2987 0b0b 83000000 		.4byte	0x83
 2988 0b0f AB060000 		.4byte	.LLST46
 2989 0b13 16       		.uleb128 0x16
 2990 0b14 2F080000 		.4byte	.LASF96
 2991 0b18 01       		.byte	0x1
 2992 0b19 8A02     		.2byte	0x28a
 2993 0b1b 83000000 		.4byte	0x83
 2994 0b1f D7060000 		.4byte	.LLST47
 2995 0b23 14       		.uleb128 0x14
 2996 0b24 6900     		.ascii	"i\000"
 2997 0b26 01       		.byte	0x1
 2998 0b27 8B02     		.2byte	0x28b
 2999 0b29 83000000 		.4byte	0x83
 3000 0b2d 12070000 		.4byte	.LLST48
 3001 0b31 16       		.uleb128 0x16
 3002 0b32 7E000000 		.4byte	.LASF54
 3003 0b36 01       		.byte	0x1
 3004 0b37 8C02     		.2byte	0x28c
 3005 0b39 83000000 		.4byte	0x83
 3006 0b3d 25070000 		.4byte	.LLST49
 3007 0b41 10       		.uleb128 0x10
 3008 0b42 16000000 		.4byte	.LVL152
 3009 0b46 C70D0000 		.4byte	0xdc7
 3010 0b4a 550B0000 		.4byte	0xb55
 3011 0b4e 11       		.uleb128 0x11
 3012 0b4f 01       		.uleb128 0x1
 3013 0b50 51       		.byte	0x51
 3014 0b51 02       		.uleb128 0x2
 3015 0b52 74       		.byte	0x74
 3016 0b53 00       		.sleb128 0
 3017 0b54 00       		.byte	0
 3018 0b55 13       		.uleb128 0x13
 3019 0b56 20000000 		.4byte	.LVL154
 3020 0b5a 290A0000 		.4byte	0xa29
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 105


 3021 0b5e 11       		.uleb128 0x11
 3022 0b5f 01       		.uleb128 0x1
 3023 0b60 50       		.byte	0x50
 3024 0b61 02       		.uleb128 0x2
 3025 0b62 74       		.byte	0x74
 3026 0b63 00       		.sleb128 0
 3027 0b64 00       		.byte	0
 3028 0b65 00       		.byte	0
 3029 0b66 17       		.uleb128 0x17
 3030 0b67 B4060000 		.4byte	.LASF97
 3031 0b6b 01       		.byte	0x1
 3032 0b6c A90A     		.2byte	0xaa9
 3033 0b6e 83000000 		.4byte	0x83
 3034 0b72 00000000 		.4byte	.LFB61
 3035 0b76 0C000000 		.4byte	.LFE61-.LFB61
 3036 0b7a 01       		.uleb128 0x1
 3037 0b7b 9C       		.byte	0x9c
 3038 0b7c 910B0000 		.4byte	0xb91
 3039 0b80 18       		.uleb128 0x18
 3040 0b81 2A050000 		.4byte	.LASF50
 3041 0b85 01       		.byte	0x1
 3042 0b86 A90A     		.2byte	0xaa9
 3043 0b88 83000000 		.4byte	0x83
 3044 0b8c 38070000 		.4byte	.LLST50
 3045 0b90 00       		.byte	0
 3046 0b91 17       		.uleb128 0x17
 3047 0b92 CC090000 		.4byte	.LASF98
 3048 0b96 01       		.byte	0x1
 3049 0b97 C30A     		.2byte	0xac3
 3050 0b99 6B000000 		.4byte	0x6b
 3051 0b9d 00000000 		.4byte	.LFB62
 3052 0ba1 0C000000 		.4byte	.LFE62-.LFB62
 3053 0ba5 01       		.uleb128 0x1
 3054 0ba6 9C       		.byte	0x9c
 3055 0ba7 BC0B0000 		.4byte	0xbbc
 3056 0bab 18       		.uleb128 0x18
 3057 0bac 2A050000 		.4byte	.LASF50
 3058 0bb0 01       		.byte	0x1
 3059 0bb1 C30A     		.2byte	0xac3
 3060 0bb3 83000000 		.4byte	0x83
 3061 0bb7 59070000 		.4byte	.LLST51
 3062 0bbb 00       		.byte	0
 3063 0bbc 17       		.uleb128 0x17
 3064 0bbd A8010000 		.4byte	.LASF99
 3065 0bc1 01       		.byte	0x1
 3066 0bc2 DD0A     		.2byte	0xadd
 3067 0bc4 6B000000 		.4byte	0x6b
 3068 0bc8 00000000 		.4byte	.LFB63
 3069 0bcc 0C000000 		.4byte	.LFE63-.LFB63
 3070 0bd0 01       		.uleb128 0x1
 3071 0bd1 9C       		.byte	0x9c
 3072 0bd2 E70B0000 		.4byte	0xbe7
 3073 0bd6 18       		.uleb128 0x18
 3074 0bd7 C5020000 		.4byte	.LASF52
 3075 0bdb 01       		.byte	0x1
 3076 0bdc DD0A     		.2byte	0xadd
 3077 0bde 83000000 		.4byte	0x83
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 106


 3078 0be2 7A070000 		.4byte	.LLST52
 3079 0be6 00       		.byte	0
 3080 0be7 1F       		.uleb128 0x1f
 3081 0be8 120A0000 		.4byte	.LASF100
 3082 0bec 01       		.byte	0x1
 3083 0bed F70A     		.2byte	0xaf7
 3084 0bef 00000000 		.4byte	.LFB64
 3085 0bf3 0C000000 		.4byte	.LFE64-.LFB64
 3086 0bf7 01       		.uleb128 0x1
 3087 0bf8 9C       		.byte	0x9c
 3088 0bf9 1F       		.uleb128 0x1f
 3089 0bfa E9040000 		.4byte	.LASF101
 3090 0bfe 01       		.byte	0x1
 3091 0bff 100B     		.2byte	0xb10
 3092 0c01 00000000 		.4byte	.LFB65
 3093 0c05 0C000000 		.4byte	.LFE65-.LFB65
 3094 0c09 01       		.uleb128 0x1
 3095 0c0a 9C       		.byte	0x9c
 3096 0c0b 20       		.uleb128 0x20
 3097 0c0c 6B000000 		.4byte	0x6b
 3098 0c10 1B0C0000 		.4byte	0xc1b
 3099 0c14 21       		.uleb128 0x21
 3100 0c15 A4000000 		.4byte	0xa4
 3101 0c19 05       		.byte	0x5
 3102 0c1a 00       		.byte	0
 3103 0c1b 22       		.uleb128 0x22
 3104 0c1c 27020000 		.4byte	.LASF102
 3105 0c20 01       		.byte	0x1
 3106 0c21 55       		.byte	0x55
 3107 0c22 0B0C0000 		.4byte	0xc0b
 3108 0c26 05       		.uleb128 0x5
 3109 0c27 03       		.byte	0x3
 3110 0c28 1C000000 		.4byte	CapSense_CSD_debounceCounter
 3111 0c2c 20       		.uleb128 0x20
 3112 0c2d 77000000 		.4byte	0x77
 3113 0c31 3C0C0000 		.4byte	0xc3c
 3114 0c35 21       		.uleb128 0x21
 3115 0c36 A4000000 		.4byte	0xa4
 3116 0c3a 04       		.byte	0x4
 3117 0c3b 00       		.byte	0
 3118 0c3c 23       		.uleb128 0x23
 3119 0c3d 33010000 		.4byte	.LASF103
 3120 0c41 01       		.byte	0x1
 3121 0c42 2C       		.byte	0x2c
 3122 0c43 2C0C0000 		.4byte	0xc2c
 3123 0c47 20       		.uleb128 0x20
 3124 0c48 6B000000 		.4byte	0x6b
 3125 0c4c 570C0000 		.4byte	0xc57
 3126 0c50 21       		.uleb128 0x21
 3127 0c51 A4000000 		.4byte	0xa4
 3128 0c55 00       		.byte	0
 3129 0c56 00       		.byte	0
 3130 0c57 23       		.uleb128 0x23
 3131 0c58 5C080000 		.4byte	.LASF104
 3132 0c5c 01       		.byte	0x1
 3133 0c5d 2D       		.byte	0x2d
 3134 0c5e 470C0000 		.4byte	0xc47
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 107


 3135 0c62 20       		.uleb128 0x20
 3136 0c63 DB010000 		.4byte	0x1db
 3137 0c67 720C0000 		.4byte	0xc72
 3138 0c6b 21       		.uleb128 0x21
 3139 0c6c A4000000 		.4byte	0xa4
 3140 0c70 04       		.byte	0x4
 3141 0c71 00       		.byte	0
 3142 0c72 23       		.uleb128 0x23
 3143 0c73 840A0000 		.4byte	.LASF105
 3144 0c77 01       		.byte	0x1
 3145 0c78 2E       		.byte	0x2e
 3146 0c79 7D0C0000 		.4byte	0xc7d
 3147 0c7d 08       		.uleb128 0x8
 3148 0c7e 620C0000 		.4byte	0xc62
 3149 0c82 24       		.uleb128 0x24
 3150 0c83 08040000 		.4byte	.LASF106
 3151 0c87 01       		.byte	0x1
 3152 0c88 34       		.byte	0x34
 3153 0c89 2C0C0000 		.4byte	0xc2c
 3154 0c8d 05       		.uleb128 0x5
 3155 0c8e 03       		.byte	0x3
 3156 0c8f 00000000 		.4byte	CapSense_CSD_sensorBaseline
 3157 0c93 20       		.uleb128 0x20
 3158 0c94 6B000000 		.4byte	0x6b
 3159 0c98 A30C0000 		.4byte	0xca3
 3160 0c9c 21       		.uleb128 0x21
 3161 0c9d A4000000 		.4byte	0xa4
 3162 0ca1 04       		.byte	0x4
 3163 0ca2 00       		.byte	0
 3164 0ca3 24       		.uleb128 0x24
 3165 0ca4 800B0000 		.4byte	.LASF107
 3166 0ca8 01       		.byte	0x1
 3167 0ca9 35       		.byte	0x35
 3168 0caa 930C0000 		.4byte	0xc93
 3169 0cae 05       		.uleb128 0x5
 3170 0caf 03       		.byte	0x3
 3171 0cb0 00000000 		.4byte	CapSense_CSD_sensorBaselineLow
 3172 0cb4 24       		.uleb128 0x24
 3173 0cb5 CE070000 		.4byte	.LASF108
 3174 0cb9 01       		.byte	0x1
 3175 0cba 36       		.byte	0x36
 3176 0cbb 930C0000 		.4byte	0xc93
 3177 0cbf 05       		.uleb128 0x5
 3178 0cc0 03       		.byte	0x3
 3179 0cc1 00000000 		.4byte	CapSense_CSD_sensorSignal
 3180 0cc5 24       		.uleb128 0x24
 3181 0cc6 F5060000 		.4byte	.LASF109
 3182 0cca 01       		.byte	0x1
 3183 0ccb 37       		.byte	0x37
 3184 0ccc 470C0000 		.4byte	0xc47
 3185 0cd0 05       		.uleb128 0x5
 3186 0cd1 03       		.byte	0x3
 3187 0cd2 00000000 		.4byte	CapSense_CSD_sensorOnMask
 3188 0cd6 24       		.uleb128 0x24
 3189 0cd7 8D020000 		.4byte	.LASF110
 3190 0cdb 01       		.byte	0x1
 3191 0cdc 39       		.byte	0x39
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 108


 3192 0cdd 930C0000 		.4byte	0xc93
 3193 0ce1 05       		.uleb128 0x5
 3194 0ce2 03       		.byte	0x3
 3195 0ce3 00000000 		.4byte	CapSense_CSD_lowBaselineResetCnt
 3196 0ce7 24       		.uleb128 0x24
 3197 0ce8 42000000 		.4byte	.LASF111
 3198 0cec 01       		.byte	0x1
 3199 0ced 3A       		.byte	0x3a
 3200 0cee 930C0000 		.4byte	0xc93
 3201 0cf2 05       		.uleb128 0x5
 3202 0cf3 03       		.byte	0x3
 3203 0cf4 00000000 		.4byte	CapSense_CSD_lowBaselineReset
 3204 0cf8 24       		.uleb128 0x24
 3205 0cf9 DF010000 		.4byte	.LASF112
 3206 0cfd 01       		.byte	0x1
 3207 0cfe 49       		.byte	0x49
 3208 0cff 930C0000 		.4byte	0xc93
 3209 0d03 05       		.uleb128 0x5
 3210 0d04 03       		.byte	0x3
 3211 0d05 00000000 		.4byte	CapSense_CSD_fingerThreshold
 3212 0d09 24       		.uleb128 0x24
 3213 0d0a F2050000 		.4byte	.LASF113
 3214 0d0e 01       		.byte	0x1
 3215 0d0f 4B       		.byte	0x4b
 3216 0d10 930C0000 		.4byte	0xc93
 3217 0d14 05       		.uleb128 0x5
 3218 0d15 03       		.byte	0x3
 3219 0d16 00000000 		.4byte	CapSense_CSD_noiseThreshold
 3220 0d1a 24       		.uleb128 0x24
 3221 0d1b 23070000 		.4byte	.LASF114
 3222 0d1f 01       		.byte	0x1
 3223 0d20 4D       		.byte	0x4d
 3224 0d21 930C0000 		.4byte	0xc93
 3225 0d25 05       		.uleb128 0x5
 3226 0d26 03       		.byte	0x3
 3227 0d27 00000000 		.4byte	CapSense_CSD_negativeNoiseThreshold
 3228 0d2b 24       		.uleb128 0x24
 3229 0d2c A8080000 		.4byte	.LASF115
 3230 0d30 01       		.byte	0x1
 3231 0d31 4F       		.byte	0x4f
 3232 0d32 930C0000 		.4byte	0xc93
 3233 0d36 05       		.uleb128 0x5
 3234 0d37 03       		.byte	0x3
 3235 0d38 00000000 		.4byte	CapSense_CSD_hysteresis
 3236 0d3c 24       		.uleb128 0x24
 3237 0d3d ED090000 		.4byte	.LASF116
 3238 0d41 01       		.byte	0x1
 3239 0d42 51       		.byte	0x51
 3240 0d43 930C0000 		.4byte	0xc93
 3241 0d47 05       		.uleb128 0x5
 3242 0d48 03       		.byte	0x3
 3243 0d49 00000000 		.4byte	CapSense_CSD_debounce
 3244 0d4d 24       		.uleb128 0x24
 3245 0d4e 09080000 		.4byte	.LASF117
 3246 0d52 01       		.byte	0x1
 3247 0d53 59       		.byte	0x59
 3248 0d54 5E0D0000 		.4byte	0xd5e
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 109


 3249 0d58 05       		.uleb128 0x5
 3250 0d59 03       		.byte	0x3
 3251 0d5a 00000000 		.4byte	CapSense_CSD_rawDataIndex
 3252 0d5e 08       		.uleb128 0x8
 3253 0d5f 620C0000 		.4byte	0xc62
 3254 0d63 24       		.uleb128 0x24
 3255 0d64 41050000 		.4byte	.LASF118
 3256 0d68 01       		.byte	0x1
 3257 0d69 61       		.byte	0x61
 3258 0d6a 740D0000 		.4byte	0xd74
 3259 0d6e 05       		.uleb128 0x5
 3260 0d6f 03       		.byte	0x3
 3261 0d70 00000000 		.4byte	CapSense_CSD_numberOfSensors
 3262 0d74 08       		.uleb128 0x8
 3263 0d75 620C0000 		.4byte	0xc62
 3264 0d79 24       		.uleb128 0x24
 3265 0d7a B2070000 		.4byte	.LASF119
 3266 0d7e 01       		.byte	0x1
 3267 0d7f 27       		.byte	0x27
 3268 0d80 2C0C0000 		.4byte	0xc2c
 3269 0d84 05       		.uleb128 0x5
 3270 0d85 03       		.byte	0x3
 3271 0d86 00000000 		.4byte	CapSense_CSD_rawFilterData1
 3272 0d8a 23       		.uleb128 0x23
 3273 0d8b 3A080000 		.4byte	.LASF120
 3274 0d8f 01       		.byte	0x1
 3275 0d90 41       		.byte	0x41
 3276 0d91 AE020000 		.4byte	0x2ae
 3277 0d95 24       		.uleb128 0x24
 3278 0d96 C1010000 		.4byte	.LASF121
 3279 0d9a 01       		.byte	0x1
 3280 0d9b 45       		.byte	0x45
 3281 0d9c 6B000000 		.4byte	0x6b
 3282 0da0 05       		.uleb128 0x5
 3283 0da1 03       		.byte	0x3
 3284 0da2 00000000 		.4byte	CapSense_CSD_enableRawFilters
 3285 0da6 25       		.uleb128 0x25
 3286 0da7 13090000 		.4byte	.LASF122
 3287 0dab 13090000 		.4byte	.LASF122
 3288 0daf 04       		.byte	0x4
 3289 0db0 A0       		.byte	0xa0
 3290 0db1 25       		.uleb128 0x25
 3291 0db2 77090000 		.4byte	.LASF123
 3292 0db6 77090000 		.4byte	.LASF123
 3293 0dba 04       		.byte	0x4
 3294 0dbb 9F       		.byte	0x9f
 3295 0dbc 25       		.uleb128 0x25
 3296 0dbd B7040000 		.4byte	.LASF124
 3297 0dc1 B7040000 		.4byte	.LASF124
 3298 0dc5 04       		.byte	0x4
 3299 0dc6 A2       		.byte	0xa2
 3300 0dc7 25       		.uleb128 0x25
 3301 0dc8 3A030000 		.4byte	.LASF125
 3302 0dcc 3A030000 		.4byte	.LASF125
 3303 0dd0 03       		.byte	0x3
 3304 0dd1 6A       		.byte	0x6a
 3305 0dd2 25       		.uleb128 0x25
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 110


 3306 0dd3 FD000000 		.4byte	.LASF126
 3307 0dd7 FD000000 		.4byte	.LASF126
 3308 0ddb 03       		.byte	0x3
 3309 0ddc 6B       		.byte	0x6b
 3310 0ddd 25       		.uleb128 0x25
 3311 0dde 0C050000 		.4byte	.LASF127
 3312 0de2 0C050000 		.4byte	.LASF127
 3313 0de6 03       		.byte	0x3
 3314 0de7 81       		.byte	0x81
 3315 0de8 25       		.uleb128 0x25
 3316 0de9 60000000 		.4byte	.LASF128
 3317 0ded 60000000 		.4byte	.LASF128
 3318 0df1 01       		.byte	0x1
 3319 0df2 17       		.byte	0x17
 3320 0df3 00       		.byte	0
 3321              		.section	.debug_abbrev,"",%progbits
 3322              	.Ldebug_abbrev0:
 3323 0000 01       		.uleb128 0x1
 3324 0001 11       		.uleb128 0x11
 3325 0002 01       		.byte	0x1
 3326 0003 25       		.uleb128 0x25
 3327 0004 0E       		.uleb128 0xe
 3328 0005 13       		.uleb128 0x13
 3329 0006 0B       		.uleb128 0xb
 3330 0007 03       		.uleb128 0x3
 3331 0008 0E       		.uleb128 0xe
 3332 0009 1B       		.uleb128 0x1b
 3333 000a 0E       		.uleb128 0xe
 3334 000b 55       		.uleb128 0x55
 3335 000c 17       		.uleb128 0x17
 3336 000d 11       		.uleb128 0x11
 3337 000e 01       		.uleb128 0x1
 3338 000f 10       		.uleb128 0x10
 3339 0010 17       		.uleb128 0x17
 3340 0011 00       		.byte	0
 3341 0012 00       		.byte	0
 3342 0013 02       		.uleb128 0x2
 3343 0014 24       		.uleb128 0x24
 3344 0015 00       		.byte	0
 3345 0016 0B       		.uleb128 0xb
 3346 0017 0B       		.uleb128 0xb
 3347 0018 3E       		.uleb128 0x3e
 3348 0019 0B       		.uleb128 0xb
 3349 001a 03       		.uleb128 0x3
 3350 001b 0E       		.uleb128 0xe
 3351 001c 00       		.byte	0
 3352 001d 00       		.byte	0
 3353 001e 03       		.uleb128 0x3
 3354 001f 24       		.uleb128 0x24
 3355 0020 00       		.byte	0
 3356 0021 0B       		.uleb128 0xb
 3357 0022 0B       		.uleb128 0xb
 3358 0023 3E       		.uleb128 0x3e
 3359 0024 0B       		.uleb128 0xb
 3360 0025 03       		.uleb128 0x3
 3361 0026 08       		.uleb128 0x8
 3362 0027 00       		.byte	0
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 111


 3363 0028 00       		.byte	0
 3364 0029 04       		.uleb128 0x4
 3365 002a 16       		.uleb128 0x16
 3366 002b 00       		.byte	0
 3367 002c 03       		.uleb128 0x3
 3368 002d 0E       		.uleb128 0xe
 3369 002e 3A       		.uleb128 0x3a
 3370 002f 0B       		.uleb128 0xb
 3371 0030 3B       		.uleb128 0x3b
 3372 0031 05       		.uleb128 0x5
 3373 0032 49       		.uleb128 0x49
 3374 0033 13       		.uleb128 0x13
 3375 0034 00       		.byte	0
 3376 0035 00       		.byte	0
 3377 0036 05       		.uleb128 0x5
 3378 0037 13       		.uleb128 0x13
 3379 0038 01       		.byte	0x1
 3380 0039 0B       		.uleb128 0xb
 3381 003a 0B       		.uleb128 0xb
 3382 003b 3A       		.uleb128 0x3a
 3383 003c 0B       		.uleb128 0xb
 3384 003d 3B       		.uleb128 0x3b
 3385 003e 0B       		.uleb128 0xb
 3386 003f 01       		.uleb128 0x1
 3387 0040 13       		.uleb128 0x13
 3388 0041 00       		.byte	0
 3389 0042 00       		.byte	0
 3390 0043 06       		.uleb128 0x6
 3391 0044 0D       		.uleb128 0xd
 3392 0045 00       		.byte	0
 3393 0046 03       		.uleb128 0x3
 3394 0047 0E       		.uleb128 0xe
 3395 0048 3A       		.uleb128 0x3a
 3396 0049 0B       		.uleb128 0xb
 3397 004a 3B       		.uleb128 0x3b
 3398 004b 0B       		.uleb128 0xb
 3399 004c 49       		.uleb128 0x49
 3400 004d 13       		.uleb128 0x13
 3401 004e 38       		.uleb128 0x38
 3402 004f 0B       		.uleb128 0xb
 3403 0050 00       		.byte	0
 3404 0051 00       		.byte	0
 3405 0052 07       		.uleb128 0x7
 3406 0053 0F       		.uleb128 0xf
 3407 0054 00       		.byte	0
 3408 0055 0B       		.uleb128 0xb
 3409 0056 0B       		.uleb128 0xb
 3410 0057 49       		.uleb128 0x49
 3411 0058 13       		.uleb128 0x13
 3412 0059 00       		.byte	0
 3413 005a 00       		.byte	0
 3414 005b 08       		.uleb128 0x8
 3415 005c 26       		.uleb128 0x26
 3416 005d 00       		.byte	0
 3417 005e 49       		.uleb128 0x49
 3418 005f 13       		.uleb128 0x13
 3419 0060 00       		.byte	0
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 112


 3420 0061 00       		.byte	0
 3421 0062 09       		.uleb128 0x9
 3422 0063 15       		.uleb128 0x15
 3423 0064 01       		.byte	0x1
 3424 0065 27       		.uleb128 0x27
 3425 0066 19       		.uleb128 0x19
 3426 0067 49       		.uleb128 0x49
 3427 0068 13       		.uleb128 0x13
 3428 0069 01       		.uleb128 0x1
 3429 006a 13       		.uleb128 0x13
 3430 006b 00       		.byte	0
 3431 006c 00       		.byte	0
 3432 006d 0A       		.uleb128 0xa
 3433 006e 05       		.uleb128 0x5
 3434 006f 00       		.byte	0
 3435 0070 49       		.uleb128 0x49
 3436 0071 13       		.uleb128 0x13
 3437 0072 00       		.byte	0
 3438 0073 00       		.byte	0
 3439 0074 0B       		.uleb128 0xb
 3440 0075 15       		.uleb128 0x15
 3441 0076 01       		.byte	0x1
 3442 0077 27       		.uleb128 0x27
 3443 0078 19       		.uleb128 0x19
 3444 0079 01       		.uleb128 0x1
 3445 007a 13       		.uleb128 0x13
 3446 007b 00       		.byte	0
 3447 007c 00       		.byte	0
 3448 007d 0C       		.uleb128 0xc
 3449 007e 16       		.uleb128 0x16
 3450 007f 00       		.byte	0
 3451 0080 03       		.uleb128 0x3
 3452 0081 0E       		.uleb128 0xe
 3453 0082 3A       		.uleb128 0x3a
 3454 0083 0B       		.uleb128 0xb
 3455 0084 3B       		.uleb128 0x3b
 3456 0085 0B       		.uleb128 0xb
 3457 0086 49       		.uleb128 0x49
 3458 0087 13       		.uleb128 0x13
 3459 0088 00       		.byte	0
 3460 0089 00       		.byte	0
 3461 008a 0D       		.uleb128 0xd
 3462 008b 2E       		.uleb128 0x2e
 3463 008c 01       		.byte	0x1
 3464 008d 3F       		.uleb128 0x3f
 3465 008e 19       		.uleb128 0x19
 3466 008f 03       		.uleb128 0x3
 3467 0090 0E       		.uleb128 0xe
 3468 0091 3A       		.uleb128 0x3a
 3469 0092 0B       		.uleb128 0xb
 3470 0093 3B       		.uleb128 0x3b
 3471 0094 0B       		.uleb128 0xb
 3472 0095 27       		.uleb128 0x27
 3473 0096 19       		.uleb128 0x19
 3474 0097 11       		.uleb128 0x11
 3475 0098 01       		.uleb128 0x1
 3476 0099 12       		.uleb128 0x12
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 113


 3477 009a 06       		.uleb128 0x6
 3478 009b 40       		.uleb128 0x40
 3479 009c 18       		.uleb128 0x18
 3480 009d 9742     		.uleb128 0x2117
 3481 009f 19       		.uleb128 0x19
 3482 00a0 01       		.uleb128 0x1
 3483 00a1 13       		.uleb128 0x13
 3484 00a2 00       		.byte	0
 3485 00a3 00       		.byte	0
 3486 00a4 0E       		.uleb128 0xe
 3487 00a5 05       		.uleb128 0x5
 3488 00a6 00       		.byte	0
 3489 00a7 03       		.uleb128 0x3
 3490 00a8 0E       		.uleb128 0xe
 3491 00a9 3A       		.uleb128 0x3a
 3492 00aa 0B       		.uleb128 0xb
 3493 00ab 3B       		.uleb128 0x3b
 3494 00ac 0B       		.uleb128 0xb
 3495 00ad 49       		.uleb128 0x49
 3496 00ae 13       		.uleb128 0x13
 3497 00af 02       		.uleb128 0x2
 3498 00b0 17       		.uleb128 0x17
 3499 00b1 00       		.byte	0
 3500 00b2 00       		.byte	0
 3501 00b3 0F       		.uleb128 0xf
 3502 00b4 34       		.uleb128 0x34
 3503 00b5 00       		.byte	0
 3504 00b6 03       		.uleb128 0x3
 3505 00b7 0E       		.uleb128 0xe
 3506 00b8 3A       		.uleb128 0x3a
 3507 00b9 0B       		.uleb128 0xb
 3508 00ba 3B       		.uleb128 0x3b
 3509 00bb 0B       		.uleb128 0xb
 3510 00bc 49       		.uleb128 0x49
 3511 00bd 13       		.uleb128 0x13
 3512 00be 02       		.uleb128 0x2
 3513 00bf 17       		.uleb128 0x17
 3514 00c0 00       		.byte	0
 3515 00c1 00       		.byte	0
 3516 00c2 10       		.uleb128 0x10
 3517 00c3 898201   		.uleb128 0x4109
 3518 00c6 01       		.byte	0x1
 3519 00c7 11       		.uleb128 0x11
 3520 00c8 01       		.uleb128 0x1
 3521 00c9 31       		.uleb128 0x31
 3522 00ca 13       		.uleb128 0x13
 3523 00cb 01       		.uleb128 0x1
 3524 00cc 13       		.uleb128 0x13
 3525 00cd 00       		.byte	0
 3526 00ce 00       		.byte	0
 3527 00cf 11       		.uleb128 0x11
 3528 00d0 8A8201   		.uleb128 0x410a
 3529 00d3 00       		.byte	0
 3530 00d4 02       		.uleb128 0x2
 3531 00d5 18       		.uleb128 0x18
 3532 00d6 9142     		.uleb128 0x2111
 3533 00d8 18       		.uleb128 0x18
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 114


 3534 00d9 00       		.byte	0
 3535 00da 00       		.byte	0
 3536 00db 12       		.uleb128 0x12
 3537 00dc 898201   		.uleb128 0x4109
 3538 00df 00       		.byte	0
 3539 00e0 11       		.uleb128 0x11
 3540 00e1 01       		.uleb128 0x1
 3541 00e2 31       		.uleb128 0x31
 3542 00e3 13       		.uleb128 0x13
 3543 00e4 00       		.byte	0
 3544 00e5 00       		.byte	0
 3545 00e6 13       		.uleb128 0x13
 3546 00e7 898201   		.uleb128 0x4109
 3547 00ea 01       		.byte	0x1
 3548 00eb 11       		.uleb128 0x11
 3549 00ec 01       		.uleb128 0x1
 3550 00ed 31       		.uleb128 0x31
 3551 00ee 13       		.uleb128 0x13
 3552 00ef 00       		.byte	0
 3553 00f0 00       		.byte	0
 3554 00f1 14       		.uleb128 0x14
 3555 00f2 34       		.uleb128 0x34
 3556 00f3 00       		.byte	0
 3557 00f4 03       		.uleb128 0x3
 3558 00f5 08       		.uleb128 0x8
 3559 00f6 3A       		.uleb128 0x3a
 3560 00f7 0B       		.uleb128 0xb
 3561 00f8 3B       		.uleb128 0x3b
 3562 00f9 05       		.uleb128 0x5
 3563 00fa 49       		.uleb128 0x49
 3564 00fb 13       		.uleb128 0x13
 3565 00fc 02       		.uleb128 0x2
 3566 00fd 17       		.uleb128 0x17
 3567 00fe 00       		.byte	0
 3568 00ff 00       		.byte	0
 3569 0100 15       		.uleb128 0x15
 3570 0101 2E       		.uleb128 0x2e
 3571 0102 01       		.byte	0x1
 3572 0103 3F       		.uleb128 0x3f
 3573 0104 19       		.uleb128 0x19
 3574 0105 03       		.uleb128 0x3
 3575 0106 0E       		.uleb128 0xe
 3576 0107 3A       		.uleb128 0x3a
 3577 0108 0B       		.uleb128 0xb
 3578 0109 3B       		.uleb128 0x3b
 3579 010a 05       		.uleb128 0x5
 3580 010b 27       		.uleb128 0x27
 3581 010c 19       		.uleb128 0x19
 3582 010d 11       		.uleb128 0x11
 3583 010e 01       		.uleb128 0x1
 3584 010f 12       		.uleb128 0x12
 3585 0110 06       		.uleb128 0x6
 3586 0111 40       		.uleb128 0x40
 3587 0112 18       		.uleb128 0x18
 3588 0113 9742     		.uleb128 0x2117
 3589 0115 19       		.uleb128 0x19
 3590 0116 01       		.uleb128 0x1
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 115


 3591 0117 13       		.uleb128 0x13
 3592 0118 00       		.byte	0
 3593 0119 00       		.byte	0
 3594 011a 16       		.uleb128 0x16
 3595 011b 34       		.uleb128 0x34
 3596 011c 00       		.byte	0
 3597 011d 03       		.uleb128 0x3
 3598 011e 0E       		.uleb128 0xe
 3599 011f 3A       		.uleb128 0x3a
 3600 0120 0B       		.uleb128 0xb
 3601 0121 3B       		.uleb128 0x3b
 3602 0122 05       		.uleb128 0x5
 3603 0123 49       		.uleb128 0x49
 3604 0124 13       		.uleb128 0x13
 3605 0125 02       		.uleb128 0x2
 3606 0126 17       		.uleb128 0x17
 3607 0127 00       		.byte	0
 3608 0128 00       		.byte	0
 3609 0129 17       		.uleb128 0x17
 3610 012a 2E       		.uleb128 0x2e
 3611 012b 01       		.byte	0x1
 3612 012c 3F       		.uleb128 0x3f
 3613 012d 19       		.uleb128 0x19
 3614 012e 03       		.uleb128 0x3
 3615 012f 0E       		.uleb128 0xe
 3616 0130 3A       		.uleb128 0x3a
 3617 0131 0B       		.uleb128 0xb
 3618 0132 3B       		.uleb128 0x3b
 3619 0133 05       		.uleb128 0x5
 3620 0134 27       		.uleb128 0x27
 3621 0135 19       		.uleb128 0x19
 3622 0136 49       		.uleb128 0x49
 3623 0137 13       		.uleb128 0x13
 3624 0138 11       		.uleb128 0x11
 3625 0139 01       		.uleb128 0x1
 3626 013a 12       		.uleb128 0x12
 3627 013b 06       		.uleb128 0x6
 3628 013c 40       		.uleb128 0x40
 3629 013d 18       		.uleb128 0x18
 3630 013e 9742     		.uleb128 0x2117
 3631 0140 19       		.uleb128 0x19
 3632 0141 01       		.uleb128 0x1
 3633 0142 13       		.uleb128 0x13
 3634 0143 00       		.byte	0
 3635 0144 00       		.byte	0
 3636 0145 18       		.uleb128 0x18
 3637 0146 05       		.uleb128 0x5
 3638 0147 00       		.byte	0
 3639 0148 03       		.uleb128 0x3
 3640 0149 0E       		.uleb128 0xe
 3641 014a 3A       		.uleb128 0x3a
 3642 014b 0B       		.uleb128 0xb
 3643 014c 3B       		.uleb128 0x3b
 3644 014d 05       		.uleb128 0x5
 3645 014e 49       		.uleb128 0x49
 3646 014f 13       		.uleb128 0x13
 3647 0150 02       		.uleb128 0x2
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 116


 3648 0151 17       		.uleb128 0x17
 3649 0152 00       		.byte	0
 3650 0153 00       		.byte	0
 3651 0154 19       		.uleb128 0x19
 3652 0155 05       		.uleb128 0x5
 3653 0156 00       		.byte	0
 3654 0157 03       		.uleb128 0x3
 3655 0158 0E       		.uleb128 0xe
 3656 0159 3A       		.uleb128 0x3a
 3657 015a 0B       		.uleb128 0xb
 3658 015b 3B       		.uleb128 0x3b
 3659 015c 05       		.uleb128 0x5
 3660 015d 49       		.uleb128 0x49
 3661 015e 13       		.uleb128 0x13
 3662 015f 02       		.uleb128 0x2
 3663 0160 18       		.uleb128 0x18
 3664 0161 00       		.byte	0
 3665 0162 00       		.byte	0
 3666 0163 1A       		.uleb128 0x1a
 3667 0164 34       		.uleb128 0x34
 3668 0165 00       		.byte	0
 3669 0166 03       		.uleb128 0x3
 3670 0167 0E       		.uleb128 0xe
 3671 0168 3A       		.uleb128 0x3a
 3672 0169 0B       		.uleb128 0xb
 3673 016a 3B       		.uleb128 0x3b
 3674 016b 05       		.uleb128 0x5
 3675 016c 49       		.uleb128 0x49
 3676 016d 13       		.uleb128 0x13
 3677 016e 00       		.byte	0
 3678 016f 00       		.byte	0
 3679 0170 1B       		.uleb128 0x1b
 3680 0171 05       		.uleb128 0x5
 3681 0172 00       		.byte	0
 3682 0173 03       		.uleb128 0x3
 3683 0174 08       		.uleb128 0x8
 3684 0175 3A       		.uleb128 0x3a
 3685 0176 0B       		.uleb128 0xb
 3686 0177 3B       		.uleb128 0x3b
 3687 0178 05       		.uleb128 0x5
 3688 0179 49       		.uleb128 0x49
 3689 017a 13       		.uleb128 0x13
 3690 017b 02       		.uleb128 0x2
 3691 017c 17       		.uleb128 0x17
 3692 017d 00       		.byte	0
 3693 017e 00       		.byte	0
 3694 017f 1C       		.uleb128 0x1c
 3695 0180 05       		.uleb128 0x5
 3696 0181 00       		.byte	0
 3697 0182 03       		.uleb128 0x3
 3698 0183 08       		.uleb128 0x8
 3699 0184 3A       		.uleb128 0x3a
 3700 0185 0B       		.uleb128 0xb
 3701 0186 3B       		.uleb128 0x3b
 3702 0187 05       		.uleb128 0x5
 3703 0188 49       		.uleb128 0x49
 3704 0189 13       		.uleb128 0x13
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 117


 3705 018a 02       		.uleb128 0x2
 3706 018b 18       		.uleb128 0x18
 3707 018c 00       		.byte	0
 3708 018d 00       		.byte	0
 3709 018e 1D       		.uleb128 0x1d
 3710 018f 34       		.uleb128 0x34
 3711 0190 00       		.byte	0
 3712 0191 03       		.uleb128 0x3
 3713 0192 08       		.uleb128 0x8
 3714 0193 3A       		.uleb128 0x3a
 3715 0194 0B       		.uleb128 0xb
 3716 0195 3B       		.uleb128 0x3b
 3717 0196 05       		.uleb128 0x5
 3718 0197 49       		.uleb128 0x49
 3719 0198 13       		.uleb128 0x13
 3720 0199 00       		.byte	0
 3721 019a 00       		.byte	0
 3722 019b 1E       		.uleb128 0x1e
 3723 019c 34       		.uleb128 0x34
 3724 019d 00       		.byte	0
 3725 019e 03       		.uleb128 0x3
 3726 019f 0E       		.uleb128 0xe
 3727 01a0 3A       		.uleb128 0x3a
 3728 01a1 0B       		.uleb128 0xb
 3729 01a2 3B       		.uleb128 0x3b
 3730 01a3 05       		.uleb128 0x5
 3731 01a4 49       		.uleb128 0x49
 3732 01a5 13       		.uleb128 0x13
 3733 01a6 02       		.uleb128 0x2
 3734 01a7 18       		.uleb128 0x18
 3735 01a8 00       		.byte	0
 3736 01a9 00       		.byte	0
 3737 01aa 1F       		.uleb128 0x1f
 3738 01ab 2E       		.uleb128 0x2e
 3739 01ac 00       		.byte	0
 3740 01ad 3F       		.uleb128 0x3f
 3741 01ae 19       		.uleb128 0x19
 3742 01af 03       		.uleb128 0x3
 3743 01b0 0E       		.uleb128 0xe
 3744 01b1 3A       		.uleb128 0x3a
 3745 01b2 0B       		.uleb128 0xb
 3746 01b3 3B       		.uleb128 0x3b
 3747 01b4 05       		.uleb128 0x5
 3748 01b5 27       		.uleb128 0x27
 3749 01b6 19       		.uleb128 0x19
 3750 01b7 11       		.uleb128 0x11
 3751 01b8 01       		.uleb128 0x1
 3752 01b9 12       		.uleb128 0x12
 3753 01ba 06       		.uleb128 0x6
 3754 01bb 40       		.uleb128 0x40
 3755 01bc 18       		.uleb128 0x18
 3756 01bd 9742     		.uleb128 0x2117
 3757 01bf 19       		.uleb128 0x19
 3758 01c0 00       		.byte	0
 3759 01c1 00       		.byte	0
 3760 01c2 20       		.uleb128 0x20
 3761 01c3 01       		.uleb128 0x1
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 118


 3762 01c4 01       		.byte	0x1
 3763 01c5 49       		.uleb128 0x49
 3764 01c6 13       		.uleb128 0x13
 3765 01c7 01       		.uleb128 0x1
 3766 01c8 13       		.uleb128 0x13
 3767 01c9 00       		.byte	0
 3768 01ca 00       		.byte	0
 3769 01cb 21       		.uleb128 0x21
 3770 01cc 21       		.uleb128 0x21
 3771 01cd 00       		.byte	0
 3772 01ce 49       		.uleb128 0x49
 3773 01cf 13       		.uleb128 0x13
 3774 01d0 2F       		.uleb128 0x2f
 3775 01d1 0B       		.uleb128 0xb
 3776 01d2 00       		.byte	0
 3777 01d3 00       		.byte	0
 3778 01d4 22       		.uleb128 0x22
 3779 01d5 34       		.uleb128 0x34
 3780 01d6 00       		.byte	0
 3781 01d7 03       		.uleb128 0x3
 3782 01d8 0E       		.uleb128 0xe
 3783 01d9 3A       		.uleb128 0x3a
 3784 01da 0B       		.uleb128 0xb
 3785 01db 3B       		.uleb128 0x3b
 3786 01dc 0B       		.uleb128 0xb
 3787 01dd 49       		.uleb128 0x49
 3788 01de 13       		.uleb128 0x13
 3789 01df 02       		.uleb128 0x2
 3790 01e0 18       		.uleb128 0x18
 3791 01e1 00       		.byte	0
 3792 01e2 00       		.byte	0
 3793 01e3 23       		.uleb128 0x23
 3794 01e4 34       		.uleb128 0x34
 3795 01e5 00       		.byte	0
 3796 01e6 03       		.uleb128 0x3
 3797 01e7 0E       		.uleb128 0xe
 3798 01e8 3A       		.uleb128 0x3a
 3799 01e9 0B       		.uleb128 0xb
 3800 01ea 3B       		.uleb128 0x3b
 3801 01eb 0B       		.uleb128 0xb
 3802 01ec 49       		.uleb128 0x49
 3803 01ed 13       		.uleb128 0x13
 3804 01ee 3F       		.uleb128 0x3f
 3805 01ef 19       		.uleb128 0x19
 3806 01f0 3C       		.uleb128 0x3c
 3807 01f1 19       		.uleb128 0x19
 3808 01f2 00       		.byte	0
 3809 01f3 00       		.byte	0
 3810 01f4 24       		.uleb128 0x24
 3811 01f5 34       		.uleb128 0x34
 3812 01f6 00       		.byte	0
 3813 01f7 03       		.uleb128 0x3
 3814 01f8 0E       		.uleb128 0xe
 3815 01f9 3A       		.uleb128 0x3a
 3816 01fa 0B       		.uleb128 0xb
 3817 01fb 3B       		.uleb128 0x3b
 3818 01fc 0B       		.uleb128 0xb
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 119


 3819 01fd 49       		.uleb128 0x49
 3820 01fe 13       		.uleb128 0x13
 3821 01ff 3F       		.uleb128 0x3f
 3822 0200 19       		.uleb128 0x19
 3823 0201 02       		.uleb128 0x2
 3824 0202 18       		.uleb128 0x18
 3825 0203 00       		.byte	0
 3826 0204 00       		.byte	0
 3827 0205 25       		.uleb128 0x25
 3828 0206 2E       		.uleb128 0x2e
 3829 0207 00       		.byte	0
 3830 0208 3F       		.uleb128 0x3f
 3831 0209 19       		.uleb128 0x19
 3832 020a 3C       		.uleb128 0x3c
 3833 020b 19       		.uleb128 0x19
 3834 020c 6E       		.uleb128 0x6e
 3835 020d 0E       		.uleb128 0xe
 3836 020e 03       		.uleb128 0x3
 3837 020f 0E       		.uleb128 0xe
 3838 0210 3A       		.uleb128 0x3a
 3839 0211 0B       		.uleb128 0xb
 3840 0212 3B       		.uleb128 0x3b
 3841 0213 0B       		.uleb128 0xb
 3842 0214 00       		.byte	0
 3843 0215 00       		.byte	0
 3844 0216 00       		.byte	0
 3845              		.section	.debug_loc,"",%progbits
 3846              	.Ldebug_loc0:
 3847              	.LLST0:
 3848 0000 00000000 		.4byte	.LVL0
 3849 0004 12000000 		.4byte	.LVL2
 3850 0008 0100     		.2byte	0x1
 3851 000a 50       		.byte	0x50
 3852 000b 12000000 		.4byte	.LVL2
 3853 000f 3C000000 		.4byte	.LFE32
 3854 0013 0400     		.2byte	0x4
 3855 0015 F3       		.byte	0xf3
 3856 0016 01       		.uleb128 0x1
 3857 0017 50       		.byte	0x50
 3858 0018 9F       		.byte	0x9f
 3859 0019 00000000 		.4byte	0
 3860 001d 00000000 		.4byte	0
 3861              	.LLST1:
 3862 0021 06000000 		.4byte	.LVL1
 3863 0025 1E000000 		.4byte	.LVL3
 3864 0029 0100     		.2byte	0x1
 3865 002b 53       		.byte	0x53
 3866 002c 00000000 		.4byte	0
 3867 0030 00000000 		.4byte	0
 3868              	.LLST2:
 3869 0034 00000000 		.4byte	.LVL4
 3870 0038 07000000 		.4byte	.LVL5-1
 3871 003c 0100     		.2byte	0x1
 3872 003e 50       		.byte	0x50
 3873 003f 07000000 		.4byte	.LVL5-1
 3874 0043 16000000 		.4byte	.LVL8
 3875 0047 0100     		.2byte	0x1
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 120


 3876 0049 54       		.byte	0x54
 3877 004a 16000000 		.4byte	.LVL8
 3878 004e 18000000 		.4byte	.LFE33
 3879 0052 0400     		.2byte	0x4
 3880 0054 F3       		.byte	0xf3
 3881 0055 01       		.uleb128 0x1
 3882 0056 50       		.byte	0x50
 3883 0057 9F       		.byte	0x9f
 3884 0058 00000000 		.4byte	0
 3885 005c 00000000 		.4byte	0
 3886              	.LLST3:
 3887 0060 02000000 		.4byte	.LVL9
 3888 0064 06000000 		.4byte	.LVL10
 3889 0068 0200     		.2byte	0x2
 3890 006a 30       		.byte	0x30
 3891 006b 9F       		.byte	0x9f
 3892 006c 06000000 		.4byte	.LVL10
 3893 0070 12000000 		.4byte	.LVL13
 3894 0074 0100     		.2byte	0x1
 3895 0076 54       		.byte	0x54
 3896 0077 00000000 		.4byte	0
 3897 007b 00000000 		.4byte	0
 3898              	.LLST4:
 3899 007f 12000000 		.4byte	.LVL16
 3900 0083 2A000000 		.4byte	.LVL21
 3901 0087 0100     		.2byte	0x1
 3902 0089 54       		.byte	0x54
 3903 008a 00000000 		.4byte	0
 3904 008e 00000000 		.4byte	0
 3905              	.LLST5:
 3906 0092 1A000000 		.4byte	.LVL17
 3907 0096 20000000 		.4byte	.LVL18
 3908 009a 0100     		.2byte	0x1
 3909 009c 50       		.byte	0x50
 3910 009d 00000000 		.4byte	0
 3911 00a1 00000000 		.4byte	0
 3912              	.LLST6:
 3913 00a5 00000000 		.4byte	.LVL22
 3914 00a9 02000000 		.4byte	.LVL23
 3915 00ad 0100     		.2byte	0x1
 3916 00af 50       		.byte	0x50
 3917 00b0 02000000 		.4byte	.LVL23
 3918 00b4 0C000000 		.4byte	.LFE40
 3919 00b8 0400     		.2byte	0x4
 3920 00ba F3       		.byte	0xf3
 3921 00bb 01       		.uleb128 0x1
 3922 00bc 50       		.byte	0x50
 3923 00bd 9F       		.byte	0x9f
 3924 00be 00000000 		.4byte	0
 3925 00c2 00000000 		.4byte	0
 3926              	.LLST7:
 3927 00c6 00000000 		.4byte	.LVL24
 3928 00ca 02000000 		.4byte	.LVL25
 3929 00ce 0100     		.2byte	0x1
 3930 00d0 50       		.byte	0x50
 3931 00d1 02000000 		.4byte	.LVL25
 3932 00d5 0C000000 		.4byte	.LFE41
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 121


 3933 00d9 0400     		.2byte	0x4
 3934 00db F3       		.byte	0xf3
 3935 00dc 01       		.uleb128 0x1
 3936 00dd 50       		.byte	0x50
 3937 00de 9F       		.byte	0x9f
 3938 00df 00000000 		.4byte	0
 3939 00e3 00000000 		.4byte	0
 3940              	.LLST8:
 3941 00e7 00000000 		.4byte	.LVL26
 3942 00eb 04000000 		.4byte	.LVL27
 3943 00ef 0100     		.2byte	0x1
 3944 00f1 50       		.byte	0x50
 3945 00f2 04000000 		.4byte	.LVL27
 3946 00f6 0C000000 		.4byte	.LFE42
 3947 00fa 0400     		.2byte	0x4
 3948 00fc F3       		.byte	0xf3
 3949 00fd 01       		.uleb128 0x1
 3950 00fe 50       		.byte	0x50
 3951 00ff 9F       		.byte	0x9f
 3952 0100 00000000 		.4byte	0
 3953 0104 00000000 		.4byte	0
 3954              	.LLST9:
 3955 0108 00000000 		.4byte	.LVL28
 3956 010c 04000000 		.4byte	.LVL29
 3957 0110 0100     		.2byte	0x1
 3958 0112 50       		.byte	0x50
 3959 0113 04000000 		.4byte	.LVL29
 3960 0117 0C000000 		.4byte	.LFE43
 3961 011b 0400     		.2byte	0x4
 3962 011d F3       		.byte	0xf3
 3963 011e 01       		.uleb128 0x1
 3964 011f 50       		.byte	0x50
 3965 0120 9F       		.byte	0x9f
 3966 0121 00000000 		.4byte	0
 3967 0125 00000000 		.4byte	0
 3968              	.LLST10:
 3969 0129 00000000 		.4byte	.LVL30
 3970 012d 04000000 		.4byte	.LVL31
 3971 0131 0100     		.2byte	0x1
 3972 0133 50       		.byte	0x50
 3973 0134 04000000 		.4byte	.LVL31
 3974 0138 0C000000 		.4byte	.LFE44
 3975 013c 0400     		.2byte	0x4
 3976 013e F3       		.byte	0xf3
 3977 013f 01       		.uleb128 0x1
 3978 0140 50       		.byte	0x50
 3979 0141 9F       		.byte	0x9f
 3980 0142 00000000 		.4byte	0
 3981 0146 00000000 		.4byte	0
 3982              	.LLST11:
 3983 014a 00000000 		.4byte	.LVL32
 3984 014e 04000000 		.4byte	.LVL33
 3985 0152 0100     		.2byte	0x1
 3986 0154 50       		.byte	0x50
 3987 0155 04000000 		.4byte	.LVL33
 3988 0159 0C000000 		.4byte	.LFE45
 3989 015d 0400     		.2byte	0x4
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 122


 3990 015f F3       		.byte	0xf3
 3991 0160 01       		.uleb128 0x1
 3992 0161 50       		.byte	0x50
 3993 0162 9F       		.byte	0x9f
 3994 0163 00000000 		.4byte	0
 3995 0167 00000000 		.4byte	0
 3996              	.LLST12:
 3997 016b 00000000 		.4byte	.LVL34
 3998 016f 04000000 		.4byte	.LVL35
 3999 0173 0100     		.2byte	0x1
 4000 0175 50       		.byte	0x50
 4001 0176 04000000 		.4byte	.LVL35
 4002 017a 0C000000 		.4byte	.LFE46
 4003 017e 0400     		.2byte	0x4
 4004 0180 F3       		.byte	0xf3
 4005 0181 01       		.uleb128 0x1
 4006 0182 50       		.byte	0x50
 4007 0183 9F       		.byte	0x9f
 4008 0184 00000000 		.4byte	0
 4009 0188 00000000 		.4byte	0
 4010              	.LLST13:
 4011 018c 00000000 		.4byte	.LVL36
 4012 0190 04000000 		.4byte	.LVL37
 4013 0194 0100     		.2byte	0x1
 4014 0196 50       		.byte	0x50
 4015 0197 04000000 		.4byte	.LVL37
 4016 019b 0C000000 		.4byte	.LFE47
 4017 019f 0400     		.2byte	0x4
 4018 01a1 F3       		.byte	0xf3
 4019 01a2 01       		.uleb128 0x1
 4020 01a3 50       		.byte	0x50
 4021 01a4 9F       		.byte	0x9f
 4022 01a5 00000000 		.4byte	0
 4023 01a9 00000000 		.4byte	0
 4024              	.LLST14:
 4025 01ad 00000000 		.4byte	.LVL43
 4026 01b1 04000000 		.4byte	.LVL44
 4027 01b5 0100     		.2byte	0x1
 4028 01b7 50       		.byte	0x50
 4029 01b8 04000000 		.4byte	.LVL44
 4030 01bc 0C000000 		.4byte	.LFE53
 4031 01c0 0400     		.2byte	0x4
 4032 01c2 F3       		.byte	0xf3
 4033 01c3 01       		.uleb128 0x1
 4034 01c4 50       		.byte	0x50
 4035 01c5 9F       		.byte	0x9f
 4036 01c6 00000000 		.4byte	0
 4037 01ca 00000000 		.4byte	0
 4038              	.LLST15:
 4039 01ce 00000000 		.4byte	.LVL45
 4040 01d2 1E000000 		.4byte	.LVL49
 4041 01d6 0100     		.2byte	0x1
 4042 01d8 50       		.byte	0x50
 4043 01d9 1E000000 		.4byte	.LVL49
 4044 01dd 23000000 		.4byte	.LVL50-1
 4045 01e1 0100     		.2byte	0x1
 4046 01e3 51       		.byte	0x51
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 123


 4047 01e4 23000000 		.4byte	.LVL50-1
 4048 01e8 8C000000 		.4byte	.LVL57
 4049 01ec 0100     		.2byte	0x1
 4050 01ee 54       		.byte	0x54
 4051 01ef 8C000000 		.4byte	.LVL57
 4052 01f3 A8000000 		.4byte	.LFE54
 4053 01f7 0400     		.2byte	0x4
 4054 01f9 F3       		.byte	0xf3
 4055 01fa 01       		.uleb128 0x1
 4056 01fb 50       		.byte	0x50
 4057 01fc 9F       		.byte	0x9f
 4058 01fd 00000000 		.4byte	0
 4059 0201 00000000 		.4byte	0
 4060              	.LLST16:
 4061 0205 1A000000 		.4byte	.LVL48
 4062 0209 8C000000 		.4byte	.LVL59
 4063 020d 0100     		.2byte	0x1
 4064 020f 58       		.byte	0x58
 4065 0210 00000000 		.4byte	0
 4066 0214 00000000 		.4byte	0
 4067              	.LLST17:
 4068 0218 10000000 		.4byte	.LVL46
 4069 021c 8C000000 		.4byte	.LVL58
 4070 0220 0100     		.2byte	0x1
 4071 0222 57       		.byte	0x57
 4072 0223 00000000 		.4byte	0
 4073 0227 00000000 		.4byte	0
 4074              	.LLST18:
 4075 022b 14000000 		.4byte	.LVL47
 4076 022f 30000000 		.4byte	.LVL51
 4077 0233 0100     		.2byte	0x1
 4078 0235 56       		.byte	0x56
 4079 0236 4A000000 		.4byte	.LVL53
 4080 023a 52000000 		.4byte	.LVL54
 4081 023e 0100     		.2byte	0x1
 4082 0240 56       		.byte	0x56
 4083 0241 00000000 		.4byte	0
 4084 0245 00000000 		.4byte	0
 4085              	.LLST19:
 4086 0249 00000000 		.4byte	.LVL60
 4087 024d 08000000 		.4byte	.LVL62
 4088 0251 0100     		.2byte	0x1
 4089 0253 50       		.byte	0x50
 4090 0254 08000000 		.4byte	.LVL62
 4091 0258 28000000 		.4byte	.LFE55
 4092 025c 0400     		.2byte	0x4
 4093 025e F3       		.byte	0xf3
 4094 025f 01       		.uleb128 0x1
 4095 0260 50       		.byte	0x50
 4096 0261 9F       		.byte	0x9f
 4097 0262 00000000 		.4byte	0
 4098 0266 00000000 		.4byte	0
 4099              	.LLST20:
 4100 026a 06000000 		.4byte	.LVL61
 4101 026e 22000000 		.4byte	.LVL68
 4102 0272 0100     		.2byte	0x1
 4103 0274 54       		.byte	0x54
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 124


 4104 0275 00000000 		.4byte	0
 4105 0279 00000000 		.4byte	0
 4106              	.LLST21:
 4107 027d 0C000000 		.4byte	.LVL63
 4108 0281 22000000 		.4byte	.LVL69
 4109 0285 0100     		.2byte	0x1
 4110 0287 55       		.byte	0x55
 4111 0288 22000000 		.4byte	.LVL69
 4112 028c 28000000 		.4byte	.LFE55
 4113 0290 1E00     		.2byte	0x1e
 4114 0292 F3       		.byte	0xf3
 4115 0293 01       		.uleb128 0x1
 4116 0294 50       		.byte	0x50
 4117 0295 03       		.byte	0x3
 4118 0296 00000000 		.4byte	.LANCHOR2
 4119 029a 22       		.byte	0x22
 4120 029b 94       		.byte	0x94
 4121 029c 01       		.byte	0x1
 4122 029d 08       		.byte	0x8
 4123 029e FF       		.byte	0xff
 4124 029f 1A       		.byte	0x1a
 4125 02a0 F3       		.byte	0xf3
 4126 02a1 01       		.uleb128 0x1
 4127 02a2 50       		.byte	0x50
 4128 02a3 03       		.byte	0x3
 4129 02a4 08000000 		.4byte	.LANCHOR2+8
 4130 02a8 22       		.byte	0x22
 4131 02a9 94       		.byte	0x94
 4132 02aa 01       		.byte	0x1
 4133 02ab 08       		.byte	0x8
 4134 02ac FF       		.byte	0xff
 4135 02ad 1A       		.byte	0x1a
 4136 02ae 22       		.byte	0x22
 4137 02af 9F       		.byte	0x9f
 4138 02b0 00000000 		.4byte	0
 4139 02b4 00000000 		.4byte	0
 4140              	.LLST22:
 4141 02b8 0C000000 		.4byte	.LVL63
 4142 02bc 0E000000 		.4byte	.LVL64
 4143 02c0 0200     		.2byte	0x2
 4144 02c2 30       		.byte	0x30
 4145 02c3 9F       		.byte	0x9f
 4146 02c4 0E000000 		.4byte	.LVL64
 4147 02c8 22000000 		.4byte	.LVL70
 4148 02cc 0100     		.2byte	0x1
 4149 02ce 56       		.byte	0x56
 4150 02cf 22000000 		.4byte	.LVL70
 4151 02d3 28000000 		.4byte	.LFE55
 4152 02d7 0100     		.2byte	0x1
 4153 02d9 50       		.byte	0x50
 4154 02da 00000000 		.4byte	0
 4155 02de 00000000 		.4byte	0
 4156              	.LLST23:
 4157 02e2 02000000 		.4byte	.LVL71
 4158 02e6 08000000 		.4byte	.LVL72
 4159 02ea 0200     		.2byte	0x2
 4160 02ec 30       		.byte	0x30
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 125


 4161 02ed 9F       		.byte	0x9f
 4162 02ee 08000000 		.4byte	.LVL72
 4163 02f2 1C000000 		.4byte	.LVL76
 4164 02f6 0100     		.2byte	0x1
 4165 02f8 54       		.byte	0x54
 4166 02f9 00000000 		.4byte	0
 4167 02fd 00000000 		.4byte	0
 4168              	.LLST24:
 4169 0301 02000000 		.4byte	.LVL71
 4170 0305 08000000 		.4byte	.LVL72
 4171 0309 0200     		.2byte	0x2
 4172 030b 30       		.byte	0x30
 4173 030c 9F       		.byte	0x9f
 4174 030d 08000000 		.4byte	.LVL72
 4175 0311 1C000000 		.4byte	.LVL77
 4176 0315 0100     		.2byte	0x1
 4177 0317 55       		.byte	0x55
 4178 0318 1C000000 		.4byte	.LVL77
 4179 031c 1E000000 		.4byte	.LFE56
 4180 0320 0100     		.2byte	0x1
 4181 0322 50       		.byte	0x50
 4182 0323 00000000 		.4byte	0
 4183 0327 00000000 		.4byte	0
 4184              	.LLST25:
 4185 032b 00000000 		.4byte	.LVL78
 4186 032f 08000000 		.4byte	.LVL80
 4187 0333 0100     		.2byte	0x1
 4188 0335 50       		.byte	0x50
 4189 0336 08000000 		.4byte	.LVL80
 4190 033a 2C000000 		.4byte	.LFE57
 4191 033e 0400     		.2byte	0x4
 4192 0340 F3       		.byte	0xf3
 4193 0341 01       		.uleb128 0x1
 4194 0342 50       		.byte	0x50
 4195 0343 9F       		.byte	0x9f
 4196 0344 00000000 		.4byte	0
 4197 0348 00000000 		.4byte	0
 4198              	.LLST26:
 4199 034c 06000000 		.4byte	.LVL79
 4200 0350 1A000000 		.4byte	.LVL83
 4201 0354 0100     		.2byte	0x1
 4202 0356 54       		.byte	0x54
 4203 0357 1C000000 		.4byte	.LVL84
 4204 035b 20000000 		.4byte	.LVL85
 4205 035f 0100     		.2byte	0x1
 4206 0361 54       		.byte	0x54
 4207 0362 00000000 		.4byte	0
 4208 0366 00000000 		.4byte	0
 4209              	.LLST27:
 4210 036a 0E000000 		.4byte	.LVL81
 4211 036e 20000000 		.4byte	.LVL86
 4212 0372 0100     		.2byte	0x1
 4213 0374 55       		.byte	0x55
 4214 0375 20000000 		.4byte	.LVL86
 4215 0379 2C000000 		.4byte	.LFE57
 4216 037d 1E00     		.2byte	0x1e
 4217 037f F3       		.byte	0xf3
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 126


 4218 0380 01       		.uleb128 0x1
 4219 0381 50       		.byte	0x50
 4220 0382 03       		.byte	0x3
 4221 0383 00000000 		.4byte	.LANCHOR2
 4222 0387 22       		.byte	0x22
 4223 0388 94       		.byte	0x94
 4224 0389 01       		.byte	0x1
 4225 038a 08       		.byte	0x8
 4226 038b FF       		.byte	0xff
 4227 038c 1A       		.byte	0x1a
 4228 038d F3       		.byte	0xf3
 4229 038e 01       		.uleb128 0x1
 4230 038f 50       		.byte	0x50
 4231 0390 03       		.byte	0x3
 4232 0391 08000000 		.4byte	.LANCHOR2+8
 4233 0395 22       		.byte	0x22
 4234 0396 94       		.byte	0x94
 4235 0397 01       		.byte	0x1
 4236 0398 08       		.byte	0x8
 4237 0399 FF       		.byte	0xff
 4238 039a 1A       		.byte	0x1a
 4239 039b 22       		.byte	0x22
 4240 039c 9F       		.byte	0x9f
 4241 039d 00000000 		.4byte	0
 4242 03a1 00000000 		.4byte	0
 4243              	.LLST28:
 4244 03a5 00000000 		.4byte	.LVL87
 4245 03a9 08000000 		.4byte	.LVL89
 4246 03ad 0100     		.2byte	0x1
 4247 03af 50       		.byte	0x50
 4248 03b0 08000000 		.4byte	.LVL89
 4249 03b4 2C000000 		.4byte	.LFE58
 4250 03b8 0400     		.2byte	0x4
 4251 03ba F3       		.byte	0xf3
 4252 03bb 01       		.uleb128 0x1
 4253 03bc 50       		.byte	0x50
 4254 03bd 9F       		.byte	0x9f
 4255 03be 00000000 		.4byte	0
 4256 03c2 00000000 		.4byte	0
 4257              	.LLST29:
 4258 03c6 06000000 		.4byte	.LVL88
 4259 03ca 1A000000 		.4byte	.LVL92
 4260 03ce 0100     		.2byte	0x1
 4261 03d0 54       		.byte	0x54
 4262 03d1 1C000000 		.4byte	.LVL93
 4263 03d5 20000000 		.4byte	.LVL94
 4264 03d9 0100     		.2byte	0x1
 4265 03db 54       		.byte	0x54
 4266 03dc 00000000 		.4byte	0
 4267 03e0 00000000 		.4byte	0
 4268              	.LLST30:
 4269 03e4 0E000000 		.4byte	.LVL90
 4270 03e8 20000000 		.4byte	.LVL95
 4271 03ec 0100     		.2byte	0x1
 4272 03ee 55       		.byte	0x55
 4273 03ef 20000000 		.4byte	.LVL95
 4274 03f3 2C000000 		.4byte	.LFE58
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 127


 4275 03f7 1E00     		.2byte	0x1e
 4276 03f9 F3       		.byte	0xf3
 4277 03fa 01       		.uleb128 0x1
 4278 03fb 50       		.byte	0x50
 4279 03fc 03       		.byte	0x3
 4280 03fd 00000000 		.4byte	.LANCHOR2
 4281 0401 22       		.byte	0x22
 4282 0402 94       		.byte	0x94
 4283 0403 01       		.byte	0x1
 4284 0404 08       		.byte	0x8
 4285 0405 FF       		.byte	0xff
 4286 0406 1A       		.byte	0x1a
 4287 0407 F3       		.byte	0xf3
 4288 0408 01       		.uleb128 0x1
 4289 0409 50       		.byte	0x50
 4290 040a 03       		.byte	0x3
 4291 040b 08000000 		.4byte	.LANCHOR2+8
 4292 040f 22       		.byte	0x22
 4293 0410 94       		.byte	0x94
 4294 0411 01       		.byte	0x1
 4295 0412 08       		.byte	0x8
 4296 0413 FF       		.byte	0xff
 4297 0414 1A       		.byte	0x1a
 4298 0415 22       		.byte	0x22
 4299 0416 9F       		.byte	0x9f
 4300 0417 00000000 		.4byte	0
 4301 041b 00000000 		.4byte	0
 4302              	.LLST31:
 4303 041f 00000000 		.4byte	.LVL96
 4304 0423 08000000 		.4byte	.LVL97
 4305 0427 0100     		.2byte	0x1
 4306 0429 50       		.byte	0x50
 4307 042a 08000000 		.4byte	.LVL97
 4308 042e 0A000000 		.4byte	.LVL98
 4309 0432 0400     		.2byte	0x4
 4310 0434 F3       		.byte	0xf3
 4311 0435 01       		.uleb128 0x1
 4312 0436 50       		.byte	0x50
 4313 0437 9F       		.byte	0x9f
 4314 0438 0A000000 		.4byte	.LVL98
 4315 043c 1A000000 		.4byte	.LVL100
 4316 0440 0100     		.2byte	0x1
 4317 0442 50       		.byte	0x50
 4318 0443 00000000 		.4byte	0
 4319 0447 00000000 		.4byte	0
 4320              	.LLST32:
 4321 044b 00000000 		.4byte	.LVL96
 4322 044f 0A000000 		.4byte	.LVL98
 4323 0453 0100     		.2byte	0x1
 4324 0455 51       		.byte	0x51
 4325 0456 0A000000 		.4byte	.LVL98
 4326 045a 1C000000 		.4byte	.LFE59
 4327 045e 0100     		.2byte	0x1
 4328 0460 51       		.byte	0x51
 4329 0461 00000000 		.4byte	0
 4330 0465 00000000 		.4byte	0
 4331              	.LLST33:
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 128


 4332 0469 00000000 		.4byte	.LVL101
 4333 046d 02000000 		.4byte	.LVL102
 4334 0471 0100     		.2byte	0x1
 4335 0473 50       		.byte	0x50
 4336 0474 02000000 		.4byte	.LVL102
 4337 0478 0C000000 		.4byte	.LFE60
 4338 047c 0400     		.2byte	0x4
 4339 047e F3       		.byte	0xf3
 4340 047f 01       		.uleb128 0x1
 4341 0480 50       		.byte	0x50
 4342 0481 9F       		.byte	0x9f
 4343 0482 00000000 		.4byte	0
 4344 0486 00000000 		.4byte	0
 4345              	.LLST34:
 4346 048a 00000000 		.4byte	.LVL101
 4347 048e 04000000 		.4byte	.LVL103
 4348 0492 0100     		.2byte	0x1
 4349 0494 51       		.byte	0x51
 4350 0495 04000000 		.4byte	.LVL103
 4351 0499 0C000000 		.4byte	.LFE60
 4352 049d 0400     		.2byte	0x4
 4353 049f F3       		.byte	0xf3
 4354 04a0 01       		.uleb128 0x1
 4355 04a1 51       		.byte	0x51
 4356 04a2 9F       		.byte	0x9f
 4357 04a3 00000000 		.4byte	0
 4358 04a7 00000000 		.4byte	0
 4359              	.LLST35:
 4360 04ab 02000000 		.4byte	.LVL102
 4361 04af 0A000000 		.4byte	.LVL106
 4362 04b3 0100     		.2byte	0x1
 4363 04b5 50       		.byte	0x50
 4364 04b6 00000000 		.4byte	0
 4365 04ba 00000000 		.4byte	0
 4366              	.LLST36:
 4367 04be 00000000 		.4byte	.LVL107
 4368 04c2 2A000000 		.4byte	.LVL110
 4369 04c6 0100     		.2byte	0x1
 4370 04c8 50       		.byte	0x50
 4371 04c9 2A000000 		.4byte	.LVL110
 4372 04cd DE000000 		.4byte	.LVL128
 4373 04d1 0100     		.2byte	0x1
 4374 04d3 54       		.byte	0x54
 4375 04d4 DE000000 		.4byte	.LVL128
 4376 04d8 E4000000 		.4byte	.LVL129
 4377 04dc 0400     		.2byte	0x4
 4378 04de F3       		.byte	0xf3
 4379 04df 01       		.uleb128 0x1
 4380 04e0 50       		.byte	0x50
 4381 04e1 9F       		.byte	0x9f
 4382 04e2 E4000000 		.4byte	.LVL129
 4383 04e6 E8000000 		.4byte	.LVL131
 4384 04ea 0100     		.2byte	0x1
 4385 04ec 54       		.byte	0x54
 4386 04ed E8000000 		.4byte	.LVL131
 4387 04f1 EC000000 		.4byte	.LVL132
 4388 04f5 0400     		.2byte	0x4
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 129


 4389 04f7 F3       		.byte	0xf3
 4390 04f8 01       		.uleb128 0x1
 4391 04f9 50       		.byte	0x50
 4392 04fa 9F       		.byte	0x9f
 4393 04fb EC000000 		.4byte	.LVL132
 4394 04ff F0000000 		.4byte	.LVL133
 4395 0503 0100     		.2byte	0x1
 4396 0505 54       		.byte	0x54
 4397 0506 F0000000 		.4byte	.LVL133
 4398 050a 20010000 		.4byte	.LFE36
 4399 050e 0400     		.2byte	0x4
 4400 0510 F3       		.byte	0xf3
 4401 0511 01       		.uleb128 0x1
 4402 0512 50       		.byte	0x50
 4403 0513 9F       		.byte	0x9f
 4404 0514 00000000 		.4byte	0
 4405 0518 00000000 		.4byte	0
 4406              	.LLST37:
 4407 051c AC000000 		.4byte	.LVL120
 4408 0520 B2000000 		.4byte	.LVL121
 4409 0524 0100     		.2byte	0x1
 4410 0526 53       		.byte	0x53
 4411 0527 B2000000 		.4byte	.LVL121
 4412 052b B6000000 		.4byte	.LVL122
 4413 052f 0100     		.2byte	0x1
 4414 0531 5C       		.byte	0x5c
 4415 0532 B6000000 		.4byte	.LVL122
 4416 0536 B8000000 		.4byte	.LVL123
 4417 053a 0100     		.2byte	0x1
 4418 053c 53       		.byte	0x53
 4419 053d B8000000 		.4byte	.LVL123
 4420 0541 C8000000 		.4byte	.LVL125
 4421 0545 0100     		.2byte	0x1
 4422 0547 57       		.byte	0x57
 4423 0548 00000000 		.4byte	0
 4424 054c 00000000 		.4byte	0
 4425              	.LLST38:
 4426 0550 52000000 		.4byte	.LVL115
 4427 0554 58000000 		.4byte	.LVL116
 4428 0558 0200     		.2byte	0x2
 4429 055a 31       		.byte	0x31
 4430 055b 9F       		.byte	0x9f
 4431 055c 5C000000 		.4byte	.LVL117
 4432 0560 60000000 		.4byte	.LVL118
 4433 0564 0200     		.2byte	0x2
 4434 0566 30       		.byte	0x30
 4435 0567 9F       		.byte	0x9f
 4436 0568 60000000 		.4byte	.LVL118
 4437 056c D6000000 		.4byte	.LVL126
 4438 0570 0100     		.2byte	0x1
 4439 0572 58       		.byte	0x58
 4440 0573 D6000000 		.4byte	.LVL126
 4441 0577 DC000000 		.4byte	.LVL127
 4442 057b 0100     		.2byte	0x1
 4443 057d 53       		.byte	0x53
 4444 057e DC000000 		.4byte	.LVL127
 4445 0582 E4000000 		.4byte	.LVL129
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 130


 4446 0586 0100     		.2byte	0x1
 4447 0588 58       		.byte	0x58
 4448 0589 E4000000 		.4byte	.LVL129
 4449 058d E6000000 		.4byte	.LVL130
 4450 0591 0100     		.2byte	0x1
 4451 0593 53       		.byte	0x53
 4452 0594 E6000000 		.4byte	.LVL130
 4453 0598 F6000000 		.4byte	.LVL135
 4454 059c 0100     		.2byte	0x1
 4455 059e 58       		.byte	0x58
 4456 059f 00000000 		.4byte	0
 4457 05a3 00000000 		.4byte	0
 4458              	.LLST39:
 4459 05a7 52000000 		.4byte	.LVL115
 4460 05ab 58000000 		.4byte	.LVL116
 4461 05af 0100     		.2byte	0x1
 4462 05b1 55       		.byte	0x55
 4463 05b2 5C000000 		.4byte	.LVL117
 4464 05b6 F6000000 		.4byte	.LVL134
 4465 05ba 0100     		.2byte	0x1
 4466 05bc 55       		.byte	0x55
 4467 05bd 00000000 		.4byte	0
 4468 05c1 00000000 		.4byte	0
 4469              	.LLST40:
 4470 05c5 1A000000 		.4byte	.LVL109
 4471 05c9 30000000 		.4byte	.LVL112
 4472 05cd 0100     		.2byte	0x1
 4473 05cf 57       		.byte	0x57
 4474 05d0 30000000 		.4byte	.LVL112
 4475 05d4 34000000 		.4byte	.LVL113
 4476 05d8 0100     		.2byte	0x1
 4477 05da 50       		.byte	0x50
 4478 05db 34000000 		.4byte	.LVL113
 4479 05df B8000000 		.4byte	.LVL123
 4480 05e3 0100     		.2byte	0x1
 4481 05e5 57       		.byte	0x57
 4482 05e6 00000000 		.4byte	0
 4483 05ea 00000000 		.4byte	0
 4484              	.LLST41:
 4485 05ee 00000000 		.4byte	.LVL136
 4486 05f2 07000000 		.4byte	.LVL137-1
 4487 05f6 0100     		.2byte	0x1
 4488 05f8 50       		.byte	0x50
 4489 05f9 07000000 		.4byte	.LVL137-1
 4490 05fd 0E000000 		.4byte	.LVL139
 4491 0601 0100     		.2byte	0x1
 4492 0603 54       		.byte	0x54
 4493 0604 0E000000 		.4byte	.LVL139
 4494 0608 10000000 		.4byte	.LFE37
 4495 060c 0400     		.2byte	0x4
 4496 060e F3       		.byte	0xf3
 4497 060f 01       		.uleb128 0x1
 4498 0610 50       		.byte	0x50
 4499 0611 9F       		.byte	0x9f
 4500 0612 00000000 		.4byte	0
 4501 0616 00000000 		.4byte	0
 4502              	.LLST42:
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 131


 4503 061a 02000000 		.4byte	.LVL140
 4504 061e 06000000 		.4byte	.LVL141
 4505 0622 0200     		.2byte	0x2
 4506 0624 30       		.byte	0x30
 4507 0625 9F       		.byte	0x9f
 4508 0626 06000000 		.4byte	.LVL141
 4509 062a 1E000000 		.4byte	.LVL146
 4510 062e 0100     		.2byte	0x1
 4511 0630 54       		.byte	0x54
 4512 0631 00000000 		.4byte	0
 4513 0635 00000000 		.4byte	0
 4514              	.LLST43:
 4515 0639 0E000000 		.4byte	.LVL142
 4516 063d 14000000 		.4byte	.LVL143
 4517 0641 0100     		.2byte	0x1
 4518 0643 50       		.byte	0x50
 4519 0644 00000000 		.4byte	0
 4520 0648 00000000 		.4byte	0
 4521              	.LLST44:
 4522 064c 00000000 		.4byte	.LVL147
 4523 0650 0E000000 		.4byte	.LVL151
 4524 0654 0100     		.2byte	0x1
 4525 0656 50       		.byte	0x50
 4526 0657 0E000000 		.4byte	.LVL151
 4527 065b 30000000 		.4byte	.LFE39
 4528 065f 0400     		.2byte	0x4
 4529 0661 F3       		.byte	0xf3
 4530 0662 01       		.uleb128 0x1
 4531 0663 50       		.byte	0x50
 4532 0664 9F       		.byte	0x9f
 4533 0665 00000000 		.4byte	0
 4534 0669 00000000 		.4byte	0
 4535              	.LLST45:
 4536 066d 08000000 		.4byte	.LVL148
 4537 0671 0C000000 		.4byte	.LVL150
 4538 0675 0100     		.2byte	0x1
 4539 0677 55       		.byte	0x55
 4540 0678 0C000000 		.4byte	.LVL150
 4541 067c 0E000000 		.4byte	.LVL151
 4542 0680 0800     		.2byte	0x8
 4543 0682 72       		.byte	0x72
 4544 0683 08       		.sleb128 8
 4545 0684 94       		.byte	0x94
 4546 0685 01       		.byte	0x1
 4547 0686 08       		.byte	0x8
 4548 0687 FF       		.byte	0xff
 4549 0688 1A       		.byte	0x1a
 4550 0689 9F       		.byte	0x9f
 4551 068a 0E000000 		.4byte	.LVL151
 4552 068e 30000000 		.4byte	.LFE39
 4553 0692 0F00     		.2byte	0xf
 4554 0694 F3       		.byte	0xf3
 4555 0695 01       		.uleb128 0x1
 4556 0696 50       		.byte	0x50
 4557 0697 03       		.byte	0x3
 4558 0698 08000000 		.4byte	.LANCHOR2+8
 4559 069c 22       		.byte	0x22
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 132


 4560 069d 94       		.byte	0x94
 4561 069e 01       		.byte	0x1
 4562 069f 08       		.byte	0x8
 4563 06a0 FF       		.byte	0xff
 4564 06a1 1A       		.byte	0x1a
 4565 06a2 9F       		.byte	0x9f
 4566 06a3 00000000 		.4byte	0
 4567 06a7 00000000 		.4byte	0
 4568              	.LLST46:
 4569 06ab 0A000000 		.4byte	.LVL149
 4570 06af 0E000000 		.4byte	.LVL151
 4571 06b3 0100     		.2byte	0x1
 4572 06b5 54       		.byte	0x54
 4573 06b6 0E000000 		.4byte	.LVL151
 4574 06ba 30000000 		.4byte	.LFE39
 4575 06be 0F00     		.2byte	0xf
 4576 06c0 F3       		.byte	0xf3
 4577 06c1 01       		.uleb128 0x1
 4578 06c2 50       		.byte	0x50
 4579 06c3 03       		.byte	0x3
 4580 06c4 00000000 		.4byte	.LANCHOR2
 4581 06c8 22       		.byte	0x22
 4582 06c9 94       		.byte	0x94
 4583 06ca 01       		.byte	0x1
 4584 06cb 08       		.byte	0x8
 4585 06cc FF       		.byte	0xff
 4586 06cd 1A       		.byte	0x1a
 4587 06ce 9F       		.byte	0x9f
 4588 06cf 00000000 		.4byte	0
 4589 06d3 00000000 		.4byte	0
 4590              	.LLST47:
 4591 06d7 0C000000 		.4byte	.LVL150
 4592 06db 26000000 		.4byte	.LVL157
 4593 06df 0100     		.2byte	0x1
 4594 06e1 55       		.byte	0x55
 4595 06e2 26000000 		.4byte	.LVL157
 4596 06e6 30000000 		.4byte	.LFE39
 4597 06ea 1E00     		.2byte	0x1e
 4598 06ec F3       		.byte	0xf3
 4599 06ed 01       		.uleb128 0x1
 4600 06ee 50       		.byte	0x50
 4601 06ef 03       		.byte	0x3
 4602 06f0 08000000 		.4byte	.LANCHOR2+8
 4603 06f4 22       		.byte	0x22
 4604 06f5 94       		.byte	0x94
 4605 06f6 01       		.byte	0x1
 4606 06f7 08       		.byte	0x8
 4607 06f8 FF       		.byte	0xff
 4608 06f9 1A       		.byte	0x1a
 4609 06fa F3       		.byte	0xf3
 4610 06fb 01       		.uleb128 0x1
 4611 06fc 50       		.byte	0x50
 4612 06fd 03       		.byte	0x3
 4613 06fe 00000000 		.4byte	.LANCHOR2
 4614 0702 22       		.byte	0x22
 4615 0703 94       		.byte	0x94
 4616 0704 01       		.byte	0x1
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 133


 4617 0705 08       		.byte	0x8
 4618 0706 FF       		.byte	0xff
 4619 0707 1A       		.byte	0x1a
 4620 0708 22       		.byte	0x22
 4621 0709 9F       		.byte	0x9f
 4622 070a 00000000 		.4byte	0
 4623 070e 00000000 		.4byte	0
 4624              	.LLST48:
 4625 0712 0C000000 		.4byte	.LVL150
 4626 0716 26000000 		.4byte	.LVL156
 4627 071a 0100     		.2byte	0x1
 4628 071c 54       		.byte	0x54
 4629 071d 00000000 		.4byte	0
 4630 0721 00000000 		.4byte	0
 4631              	.LLST49:
 4632 0725 16000000 		.4byte	.LVL152
 4633 0729 1C000000 		.4byte	.LVL153
 4634 072d 0100     		.2byte	0x1
 4635 072f 50       		.byte	0x50
 4636 0730 00000000 		.4byte	0
 4637 0734 00000000 		.4byte	0
 4638              	.LLST50:
 4639 0738 00000000 		.4byte	.LVL158
 4640 073c 04000000 		.4byte	.LVL159
 4641 0740 0100     		.2byte	0x1
 4642 0742 50       		.byte	0x50
 4643 0743 04000000 		.4byte	.LVL159
 4644 0747 0C000000 		.4byte	.LFE61
 4645 074b 0400     		.2byte	0x4
 4646 074d F3       		.byte	0xf3
 4647 074e 01       		.uleb128 0x1
 4648 074f 50       		.byte	0x50
 4649 0750 9F       		.byte	0x9f
 4650 0751 00000000 		.4byte	0
 4651 0755 00000000 		.4byte	0
 4652              	.LLST51:
 4653 0759 00000000 		.4byte	.LVL160
 4654 075d 04000000 		.4byte	.LVL161
 4655 0761 0100     		.2byte	0x1
 4656 0763 50       		.byte	0x50
 4657 0764 04000000 		.4byte	.LVL161
 4658 0768 0C000000 		.4byte	.LFE62
 4659 076c 0400     		.2byte	0x4
 4660 076e F3       		.byte	0xf3
 4661 076f 01       		.uleb128 0x1
 4662 0770 50       		.byte	0x50
 4663 0771 9F       		.byte	0x9f
 4664 0772 00000000 		.4byte	0
 4665 0776 00000000 		.4byte	0
 4666              	.LLST52:
 4667 077a 00000000 		.4byte	.LVL162
 4668 077e 04000000 		.4byte	.LVL163
 4669 0782 0100     		.2byte	0x1
 4670 0784 50       		.byte	0x50
 4671 0785 04000000 		.4byte	.LVL163
 4672 0789 0C000000 		.4byte	.LFE63
 4673 078d 0400     		.2byte	0x4
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 134


 4674 078f F3       		.byte	0xf3
 4675 0790 01       		.uleb128 0x1
 4676 0791 50       		.byte	0x50
 4677 0792 9F       		.byte	0x9f
 4678 0793 00000000 		.4byte	0
 4679 0797 00000000 		.4byte	0
 4680              		.section	.debug_aranges,"",%progbits
 4681 0000 24010000 		.4byte	0x124
 4682 0004 0200     		.2byte	0x2
 4683 0006 00000000 		.4byte	.Ldebug_info0
 4684 000a 04       		.byte	0x4
 4685 000b 00       		.byte	0
 4686 000c 0000     		.2byte	0
 4687 000e 0000     		.2byte	0
 4688 0010 00000000 		.4byte	.LFB32
 4689 0014 3C000000 		.4byte	.LFE32-.LFB32
 4690 0018 00000000 		.4byte	.LFB33
 4691 001c 18000000 		.4byte	.LFE33-.LFB33
 4692 0020 00000000 		.4byte	.LFB34
 4693 0024 14000000 		.4byte	.LFE34-.LFB34
 4694 0028 00000000 		.4byte	.LFB35
 4695 002c 30000000 		.4byte	.LFE35-.LFB35
 4696 0030 00000000 		.4byte	.LFB40
 4697 0034 0C000000 		.4byte	.LFE40-.LFB40
 4698 0038 00000000 		.4byte	.LFB41
 4699 003c 0C000000 		.4byte	.LFE41-.LFB41
 4700 0040 00000000 		.4byte	.LFB42
 4701 0044 0C000000 		.4byte	.LFE42-.LFB42
 4702 0048 00000000 		.4byte	.LFB43
 4703 004c 0C000000 		.4byte	.LFE43-.LFB43
 4704 0050 00000000 		.4byte	.LFB44
 4705 0054 0C000000 		.4byte	.LFE44-.LFB44
 4706 0058 00000000 		.4byte	.LFB45
 4707 005c 0C000000 		.4byte	.LFE45-.LFB45
 4708 0060 00000000 		.4byte	.LFB46
 4709 0064 0C000000 		.4byte	.LFE46-.LFB46
 4710 0068 00000000 		.4byte	.LFB47
 4711 006c 0C000000 		.4byte	.LFE47-.LFB47
 4712 0070 00000000 		.4byte	.LFB48
 4713 0074 0C000000 		.4byte	.LFE48-.LFB48
 4714 0078 00000000 		.4byte	.LFB49
 4715 007c 0C000000 		.4byte	.LFE49-.LFB49
 4716 0080 00000000 		.4byte	.LFB50
 4717 0084 0C000000 		.4byte	.LFE50-.LFB50
 4718 0088 00000000 		.4byte	.LFB51
 4719 008c 0C000000 		.4byte	.LFE51-.LFB51
 4720 0090 00000000 		.4byte	.LFB52
 4721 0094 0C000000 		.4byte	.LFE52-.LFB52
 4722 0098 00000000 		.4byte	.LFB53
 4723 009c 0C000000 		.4byte	.LFE53-.LFB53
 4724 00a0 00000000 		.4byte	.LFB54
 4725 00a4 A8000000 		.4byte	.LFE54-.LFB54
 4726 00a8 00000000 		.4byte	.LFB55
 4727 00ac 28000000 		.4byte	.LFE55-.LFB55
 4728 00b0 00000000 		.4byte	.LFB56
 4729 00b4 1E000000 		.4byte	.LFE56-.LFB56
 4730 00b8 00000000 		.4byte	.LFB57
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 135


 4731 00bc 2C000000 		.4byte	.LFE57-.LFB57
 4732 00c0 00000000 		.4byte	.LFB58
 4733 00c4 2C000000 		.4byte	.LFE58-.LFB58
 4734 00c8 00000000 		.4byte	.LFB59
 4735 00cc 1C000000 		.4byte	.LFE59-.LFB59
 4736 00d0 00000000 		.4byte	.LFB60
 4737 00d4 0C000000 		.4byte	.LFE60-.LFB60
 4738 00d8 00000000 		.4byte	.LFB36
 4739 00dc 20010000 		.4byte	.LFE36-.LFB36
 4740 00e0 00000000 		.4byte	.LFB37
 4741 00e4 10000000 		.4byte	.LFE37-.LFB37
 4742 00e8 00000000 		.4byte	.LFB38
 4743 00ec 24000000 		.4byte	.LFE38-.LFB38
 4744 00f0 00000000 		.4byte	.LFB39
 4745 00f4 30000000 		.4byte	.LFE39-.LFB39
 4746 00f8 00000000 		.4byte	.LFB61
 4747 00fc 0C000000 		.4byte	.LFE61-.LFB61
 4748 0100 00000000 		.4byte	.LFB62
 4749 0104 0C000000 		.4byte	.LFE62-.LFB62
 4750 0108 00000000 		.4byte	.LFB63
 4751 010c 0C000000 		.4byte	.LFE63-.LFB63
 4752 0110 00000000 		.4byte	.LFB64
 4753 0114 0C000000 		.4byte	.LFE64-.LFB64
 4754 0118 00000000 		.4byte	.LFB65
 4755 011c 0C000000 		.4byte	.LFE65-.LFB65
 4756 0120 00000000 		.4byte	0
 4757 0124 00000000 		.4byte	0
 4758              		.section	.debug_ranges,"",%progbits
 4759              	.Ldebug_ranges0:
 4760 0000 00000000 		.4byte	.LFB32
 4761 0004 3C000000 		.4byte	.LFE32
 4762 0008 00000000 		.4byte	.LFB33
 4763 000c 18000000 		.4byte	.LFE33
 4764 0010 00000000 		.4byte	.LFB34
 4765 0014 14000000 		.4byte	.LFE34
 4766 0018 00000000 		.4byte	.LFB35
 4767 001c 30000000 		.4byte	.LFE35
 4768 0020 00000000 		.4byte	.LFB40
 4769 0024 0C000000 		.4byte	.LFE40
 4770 0028 00000000 		.4byte	.LFB41
 4771 002c 0C000000 		.4byte	.LFE41
 4772 0030 00000000 		.4byte	.LFB42
 4773 0034 0C000000 		.4byte	.LFE42
 4774 0038 00000000 		.4byte	.LFB43
 4775 003c 0C000000 		.4byte	.LFE43
 4776 0040 00000000 		.4byte	.LFB44
 4777 0044 0C000000 		.4byte	.LFE44
 4778 0048 00000000 		.4byte	.LFB45
 4779 004c 0C000000 		.4byte	.LFE45
 4780 0050 00000000 		.4byte	.LFB46
 4781 0054 0C000000 		.4byte	.LFE46
 4782 0058 00000000 		.4byte	.LFB47
 4783 005c 0C000000 		.4byte	.LFE47
 4784 0060 00000000 		.4byte	.LFB48
 4785 0064 0C000000 		.4byte	.LFE48
 4786 0068 00000000 		.4byte	.LFB49
 4787 006c 0C000000 		.4byte	.LFE49
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 136


 4788 0070 00000000 		.4byte	.LFB50
 4789 0074 0C000000 		.4byte	.LFE50
 4790 0078 00000000 		.4byte	.LFB51
 4791 007c 0C000000 		.4byte	.LFE51
 4792 0080 00000000 		.4byte	.LFB52
 4793 0084 0C000000 		.4byte	.LFE52
 4794 0088 00000000 		.4byte	.LFB53
 4795 008c 0C000000 		.4byte	.LFE53
 4796 0090 00000000 		.4byte	.LFB54
 4797 0094 A8000000 		.4byte	.LFE54
 4798 0098 00000000 		.4byte	.LFB55
 4799 009c 28000000 		.4byte	.LFE55
 4800 00a0 00000000 		.4byte	.LFB56
 4801 00a4 1E000000 		.4byte	.LFE56
 4802 00a8 00000000 		.4byte	.LFB57
 4803 00ac 2C000000 		.4byte	.LFE57
 4804 00b0 00000000 		.4byte	.LFB58
 4805 00b4 2C000000 		.4byte	.LFE58
 4806 00b8 00000000 		.4byte	.LFB59
 4807 00bc 1C000000 		.4byte	.LFE59
 4808 00c0 00000000 		.4byte	.LFB60
 4809 00c4 0C000000 		.4byte	.LFE60
 4810 00c8 00000000 		.4byte	.LFB36
 4811 00cc 20010000 		.4byte	.LFE36
 4812 00d0 00000000 		.4byte	.LFB37
 4813 00d4 10000000 		.4byte	.LFE37
 4814 00d8 00000000 		.4byte	.LFB38
 4815 00dc 24000000 		.4byte	.LFE38
 4816 00e0 00000000 		.4byte	.LFB39
 4817 00e4 30000000 		.4byte	.LFE39
 4818 00e8 00000000 		.4byte	.LFB61
 4819 00ec 0C000000 		.4byte	.LFE61
 4820 00f0 00000000 		.4byte	.LFB62
 4821 00f4 0C000000 		.4byte	.LFE62
 4822 00f8 00000000 		.4byte	.LFB63
 4823 00fc 0C000000 		.4byte	.LFE63
 4824 0100 00000000 		.4byte	.LFB64
 4825 0104 0C000000 		.4byte	.LFE64
 4826 0108 00000000 		.4byte	.LFB65
 4827 010c 0C000000 		.4byte	.LFE65
 4828 0110 00000000 		.4byte	0
 4829 0114 00000000 		.4byte	0
 4830              		.section	.debug_line,"",%progbits
 4831              	.Ldebug_line0:
 4832 0000 D9030000 		.section	.debug_str,"MS",%progbits,1
 4832      02007600 
 4832      00000201 
 4832      FB0E0D00 
 4832      01010101 
 4833              	.LASF31:
 4834 0000 7363616E 		.ascii	"scanSpeedTbl\000"
 4834      53706565 
 4834      6454626C 
 4834      00
 4835              	.LASF34:
 4836 000d 6E756D62 		.ascii	"numberOfSensors\000"
 4836      65724F66 
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 137


 4836      53656E73 
 4836      6F727300 
 4837              	.LASF38:
 4838 001d 70747247 		.ascii	"ptrGetBitValue\000"
 4838      65744269 
 4838      7456616C 
 4838      756500
 4839              	.LASF48:
 4840 002c 43617053 		.ascii	"CapSense_CSD_BaseInit\000"
 4840      656E7365 
 4840      5F435344 
 4840      5F426173 
 4840      65496E69 
 4841              	.LASF111:
 4842 0042 43617053 		.ascii	"CapSense_CSD_lowBaselineReset\000"
 4842      656E7365 
 4842      5F435344 
 4842      5F6C6F77 
 4842      42617365 
 4843              	.LASF128:
 4844 0060 43617053 		.ascii	"CapSense_CSD_UpdateThresholds\000"
 4844      656E7365 
 4844      5F435344 
 4844      5F557064 
 4844      61746554 
 4845              	.LASF54:
 4846 007e 69735365 		.ascii	"isSensorEnabled\000"
 4846      6E736F72 
 4846      456E6162 
 4846      6C656400 
 4847              	.LASF78:
 4848 008e 6E756D4F 		.ascii	"numOfSensors\000"
 4848      6653656E 
 4848      736F7273 
 4848      00
 4849              	.LASF8:
 4850 009b 756E7369 		.ascii	"unsigned int\000"
 4850      676E6564 
 4850      20696E74 
 4850      00
 4851              	.LASF43:
 4852 00a8 746F7461 		.ascii	"totalSensorsNum\000"
 4852      6C53656E 
 4852      736F7273 
 4852      4E756D00 
 4853              	.LASF53:
 4854 00b8 43617053 		.ascii	"CapSense_CSD_InitializeEnabledBaselines\000"
 4854      656E7365 
 4854      5F435344 
 4854      5F496E69 
 4854      7469616C 
 4855              	.LASF55:
 4856 00e0 43617053 		.ascii	"CapSense_CSD_SetBaselineData\000"
 4856      656E7365 
 4856      5F435344 
 4856      5F536574 
 4856      42617365 
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 138


 4857              	.LASF126:
 4858 00fd 43617053 		.ascii	"CapSense_CSD_SetBitValue\000"
 4858      656E7365 
 4858      5F435344 
 4858      5F536574 
 4858      42697456 
 4859              	.LASF28:
 4860 0116 73616D70 		.ascii	"sampleMaxTbl\000"
 4860      6C654D61 
 4860      7854626C 
 4860      00
 4861              	.LASF26:
 4862 0123 7369676E 		.ascii	"signRegisterTbl\000"
 4862      52656769 
 4862      73746572 
 4862      54626C00 
 4863              	.LASF103:
 4864 0133 43617053 		.ascii	"CapSense_CSD_sensorRaw\000"
 4864      656E7365 
 4864      5F435344 
 4864      5F73656E 
 4864      736F7252 
 4865              	.LASF33:
 4866 014a 72617744 		.ascii	"rawDataIndex\000"
 4866      61746149 
 4866      6E646578 
 4866      00
 4867              	.LASF42:
 4868 0157 746F7461 		.ascii	"totalWidgetsNum\000"
 4868      6C576964 
 4868      67657473 
 4868      4E756D00 
 4869              	.LASF76:
 4870 0167 43617053 		.ascii	"CapSense_CSD_CheckIsWidgetActive\000"
 4870      656E7365 
 4870      5F435344 
 4870      5F436865 
 4870      636B4973 
 4871              	.LASF65:
 4872 0188 43617053 		.ascii	"CapSense_CSD_SetFingerThreshold\000"
 4872      656E7365 
 4872      5F435344 
 4872      5F536574 
 4872      46696E67 
 4873              	.LASF99:
 4874 01a8 43617053 		.ascii	"CapSense_CSD_GetDebounce\000"
 4874      656E7365 
 4874      5F435344 
 4874      5F476574 
 4874      4465626F 
 4875              	.LASF121:
 4876 01c1 43617053 		.ascii	"CapSense_CSD_enableRawFilters\000"
 4876      656E7365 
 4876      5F435344 
 4876      5F656E61 
 4876      626C6552 
 4877              	.LASF112:
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 139


 4878 01df 43617053 		.ascii	"CapSense_CSD_fingerThreshold\000"
 4878      656E7365 
 4878      5F435344 
 4878      5F66696E 
 4878      67657254 
 4879              	.LASF130:
 4880 01fc 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_CSD_CSHL.c\000"
 4880      72617465 
 4880      645F536F 
 4880      75726365 
 4880      5C50536F 
 4881              	.LASF102:
 4882 0227 43617053 		.ascii	"CapSense_CSD_debounceCounter\000"
 4882      656E7365 
 4882      5F435344 
 4882      5F646562 
 4882      6F756E63 
 4883              	.LASF62:
 4884 0244 43617053 		.ascii	"CapSense_CSD_GetNoiseThreshold\000"
 4884      656E7365 
 4884      5F435344 
 4884      5F476574 
 4884      4E6F6973 
 4885              	.LASF12:
 4886 0263 666C6F61 		.ascii	"float\000"
 4886      7400
 4887              	.LASF23:
 4888 0269 7265736F 		.ascii	"resolutionsTbl\000"
 4888      6C757469 
 4888      6F6E7354 
 4888      626C00
 4889              	.LASF25:
 4890 0278 72756E6E 		.ascii	"runningDifferenceTbl\000"
 4890      696E6744 
 4890      69666665 
 4890      72656E63 
 4890      6554626C 
 4891              	.LASF110:
 4892 028d 43617053 		.ascii	"CapSense_CSD_lowBaselineResetCnt\000"
 4892      656E7365 
 4892      5F435344 
 4892      5F6C6F77 
 4892      42617365 
 4893              	.LASF7:
 4894 02ae 6C6F6E67 		.ascii	"long long unsigned int\000"
 4894      206C6F6E 
 4894      6720756E 
 4894      7369676E 
 4894      65642069 
 4895              	.LASF52:
 4896 02c5 77696467 		.ascii	"widget\000"
 4896      657400
 4897              	.LASF66:
 4898 02cc 43617053 		.ascii	"CapSense_CSD_SetNoiseThreshold\000"
 4898      656E7365 
 4898      5F435344 
 4898      5F536574 
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 140


 4898      4E6F6973 
 4899              	.LASF93:
 4900 02eb 43617053 		.ascii	"CapSense_CSD_UpdateWidgetBaseline\000"
 4900      656E7365 
 4900      5F435344 
 4900      5F557064 
 4900      61746557 
 4901              	.LASF60:
 4902 030d 76616C75 		.ascii	"value\000"
 4902      6500
 4903              	.LASF68:
 4904 0313 43617053 		.ascii	"CapSense_CSD_SetNegativeNoiseThreshold\000"
 4904      656E7365 
 4904      5F435344 
 4904      5F536574 
 4904      4E656761 
 4905              	.LASF125:
 4906 033a 43617053 		.ascii	"CapSense_CSD_GetBitValue\000"
 4906      656E7365 
 4906      5F435344 
 4906      5F476574 
 4906      42697456 
 4907              	.LASF85:
 4908 0353 43617053 		.ascii	"CapSense_CSD_UpdateBaselineNoThreshold\000"
 4908      656E7365 
 4908      5F435344 
 4908      5F557064 
 4908      61746542 
 4909              	.LASF129:
 4910 037a 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4910      43313120 
 4910      352E342E 
 4910      31203230 
 4910      31363036 
 4911 03ad 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 4911      20726576 
 4911      6973696F 
 4911      6E203233 
 4911      37373135 
 4912 03e0 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4912      66756E63 
 4912      74696F6E 
 4912      2D736563 
 4912      74696F6E 
 4913              	.LASF106:
 4914 0408 43617053 		.ascii	"CapSense_CSD_sensorBaseline\000"
 4914      656E7365 
 4914      5F435344 
 4914      5F73656E 
 4914      736F7242 
 4915              	.LASF87:
 4916 0424 7369676E 		.ascii	"sign\000"
 4916      00
 4917              	.LASF24:
 4918 0429 6E6F6973 		.ascii	"noiseEnvelopeTbl\000"
 4918      65456E76 
 4918      656C6F70 
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 141


 4918      6554626C 
 4918      00
 4919              	.LASF86:
 4920 043a 63616C63 		.ascii	"calc\000"
 4920      00
 4921              	.LASF37:
 4922 043f 70747252 		.ascii	"ptrReadSensorRaw\000"
 4922      65616453 
 4922      656E736F 
 4922      72526177 
 4922      00
 4923              	.LASF47:
 4924 0450 43617053 		.ascii	"CapSense_CSD_CONFIG_TYPE_P4_v2_60\000"
 4924      656E7365 
 4924      5F435344 
 4924      5F434F4E 
 4924      4649475F 
 4925              	.LASF75:
 4926 0472 68797374 		.ascii	"hysteresis\000"
 4926      65726573 
 4926      697300
 4927              	.LASF69:
 4928 047d 43617053 		.ascii	"CapSense_CSD_SetDebounce\000"
 4928      656E7365 
 4928      5F435344 
 4928      5F536574 
 4928      4465626F 
 4929              	.LASF89:
 4930 0496 66696C74 		.ascii	"filteredRawData\000"
 4930      65726564 
 4930      52617744 
 4930      61746100 
 4931              	.LASF94:
 4932 04a6 73656E73 		.ascii	"sensorsPerWidget\000"
 4932      6F727350 
 4932      65725769 
 4932      64676574 
 4932      00
 4933              	.LASF124:
 4934 04b7 43617053 		.ascii	"CapSense_CSD_ScanEnabledWidgets\000"
 4934      656E7365 
 4934      5F435344 
 4934      5F536361 
 4934      6E456E61 
 4935              	.LASF41:
 4936 04d7 746F7461 		.ascii	"totalScanslotsNum\000"
 4936      6C536361 
 4936      6E736C6F 
 4936      74734E75 
 4936      6D00
 4937              	.LASF101:
 4938 04e9 43617053 		.ascii	"CapSense_CSD_DisableRawDataFilters\000"
 4938      656E7365 
 4938      5F435344 
 4938      5F446973 
 4938      61626C65 
 4939              	.LASF127:
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 142


 4940 050c 4D656173 		.ascii	"MeasureNoiseEnvelope_P4_v2_60\000"
 4940      7572654E 
 4940      6F697365 
 4940      456E7665 
 4940      6C6F7065 
 4941              	.LASF50:
 4942 052a 73656E73 		.ascii	"sensor\000"
 4942      6F7200
 4943              	.LASF44:
 4944 0531 73656E73 		.ascii	"sensetivitySeed\000"
 4944      65746976 
 4944      69747953 
 4944      65656400 
 4945              	.LASF118:
 4946 0541 43617053 		.ascii	"CapSense_CSD_numberOfSensors\000"
 4946      656E7365 
 4946      5F435344 
 4946      5F6E756D 
 4946      6265724F 
 4947              	.LASF14:
 4948 055e 63686172 		.ascii	"char\000"
 4948      00
 4949              	.LASF82:
 4950 0563 43617053 		.ascii	"CapSense_CSD_DisableWidget\000"
 4950      656E7365 
 4950      5F435344 
 4950      5F446973 
 4950      61626C65 
 4951              	.LASF32:
 4952 057e 70726573 		.ascii	"prescalerTable\000"
 4952      63616C65 
 4952      72546162 
 4952      6C6500
 4953              	.LASF10:
 4954 058d 75696E74 		.ascii	"uint16\000"
 4954      313600
 4955              	.LASF56:
 4956 0594 64617461 		.ascii	"data\000"
 4956      00
 4957              	.LASF17:
 4958 0599 69646163 		.ascii	"idac1LevelsTbl\000"
 4958      314C6576 
 4958      656C7354 
 4958      626C00
 4959              	.LASF64:
 4960 05a8 43617053 		.ascii	"CapSense_CSD_GetNegativeNoiseThreshold\000"
 4960      656E7365 
 4960      5F435344 
 4960      5F476574 
 4960      4E656761 
 4961              	.LASF77:
 4962 05cf 72617749 		.ascii	"rawIndex\000"
 4962      6E646578 
 4962      00
 4963              	.LASF83:
 4964 05d8 43617053 		.ascii	"CapSense_CSD_MedianFilter\000"
 4964      656E7365 
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 143


 4964      5F435344 
 4964      5F4D6564 
 4964      69616E46 
 4965              	.LASF113:
 4966 05f2 43617053 		.ascii	"CapSense_CSD_noiseThreshold\000"
 4966      656E7365 
 4966      5F435344 
 4966      5F6E6F69 
 4966      73655468 
 4967              	.LASF6:
 4968 060e 6C6F6E67 		.ascii	"long long int\000"
 4968      206C6F6E 
 4968      6720696E 
 4968      7400
 4969              	.LASF61:
 4970 061c 43617053 		.ascii	"CapSense_CSD_GetFingerThreshold\000"
 4970      656E7365 
 4970      5F435344 
 4970      5F476574 
 4970      46696E67 
 4971              	.LASF72:
 4972 063c 6465626F 		.ascii	"debounce\000"
 4972      756E6365 
 4972      00
 4973              	.LASF71:
 4974 0645 43617053 		.ascii	"CapSense_CSD_CheckIsSensorActive\000"
 4974      656E7365 
 4974      5F435344 
 4974      5F436865 
 4974      636B4973 
 4975              	.LASF84:
 4976 0666 43617053 		.ascii	"CapSense_CSD_IIR4Filter\000"
 4976      656E7365 
 4976      5F435344 
 4976      5F494952 
 4976      3446696C 
 4977              	.LASF36:
 4978 067e 70747250 		.ascii	"ptrPreScan\000"
 4978      72655363 
 4978      616E00
 4979              	.LASF63:
 4980 0689 43617053 		.ascii	"CapSense_CSD_GetFingerHysteresis\000"
 4980      656E7365 
 4980      5F435344 
 4980      5F476574 
 4980      46696E67 
 4981              	.LASF35:
 4982 06aa 70747247 		.ascii	"ptrGetRaw\000"
 4982      65745261 
 4982      7700
 4983              	.LASF97:
 4984 06b4 43617053 		.ascii	"CapSense_CSD_GetWidgetNumber\000"
 4984      656E7365 
 4984      5F435344 
 4984      5F476574 
 4984      57696467 
 4985              	.LASF92:
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 144


 4986 06d1 43617053 		.ascii	"CapSense_CSD_UpdateEnabledBaselines\000"
 4986      656E7365 
 4986      5F435344 
 4986      5F557064 
 4986      61746545 
 4987              	.LASF109:
 4988 06f5 43617053 		.ascii	"CapSense_CSD_sensorOnMask\000"
 4988      656E7365 
 4988      5F435344 
 4988      5F73656E 
 4988      736F724F 
 4989              	.LASF27:
 4990 070f 73616D70 		.ascii	"sampleMinTbl\000"
 4990      6C654D69 
 4990      6E54626C 
 4990      00
 4991              	.LASF11:
 4992 071c 75696E74 		.ascii	"uint32\000"
 4992      333200
 4993              	.LASF114:
 4994 0723 43617053 		.ascii	"CapSense_CSD_negativeNoiseThreshold\000"
 4994      656E7365 
 4994      5F435344 
 4994      5F6E6567 
 4994      61746976 
 4995              	.LASF40:
 4996 0747 43617053 		.ascii	"CapSense_CSD_CONFIG_TYPE_POINTERS_P4_v2_60\000"
 4996      656E7365 
 4996      5F435344 
 4996      5F434F4E 
 4996      4649475F 
 4997              	.LASF59:
 4998 0772 43617053 		.ascii	"CapSense_CSD_SetDiffCountData\000"
 4998      656E7365 
 4998      5F435344 
 4998      5F536574 
 4998      44696666 
 4999              	.LASF91:
 5000 0790 43617053 		.ascii	"CapSense_CSD_UpdateSensorBaseline\000"
 5000      656E7365 
 5000      5F435344 
 5000      5F557064 
 5000      61746553 
 5001              	.LASF119:
 5002 07b2 43617053 		.ascii	"CapSense_CSD_rawFilterData1\000"
 5002      656E7365 
 5002      5F435344 
 5002      5F726177 
 5002      46696C74 
 5003              	.LASF108:
 5004 07ce 43617053 		.ascii	"CapSense_CSD_sensorSignal\000"
 5004      656E7365 
 5004      5F435344 
 5004      5F73656E 
 5004      736F7253 
 5005              	.LASF70:
 5006 07e8 43617053 		.ascii	"CapSense_CSD_SetLowBaselineReset\000"
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 145


 5006      656E7365 
 5006      5F435344 
 5006      5F536574 
 5006      4C6F7742 
 5007              	.LASF117:
 5008 0809 43617053 		.ascii	"CapSense_CSD_rawDataIndex\000"
 5008      656E7365 
 5008      5F435344 
 5008      5F726177 
 5008      44617461 
 5009              	.LASF16:
 5010 0823 6C6F6E67 		.ascii	"long double\000"
 5010      20646F75 
 5010      626C6500 
 5011              	.LASF96:
 5012 082f 6C617374 		.ascii	"lastSensor\000"
 5012      53656E73 
 5012      6F7200
 5013              	.LASF120:
 5014 083a 43617053 		.ascii	"CapSense_CSD_config\000"
 5014      656E7365 
 5014      5F435344 
 5014      5F636F6E 
 5014      66696700 
 5015              	.LASF45:
 5016 084e 6866636C 		.ascii	"hfclkFreq_MHz\000"
 5016      6B467265 
 5016      715F4D48 
 5016      7A00
 5017              	.LASF104:
 5018 085c 43617053 		.ascii	"CapSense_CSD_sensorEnableMask\000"
 5018      656E7365 
 5018      5F435344 
 5018      5F73656E 
 5018      736F7245 
 5019              	.LASF18:
 5020 087a 69646163 		.ascii	"idac2LevelsTbl\000"
 5020      324C6576 
 5020      656C7354 
 5020      626C00
 5021              	.LASF2:
 5022 0889 73686F72 		.ascii	"short int\000"
 5022      7420696E 
 5022      7400
 5023              	.LASF4:
 5024 0893 6C6F6E67 		.ascii	"long int\000"
 5024      20696E74 
 5024      00
 5025              	.LASF95:
 5026 089c 66697273 		.ascii	"firstSensor\000"
 5026      7453656E 
 5026      736F7200 
 5027              	.LASF115:
 5028 08a8 43617053 		.ascii	"CapSense_CSD_hysteresis\000"
 5028      656E7365 
 5028      5F435344 
 5028      5F687973 
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 146


 5028      74657265 
 5029              	.LASF58:
 5030 08c0 43617053 		.ascii	"CapSense_CSD_GetDiffCountData\000"
 5030      656E7365 
 5030      5F435344 
 5030      5F476574 
 5030      44696666 
 5031              	.LASF22:
 5032 08de 77696467 		.ascii	"widgetNubmersTbl\000"
 5032      65744E75 
 5032      626D6572 
 5032      7354626C 
 5032      00
 5033              	.LASF80:
 5034 08ef 43617053 		.ascii	"CapSense_CSD_CheckIsAnyWidgetActive\000"
 5034      656E7365 
 5034      5F435344 
 5034      5F436865 
 5034      636B4973 
 5035              	.LASF122:
 5036 0913 43617053 		.ascii	"CapSense_CSD_ScanSensor\000"
 5036      656E7365 
 5036      5F435344 
 5036      5F536361 
 5036      6E53656E 
 5037              	.LASF131:
 5038 092b 443A5C5A 		.ascii	"D:\\Zuru Shaunak\\Documents\\PSoC Creator\\Workspac"
 5038      75727520 
 5038      53686175 
 5038      6E616B5C 
 5038      446F6375 
 5039 095a 6530325C 		.ascii	"e02\\Design01.cydsn\000"
 5039      44657369 
 5039      676E3031 
 5039      2E637964 
 5039      736E00
 5040              	.LASF30:
 5041 096d 6B56616C 		.ascii	"kValueTbl\000"
 5041      75655462 
 5041      6C00
 5042              	.LASF123:
 5043 0977 43617053 		.ascii	"CapSense_CSD_IsBusy\000"
 5043      656E7365 
 5043      5F435344 
 5043      5F497342 
 5043      75737900 
 5044              	.LASF57:
 5045 098b 43617053 		.ascii	"CapSense_CSD_GetBaselineData\000"
 5045      656E7365 
 5045      5F435344 
 5045      5F476574 
 5045      42617365 
 5046              	.LASF15:
 5047 09a8 73697A65 		.ascii	"sizetype\000"
 5047      74797065 
 5047      00
 5048              	.LASF5:
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 147


 5049 09b1 6C6F6E67 		.ascii	"long unsigned int\000"
 5049      20756E73 
 5049      69676E65 
 5049      6420696E 
 5049      7400
 5050              	.LASF46:
 5051 09c3 706F696E 		.ascii	"pointers\000"
 5051      74657273 
 5051      00
 5052              	.LASF98:
 5053 09cc 43617053 		.ascii	"CapSense_CSD_GetLowBaselineReset\000"
 5053      656E7365 
 5053      5F435344 
 5053      5F476574 
 5053      4C6F7742 
 5054              	.LASF116:
 5055 09ed 43617053 		.ascii	"CapSense_CSD_debounce\000"
 5055      656E7365 
 5055      5F435344 
 5055      5F646562 
 5055      6F756E63 
 5056              	.LASF90:
 5057 0a03 6E6F6973 		.ascii	"noiseThreshold\000"
 5057      65546872 
 5057      6573686F 
 5057      6C6400
 5058              	.LASF100:
 5059 0a12 43617053 		.ascii	"CapSense_CSD_EnableRawDataFilters\000"
 5059      656E7365 
 5059      5F435344 
 5059      5F456E61 
 5059      626C6552 
 5060              	.LASF67:
 5061 0a34 43617053 		.ascii	"CapSense_CSD_SetFingerHysteresis\000"
 5061      656E7365 
 5061      5F435344 
 5061      5F536574 
 5061      46696E67 
 5062              	.LASF29:
 5063 0a55 70726576 		.ascii	"previousSampleTbl\000"
 5063      696F7573 
 5063      53616D70 
 5063      6C655462 
 5063      6C00
 5064              	.LASF74:
 5065 0a67 66696E67 		.ascii	"fingerThreshold\000"
 5065      65725468 
 5065      72657368 
 5065      6F6C6400 
 5066              	.LASF20:
 5067 0a77 63686172 		.ascii	"chargeDivTbl\000"
 5067      67654469 
 5067      7654626C 
 5067      00
 5068              	.LASF105:
 5069 0a84 43617053 		.ascii	"CapSense_CSD_widgetNumber\000"
 5069      656E7365 
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 148


 5069      5F435344 
 5069      5F776964 
 5069      6765744E 
 5070              	.LASF1:
 5071 0a9e 756E7369 		.ascii	"unsigned char\000"
 5071      676E6564 
 5071      20636861 
 5071      7200
 5072              	.LASF73:
 5073 0aac 6465626F 		.ascii	"debounceIndex\000"
 5073      756E6365 
 5073      496E6465 
 5073      7800
 5074              	.LASF49:
 5075 0aba 43617053 		.ascii	"CapSense_CSD_InitializeSensorBaseline\000"
 5075      656E7365 
 5075      5F435344 
 5075      5F496E69 
 5075      7469616C 
 5076              	.LASF81:
 5077 0ae0 43617053 		.ascii	"CapSense_CSD_EnableWidget\000"
 5077      656E7365 
 5077      5F435344 
 5077      5F456E61 
 5077      626C6557 
 5078              	.LASF19:
 5079 0afa 73656E73 		.ascii	"sensetivityTbl\000"
 5079      65746976 
 5079      69747954 
 5079      626C00
 5080              	.LASF79:
 5081 0b09 73746174 		.ascii	"state\000"
 5081      6500
 5082              	.LASF21:
 5083 0b0f 6D6F6444 		.ascii	"modDivTbl\000"
 5083      69765462 
 5083      6C00
 5084              	.LASF0:
 5085 0b19 7369676E 		.ascii	"signed char\000"
 5085      65642063 
 5085      68617200 
 5086              	.LASF3:
 5087 0b25 73686F72 		.ascii	"short unsigned int\000"
 5087      7420756E 
 5087      7369676E 
 5087      65642069 
 5087      6E7400
 5088              	.LASF39:
 5089 0b38 70747253 		.ascii	"ptrSetBitValue\000"
 5089      65744269 
 5089      7456616C 
 5089      756500
 5090              	.LASF51:
 5091 0b47 43617053 		.ascii	"CapSense_CSD_InitializeAllBaselines\000"
 5091      656E7365 
 5091      5F435344 
 5091      5F496E69 
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccqOwDTe.s 			page 149


 5091      7469616C 
 5092              	.LASF88:
 5093 0b6b 74656D70 		.ascii	"tempRaw\000"
 5093      52617700 
 5094              	.LASF9:
 5095 0b73 75696E74 		.ascii	"uint8\000"
 5095      3800
 5096              	.LASF13:
 5097 0b79 646F7562 		.ascii	"double\000"
 5097      6C6500
 5098              	.LASF107:
 5099 0b80 43617053 		.ascii	"CapSense_CSD_sensorBaselineLow\000"
 5099      656E7365 
 5099      5F435344 
 5099      5F73656E 
 5099      736F7242 
 5100              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
