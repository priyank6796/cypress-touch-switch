ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysClkImoStart,"ax",%progbits
  20              		.align	2
  21              		.global	CySysClkImoStart
  22              		.code	16
  23              		.thumb_func
  24              		.type	CySysClkImoStart, %function
  25              	CySysClkImoStart:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.60
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2017, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 2


  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* #if (CY_IP_SRSSV2 && CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  75:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  76:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  77:Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  78:Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  79:Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  80:Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  81:Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  82:Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  83:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  84:Generated_Source\PSoC4/CyLib.c **** 
  85:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  86:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  87:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 3


  88:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  89:Generated_Source\PSoC4/CyLib.c **** 
  90:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  91:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  92:Generated_Source\PSoC4/CyLib.c **** 
  93:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  94:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  95:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  98:Generated_Source\PSoC4/CyLib.c **** *
  99:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 100:Generated_Source\PSoC4/CyLib.c **** * this function will also enable WCO lock if selected in the Design Wide
 101:Generated_Source\PSoC4/CyLib.c **** * Resources tab.
 102:Generated_Source\PSoC4/CyLib.c **** *
 103:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L / devices, this function will also enable USB lock if selected
 104:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 105:Generated_Source\PSoC4/CyLib.c **** *
 106:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 107:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 108:Generated_Source\PSoC4/CyLib.c **** {
  28              		.loc 1 108 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 109:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  33              		.loc 1 109 0
  34 0000 034A     		ldr	r2, .L2
  35 0002 1368     		ldr	r3, [r2]
  36 0004 8021     		movs	r1, #128
  37 0006 0906     		lsls	r1, r1, #24
  38 0008 0B43     		orrs	r3, r1
  39 000a 1360     		str	r3, [r2]
 110:Generated_Source\PSoC4/CyLib.c **** 
 111:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 112:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 113:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 114:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 115:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 116:Generated_Source\PSoC4/CyLib.c **** 
 117:Generated_Source\PSoC4/CyLib.c **** 
 118:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 119:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 120:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 121:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 122:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 123:Generated_Source\PSoC4/CyLib.c **** 
 124:Generated_Source\PSoC4/CyLib.c **** }
  40              		.loc 1 124 0
  41              		@ sp needed
  42 000c 7047     		bx	lr
  43              	.L3:
  44 000e C046     		.align	2
  45              	.L2:
  46 0010 08010B40 		.word	1074462984
  47              		.cfi_endproc
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 4


  48              	.LFE0:
  49              		.size	CySysClkImoStart, .-CySysClkImoStart
  50              		.section	.text.CySysClkImoStop,"ax",%progbits
  51              		.align	2
  52              		.global	CySysClkImoStop
  53              		.code	16
  54              		.thumb_func
  55              		.type	CySysClkImoStop, %function
  56              	CySysClkImoStop:
  57              	.LFB1:
 125:Generated_Source\PSoC4/CyLib.c **** 
 126:Generated_Source\PSoC4/CyLib.c **** 
 127:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 128:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 129:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 130:Generated_Source\PSoC4/CyLib.c **** *
 131:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 132:Generated_Source\PSoC4/CyLib.c **** *
 133:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 134:Generated_Source\PSoC4/CyLib.c **** * this function will also disable WCO lock.
 135:Generated_Source\PSoC4/CyLib.c **** *
 136:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 137:Generated_Source\PSoC4/CyLib.c **** *
 138:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 139:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 140:Generated_Source\PSoC4/CyLib.c **** {
  58              		.loc 1 140 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              		@ link register save eliminated.
 141:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 142:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 143:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 144:Generated_Source\PSoC4/CyLib.c **** 
 145:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 146:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 147:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 148:Generated_Source\PSoC4/CyLib.c **** 
 149:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
  63              		.loc 1 149 0
  64 0000 024A     		ldr	r2, .L5
  65 0002 1368     		ldr	r3, [r2]
  66 0004 5B00     		lsls	r3, r3, #1
  67 0006 5B08     		lsrs	r3, r3, #1
  68 0008 1360     		str	r3, [r2]
 150:Generated_Source\PSoC4/CyLib.c **** }
  69              		.loc 1 150 0
  70              		@ sp needed
  71 000a 7047     		bx	lr
  72              	.L6:
  73              		.align	2
  74              	.L5:
  75 000c 08010B40 		.word	1074462984
  76              		.cfi_endproc
  77              	.LFE1:
  78              		.size	CySysClkImoStop, .-CySysClkImoStop
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 5


  79              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
  80              		.align	2
  81              		.global	CySysClkWriteHfclkDirect
  82              		.code	16
  83              		.thumb_func
  84              		.type	CySysClkWriteHfclkDirect, %function
  85              	CySysClkWriteHfclkDirect:
  86              	.LFB2:
 151:Generated_Source\PSoC4/CyLib.c **** 
 152:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 153:Generated_Source\PSoC4/CyLib.c **** 
 154:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 155:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 156:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 157:Generated_Source\PSoC4/CyLib.c ****     *
 158:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 159:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 160:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 161:Generated_Source\PSoC4/CyLib.c ****     *
 162:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 163:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 164:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 165:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 166:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 167:Generated_Source\PSoC4/CyLib.c ****     *
 168:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 169:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 170:Generated_Source\PSoC4/CyLib.c ****     *
 171:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 172:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 173:Generated_Source\PSoC4/CyLib.c ****     *
 174:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 175:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 176:Generated_Source\PSoC4/CyLib.c ****     {
 177:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 178:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 179:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 180:Generated_Source\PSoC4/CyLib.c **** 
 181:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 182:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 183:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 184:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 185:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 186:Generated_Source\PSoC4/CyLib.c **** 
 187:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 188:Generated_Source\PSoC4/CyLib.c ****         {
 189:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 190:Generated_Source\PSoC4/CyLib.c **** 
 191:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 192:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 193:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 194:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 195:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 196:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 197:Generated_Source\PSoC4/CyLib.c **** 
 198:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 199:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 6


 200:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 201:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 202:Generated_Source\PSoC4/CyLib.c ****                 {
 203:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 204:Generated_Source\PSoC4/CyLib.c ****                     {
 205:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 206:Generated_Source\PSoC4/CyLib.c ****                         break;
 207:Generated_Source\PSoC4/CyLib.c ****                     }
 208:Generated_Source\PSoC4/CyLib.c ****                 }
 209:Generated_Source\PSoC4/CyLib.c ****             #else
 210:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 211:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 212:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 213:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 214:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 215:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 216:Generated_Source\PSoC4/CyLib.c ****                 #else
 217:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 218:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 219:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 220:Generated_Source\PSoC4/CyLib.c **** 
 221:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 222:Generated_Source\PSoC4/CyLib.c **** 
 223:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 224:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 225:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 226:Generated_Source\PSoC4/CyLib.c ****                 {
 227:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 228:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 229:Generated_Source\PSoC4/CyLib.c ****                 }
 230:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 231:Generated_Source\PSoC4/CyLib.c **** 
 232:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 233:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 234:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 235:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 236:Generated_Source\PSoC4/CyLib.c **** 
 237:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 238:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 239:Generated_Source\PSoC4/CyLib.c **** 
 240:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 241:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 242:Generated_Source\PSoC4/CyLib.c **** 
 243:Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 244:Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 245:Generated_Source\PSoC4/CyLib.c ****             {
 246:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 247:Generated_Source\PSoC4/CyLib.c ****             }
 248:Generated_Source\PSoC4/CyLib.c ****             else
 249:Generated_Source\PSoC4/CyLib.c ****             {
 250:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 251:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 252:Generated_Source\PSoC4/CyLib.c **** 
 253:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 254:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 255:Generated_Source\PSoC4/CyLib.c **** 
 256:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 7


 257:Generated_Source\PSoC4/CyLib.c ****             }
 258:Generated_Source\PSoC4/CyLib.c **** 
 259:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 260:Generated_Source\PSoC4/CyLib.c **** 
 261:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 262:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 263:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 264:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 265:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 266:Generated_Source\PSoC4/CyLib.c **** 
 267:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 268:Generated_Source\PSoC4/CyLib.c ****         }
 269:Generated_Source\PSoC4/CyLib.c ****     }
 270:Generated_Source\PSoC4/CyLib.c **** 
 271:Generated_Source\PSoC4/CyLib.c **** 
 272:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 273:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 274:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 275:Generated_Source\PSoC4/CyLib.c ****     *
 276:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 277:Generated_Source\PSoC4/CyLib.c ****     *
 278:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 279:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 280:Generated_Source\PSoC4/CyLib.c ****     *
 281:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 282:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 283:Generated_Source\PSoC4/CyLib.c ****     *
 284:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 285:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 286:Generated_Source\PSoC4/CyLib.c ****     {
 287:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 288:Generated_Source\PSoC4/CyLib.c ****     }
 289:Generated_Source\PSoC4/CyLib.c **** 
 290:Generated_Source\PSoC4/CyLib.c **** 
 291:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 292:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 293:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 294:Generated_Source\PSoC4/CyLib.c ****     *
 295:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 296:Generated_Source\PSoC4/CyLib.c ****     *
 297:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 298:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 299:Generated_Source\PSoC4/CyLib.c ****     *
 300:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 301:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 302:Generated_Source\PSoC4/CyLib.c ****     *
 303:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 304:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 305:Generated_Source\PSoC4/CyLib.c ****     {
 306:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 307:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 308:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 309:Generated_Source\PSoC4/CyLib.c ****     }
 310:Generated_Source\PSoC4/CyLib.c **** 
 311:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 312:Generated_Source\PSoC4/CyLib.c **** 
 313:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 8


 314:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 315:Generated_Source\PSoC4/CyLib.c **** 
 316:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 317:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 318:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 319:Generated_Source\PSoC4/CyLib.c ****     *
 320:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 321:Generated_Source\PSoC4/CyLib.c ****     *
 322:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 323:Generated_Source\PSoC4/CyLib.c ****     *
 324:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 325:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 326:Generated_Source\PSoC4/CyLib.c ****     *
 327:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 328:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 329:Generated_Source\PSoC4/CyLib.c ****     *
 330:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 331:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 332:Generated_Source\PSoC4/CyLib.c ****     {
 333:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 334:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 335:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 336:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 337:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 338:Generated_Source\PSoC4/CyLib.c **** 
 339:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 340:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 341:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_MASK;
 342:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 343:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 344:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 345:Generated_Source\PSoC4/CyLib.c **** 
 346:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 347:Generated_Source\PSoC4/CyLib.c ****     }
 348:Generated_Source\PSoC4/CyLib.c **** 
 349:Generated_Source\PSoC4/CyLib.c **** 
 350:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 351:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 352:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 353:Generated_Source\PSoC4/CyLib.c ****     *
 354:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 355:Generated_Source\PSoC4/CyLib.c ****     *
 356:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 357:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 358:Generated_Source\PSoC4/CyLib.c ****     *
 359:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 360:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 361:Generated_Source\PSoC4/CyLib.c ****     *
 362:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 363:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 364:Generated_Source\PSoC4/CyLib.c ****     {
 365:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 366:Generated_Source\PSoC4/CyLib.c **** 
 367:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 368:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 369:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 370:Generated_Source\PSoC4/CyLib.c ****                                     CySysClkImoTrim4;
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 9


 371:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 372:Generated_Source\PSoC4/CyLib.c ****     }
 373:Generated_Source\PSoC4/CyLib.c **** 
 374:Generated_Source\PSoC4/CyLib.c **** 
 375:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 376:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 377:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 378:Generated_Source\PSoC4/CyLib.c ****     *
 379:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 380:Generated_Source\PSoC4/CyLib.c ****     *
 381:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 382:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 383:Generated_Source\PSoC4/CyLib.c ****     *
 384:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 385:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 386:Generated_Source\PSoC4/CyLib.c ****     *
 387:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 388:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 389:Generated_Source\PSoC4/CyLib.c ****     {
 390:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 391:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 392:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 393:Generated_Source\PSoC4/CyLib.c ****     }
 394:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 395:Generated_Source\PSoC4/CyLib.c **** 
 396:Generated_Source\PSoC4/CyLib.c **** 
 397:Generated_Source\PSoC4/CyLib.c **** 
 398:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 399:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 400:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 401:Generated_Source\PSoC4/CyLib.c **** *
 402:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 403:Generated_Source\PSoC4/CyLib.c **** *
 404:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 405:Generated_Source\PSoC4/CyLib.c **** *
 406:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 407:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 408:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 409:Generated_Source\PSoC4/CyLib.c **** *
 410:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 411:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 412:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 413:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 414:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 415:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 416:Generated_Source\PSoC4/CyLib.c **** *
 417:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 418:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 419:Generated_Source\PSoC4/CyLib.c **** *
 420:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 421:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 422:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 423:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 424:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L.
 425:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L.
 426:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 427:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 10


 428:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 429:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 430:Generated_Source\PSoC4/CyLib.c **** {
  87              		.loc 1 430 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              	.LVL0:
  92 0000 10B5     		push	{r4, lr}
  93              		.cfi_def_cfa_offset 8
  94              		.cfi_offset 4, -8
  95              		.cfi_offset 14, -4
  96 0002 0400     		movs	r4, r0
 431:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 432:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 433:Generated_Source\PSoC4/CyLib.c **** 
 434:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
  97              		.loc 1 434 0
  98 0004 FFF7FEFF 		bl	CyEnterCriticalSection
  99              	.LVL1:
 435:Generated_Source\PSoC4/CyLib.c **** 
 436:Generated_Source\PSoC4/CyLib.c **** 
 437:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 100              		.loc 1 437 0
 101 0008 044A     		ldr	r2, .L8
 102 000a 1368     		ldr	r3, [r2]
 103 000c 0721     		movs	r1, #7
 104 000e 8B43     		bics	r3, r1
 105              	.LVL2:
 438:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 439:Generated_Source\PSoC4/CyLib.c **** 
 440:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 441:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 442:Generated_Source\PSoC4/CyLib.c ****     {
 443:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 444:Generated_Source\PSoC4/CyLib.c ****     }
 445:Generated_Source\PSoC4/CyLib.c ****     else
 446:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 447:Generated_Source\PSoC4/CyLib.c ****     {
 448:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 106              		.loc 1 448 0
 107 0010 0C40     		ands	r4, r1
 108              	.LVL3:
 109 0012 1C43     		orrs	r4, r3
 110              	.LVL4:
 449:Generated_Source\PSoC4/CyLib.c ****     }
 450:Generated_Source\PSoC4/CyLib.c **** 
 451:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 111              		.loc 1 451 0
 112 0014 1460     		str	r4, [r2]
 452:Generated_Source\PSoC4/CyLib.c **** 
 453:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 113              		.loc 1 453 0
 114 0016 FFF7FEFF 		bl	CyExitCriticalSection
 115              	.LVL5:
 454:Generated_Source\PSoC4/CyLib.c **** }
 116              		.loc 1 454 0
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 11


 117              		@ sp needed
 118              	.LVL6:
 119 001a 10BD     		pop	{r4, pc}
 120              	.L9:
 121              		.align	2
 122              	.L8:
 123 001c 00010B40 		.word	1074462976
 124              		.cfi_endproc
 125              	.LFE2:
 126              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 127              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 128              		.align	2
 129              		.global	CySysEnablePumpClock
 130              		.code	16
 131              		.thumb_func
 132              		.type	CySysEnablePumpClock, %function
 133              	CySysEnablePumpClock:
 134              	.LFB3:
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c **** 
 457:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 458:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 459:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 460:Generated_Source\PSoC4/CyLib.c **** *
 461:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 462:Generated_Source\PSoC4/CyLib.c **** *
 463:Generated_Source\PSoC4/CyLib.c **** * \param enable  
 464:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 465:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of 
 466:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 467:Generated_Source\PSoC4/CyLib.c **** *
 468:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 469:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation 
 470:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 471:Generated_Source\PSoC4/CyLib.c **** *
 472:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 473:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 474:Generated_Source\PSoC4/CyLib.c **** {
 135              		.loc 1 474 0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139              		@ link register save eliminated.
 140              	.LVL7:
 475:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 476:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 141              		.loc 1 476 0
 142 0000 C307     		lsls	r3, r0, #31
 143 0002 07D5     		bpl	.L11
 477:Generated_Source\PSoC4/CyLib.c ****         {
 478:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 144              		.loc 1 478 0
 145 0004 094A     		ldr	r2, .L13
 146 0006 1168     		ldr	r1, [r2]
 147 0008 094B     		ldr	r3, .L13+4
 148 000a 1B68     		ldr	r3, [r3]
 149 000c 5B06     		lsls	r3, r3, #25
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 12


 150 000e 0B43     		orrs	r3, r1
 151 0010 1360     		str	r3, [r2]
 152 0012 0AE0     		b	.L10
 153              	.L11:
 479:Generated_Source\PSoC4/CyLib.c ****         }
 480:Generated_Source\PSoC4/CyLib.c ****         else
 481:Generated_Source\PSoC4/CyLib.c ****         {
 482:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 154              		.loc 1 482 0
 155 0014 054A     		ldr	r2, .L13
 156 0016 1368     		ldr	r3, [r2]
 157 0018 5B0E     		lsrs	r3, r3, #25
 158 001a 0721     		movs	r1, #7
 159 001c 0B40     		ands	r3, r1
 160 001e 0449     		ldr	r1, .L13+4
 161 0020 0B60     		str	r3, [r1]
 483:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 484:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 162              		.loc 1 484 0
 163 0022 1168     		ldr	r1, [r2]
 164 0024 034B     		ldr	r3, .L13+8
 165 0026 0B40     		ands	r3, r1
 166 0028 1360     		str	r3, [r2]
 167              	.L10:
 485:Generated_Source\PSoC4/CyLib.c ****         }
 486:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 487:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 488:Generated_Source\PSoC4/CyLib.c ****         {
 489:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 490:Generated_Source\PSoC4/CyLib.c ****         }
 491:Generated_Source\PSoC4/CyLib.c ****         else
 492:Generated_Source\PSoC4/CyLib.c ****         {
 493:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & 
 494:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 495:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 496:Generated_Source\PSoC4/CyLib.c ****         }
 497:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 498:Generated_Source\PSoC4/CyLib.c **** }
 168              		.loc 1 498 0
 169              		@ sp needed
 170 002a 7047     		bx	lr
 171              	.L14:
 172              		.align	2
 173              	.L13:
 174 002c 08010B40 		.word	1074462984
 175 0030 00000000 		.word	.LANCHOR0
 176 0034 FFFFFFF1 		.word	-234881025
 177              		.cfi_endproc
 178              	.LFE3:
 179              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 180              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 181              		.align	2
 182              		.global	CySysClkGetSysclkSource
 183              		.code	16
 184              		.thumb_func
 185              		.type	CySysClkGetSysclkSource, %function
 186              	CySysClkGetSysclkSource:
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 13


 187              	.LFB4:
 499:Generated_Source\PSoC4/CyLib.c **** 
 500:Generated_Source\PSoC4/CyLib.c **** 
 501:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 502:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 503:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 504:Generated_Source\PSoC4/CyLib.c **** *
 505:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 506:Generated_Source\PSoC4/CyLib.c **** *
 507:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 508:Generated_Source\PSoC4/CyLib.c **** *
 509:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 510:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 511:Generated_Source\PSoC4/CyLib.c **** {
 188              		.loc 1 511 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192 0000 10B5     		push	{r4, lr}
 193              		.cfi_def_cfa_offset 8
 194              		.cfi_offset 4, -8
 195              		.cfi_offset 14, -4
 512:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 513:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 514:Generated_Source\PSoC4/CyLib.c **** 
 515:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 196              		.loc 1 515 0
 197 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 198              	.LVL8:
 516:Generated_Source\PSoC4/CyLib.c **** 
 517:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 518:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 519:Generated_Source\PSoC4/CyLib.c ****     {
 520:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 521:Generated_Source\PSoC4/CyLib.c ****     }
 522:Generated_Source\PSoC4/CyLib.c ****     else
 523:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 524:Generated_Source\PSoC4/CyLib.c ****     {
 525:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 199              		.loc 1 525 0
 200 0006 044B     		ldr	r3, .L16
 201 0008 1B68     		ldr	r3, [r3]
 202 000a 0724     		movs	r4, #7
 203 000c 1C40     		ands	r4, r3
 204              	.LVL9:
 526:Generated_Source\PSoC4/CyLib.c ****     }
 527:Generated_Source\PSoC4/CyLib.c **** 
 528:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 205              		.loc 1 528 0
 206 000e FFF7FEFF 		bl	CyExitCriticalSection
 207              	.LVL10:
 529:Generated_Source\PSoC4/CyLib.c **** 
 530:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 531:Generated_Source\PSoC4/CyLib.c **** }
 208              		.loc 1 531 0
 209 0012 2000     		movs	r0, r4
 210              		@ sp needed
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 14


 211              	.LVL11:
 212 0014 10BD     		pop	{r4, pc}
 213              	.L17:
 214 0016 C046     		.align	2
 215              	.L16:
 216 0018 00010B40 		.word	1074462976
 217              		.cfi_endproc
 218              	.LFE4:
 219              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 220              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 221              		.align	2
 222              		.global	CySysClkWriteSysclkDiv
 223              		.code	16
 224              		.thumb_func
 225              		.type	CySysClkWriteSysclkDiv, %function
 226              	CySysClkWriteSysclkDiv:
 227              	.LFB5:
 532:Generated_Source\PSoC4/CyLib.c **** 
 533:Generated_Source\PSoC4/CyLib.c **** 
 534:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 535:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 536:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 537:Generated_Source\PSoC4/CyLib.c **** *
 538:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 539:Generated_Source\PSoC4/CyLib.c **** *
 540:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 541:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 542:Generated_Source\PSoC4/CyLib.c **** *
 543:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 544:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 545:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 546:Generated_Source\PSoC4/CyLib.c **** *
 547:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 548:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 549:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 550:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 551:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 552:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 553:Generated_Source\PSoC4/CyLib.c **** *
 554:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 555:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 556:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 557:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 558:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 559:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 560:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 561:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 562:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 563:Generated_Source\PSoC4/CyLib.c **** *
 564:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 565:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 566:Generated_Source\PSoC4/CyLib.c **** {
 228              		.loc 1 566 0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232              	.LVL12:
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 15


 233 0000 10B5     		push	{r4, lr}
 234              		.cfi_def_cfa_offset 8
 235              		.cfi_offset 4, -8
 236              		.cfi_offset 14, -4
 237 0002 0400     		movs	r4, r0
 567:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 568:Generated_Source\PSoC4/CyLib.c **** 
 569:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 238              		.loc 1 569 0
 239 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 240              	.LVL13:
 570:Generated_Source\PSoC4/CyLib.c **** 
 571:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 241              		.loc 1 571 0
 242 0008 E304     		lsls	r3, r4, #19
 243 000a E022     		movs	r2, #224
 244 000c 9203     		lsls	r2, r2, #14
 245 000e 1340     		ands	r3, r2
 246 0010 1900     		movs	r1, r3
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 573:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 247              		.loc 1 573 0
 248 0012 054C     		ldr	r4, .L19
 249              	.LVL14:
 250 0014 2368     		ldr	r3, [r4]
 251 0016 054A     		ldr	r2, .L19+4
 252 0018 1A40     		ands	r2, r3
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 253              		.loc 1 572 0
 254 001a 0B00     		movs	r3, r1
 255 001c 1343     		orrs	r3, r2
 571:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 256              		.loc 1 571 0
 257 001e 2360     		str	r3, [r4]
 574:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 575:Generated_Source\PSoC4/CyLib.c **** 
 576:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 258              		.loc 1 576 0
 259 0020 FFF7FEFF 		bl	CyExitCriticalSection
 260              	.LVL15:
 577:Generated_Source\PSoC4/CyLib.c **** }
 261              		.loc 1 577 0
 262              		@ sp needed
 263 0024 10BD     		pop	{r4, pc}
 264              	.L20:
 265 0026 C046     		.align	2
 266              	.L19:
 267 0028 00010B40 		.word	1074462976
 268 002c FFFFC7FF 		.word	-3670017
 269              		.cfi_endproc
 270              	.LFE5:
 271              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 272              		.section	.text.CySysLvdDisable,"ax",%progbits
 273              		.align	2
 274              		.global	CySysLvdDisable
 275              		.code	16
 276              		.thumb_func
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 16


 277              		.type	CySysLvdDisable, %function
 278              	CySysLvdDisable:
 279              	.LFB8:
 578:Generated_Source\PSoC4/CyLib.c **** 
 579:Generated_Source\PSoC4/CyLib.c **** 
 580:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 581:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 582:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 583:Generated_Source\PSoC4/CyLib.c **** *
 584:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 585:Generated_Source\PSoC4/CyLib.c **** *
 586:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 587:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 588:Generated_Source\PSoC4/CyLib.c **** *
 589:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 590:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 591:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 592:Generated_Source\PSoC4/CyLib.c **** *
 593:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 594:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 595:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 596:Generated_Source\PSoC4/CyLib.c **** *
 597:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 598:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 599:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 600:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 601:Generated_Source\PSoC4/CyLib.c **** *
 602:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 603:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 604:Generated_Source\PSoC4/CyLib.c **** *
 605:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 606:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 607:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 608:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 609:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 610:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 611:Generated_Source\PSoC4/CyLib.c **** *
 612:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 613:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 614:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 615:Generated_Source\PSoC4/CyLib.c **** *
 616:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 617:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 618:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC 4400: Valid range [24-48] with step size equals
 619:Generated_Source\PSoC4/CyLib.c **** * 4.
 620:Generated_Source\PSoC4/CyLib.c **** *
 621:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 622:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 623:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 624:Generated_Source\PSoC4/CyLib.c ****     {
 625:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 626:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 627:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 628:Generated_Source\PSoC4/CyLib.c ****         #else
 629:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 630:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 631:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 17


 632:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 633:Generated_Source\PSoC4/CyLib.c ****             uint8  imoTrim1Value;
 634:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 635:Generated_Source\PSoC4/CyLib.c **** 
 636:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 637:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 638:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 639:Generated_Source\PSoC4/CyLib.c **** 
 640:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 641:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 642:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 643:Generated_Source\PSoC4/CyLib.c **** 
 644:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 645:Generated_Source\PSoC4/CyLib.c **** 
 646:Generated_Source\PSoC4/CyLib.c **** 
 647:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 648:Generated_Source\PSoC4/CyLib.c **** 
 649:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 650:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 651:Generated_Source\PSoC4/CyLib.c ****             {
 652:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 653:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 654:Generated_Source\PSoC4/CyLib.c ****             }
 655:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 656:Generated_Source\PSoC4/CyLib.c **** 
 657:Generated_Source\PSoC4/CyLib.c **** 
 658:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 659:Generated_Source\PSoC4/CyLib.c **** 
 660:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 661:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 662:Generated_Source\PSoC4/CyLib.c ****                 {
 663:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 664:Generated_Source\PSoC4/CyLib.c **** 
 665:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 666:Generated_Source\PSoC4/CyLib.c ****                 {
 667:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 668:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 669:Generated_Source\PSoC4/CyLib.c ****                 }
 670:Generated_Source\PSoC4/CyLib.c **** 
 671:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 672:Generated_Source\PSoC4/CyLib.c ****                 }
 673:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 674:Generated_Source\PSoC4/CyLib.c **** 
 675:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 676:Generated_Source\PSoC4/CyLib.c **** 
 677:Generated_Source\PSoC4/CyLib.c **** 
 678:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 679:Generated_Source\PSoC4/CyLib.c **** 
 680:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 681:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 682:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 683:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 684:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 685:Generated_Source\PSoC4/CyLib.c **** 
 686:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 687:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 688:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 18


 689:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 690:Generated_Source\PSoC4/CyLib.c **** 
 691:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 692:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 693:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 694:Generated_Source\PSoC4/CyLib.c **** 
 695:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 696:Generated_Source\PSoC4/CyLib.c **** 
 697:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 698:Generated_Source\PSoC4/CyLib.c ****         {
 699:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 700:Generated_Source\PSoC4/CyLib.c ****             {
 701:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 702:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 703:Generated_Source\PSoC4/CyLib.c ****             }
 704:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 705:Generated_Source\PSoC4/CyLib.c ****             {
 706:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 707:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 708:Generated_Source\PSoC4/CyLib.c ****             }
 709:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 710:Generated_Source\PSoC4/CyLib.c ****             {
 711:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 712:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 713:Generated_Source\PSoC4/CyLib.c ****             }
 714:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 715:Generated_Source\PSoC4/CyLib.c ****             {
 716:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 717:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 718:Generated_Source\PSoC4/CyLib.c ****             }
 719:Generated_Source\PSoC4/CyLib.c ****             else
 720:Generated_Source\PSoC4/CyLib.c ****             {
 721:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 722:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 723:Generated_Source\PSoC4/CyLib.c ****             }
 724:Generated_Source\PSoC4/CyLib.c **** 
 725:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 726:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 727:Generated_Source\PSoC4/CyLib.c **** 
 728:Generated_Source\PSoC4/CyLib.c **** 
 729:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 730:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 731:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 732:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 733:Generated_Source\PSoC4/CyLib.c ****             *
 734:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 735:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 736:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 737:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 738:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 739:Generated_Source\PSoC4/CyLib.c ****             {
 740:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 741:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 742:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 743:Generated_Source\PSoC4/CyLib.c **** 
 744:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 745:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 19


 746:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 747:Generated_Source\PSoC4/CyLib.c ****             }
 748:Generated_Source\PSoC4/CyLib.c ****             else
 749:Generated_Source\PSoC4/CyLib.c ****             {
 750:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 751:Generated_Source\PSoC4/CyLib.c ****             }
 752:Generated_Source\PSoC4/CyLib.c **** 
 753:Generated_Source\PSoC4/CyLib.c **** 
 754:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 755:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 756:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 757:Generated_Source\PSoC4/CyLib.c ****             *
 758:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 759:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 760:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 761:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 762:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 763:Generated_Source\PSoC4/CyLib.c ****             {
 764:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 765:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 766:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 767:Generated_Source\PSoC4/CyLib.c ****             }
 768:Generated_Source\PSoC4/CyLib.c **** 
 769:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 770:Generated_Source\PSoC4/CyLib.c **** 
 771:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 772:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 773:Generated_Source\PSoC4/CyLib.c ****                 {
 774:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 775:Generated_Source\PSoC4/CyLib.c ****                 }
 776:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 777:Generated_Source\PSoC4/CyLib.c ****                 {
 778:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 779:Generated_Source\PSoC4/CyLib.c ****                 }
 780:Generated_Source\PSoC4/CyLib.c ****                 else
 781:Generated_Source\PSoC4/CyLib.c ****                 {
 782:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE
 783:Generated_Source\PSoC4/CyLib.c ****                 }
 784:Generated_Source\PSoC4/CyLib.c ****             #else
 785:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFF
 786:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 787:Generated_Source\PSoC4/CyLib.c **** 
 788:Generated_Source\PSoC4/CyLib.c **** 
 789:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 790:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 791:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 792:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 793:Generated_Source\PSoC4/CyLib.c **** 
 794:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 795:Generated_Source\PSoC4/CyLib.c ****             {
 796:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 797:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 798:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 799:Generated_Source\PSoC4/CyLib.c ****             }
 800:Generated_Source\PSoC4/CyLib.c ****         }
 801:Generated_Source\PSoC4/CyLib.c ****         else
 802:Generated_Source\PSoC4/CyLib.c ****         {
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 20


 803:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 804:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 805:Generated_Source\PSoC4/CyLib.c ****         }
 806:Generated_Source\PSoC4/CyLib.c **** 
 807:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 808:Generated_Source\PSoC4/CyLib.c **** 
 809:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 810:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 811:Generated_Source\PSoC4/CyLib.c ****             {
 812:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 813:Generated_Source\PSoC4/CyLib.c ****             }
 814:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 815:Generated_Source\PSoC4/CyLib.c **** 
 816:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 817:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 818:Generated_Source\PSoC4/CyLib.c ****             {
 819:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 820:Generated_Source\PSoC4/CyLib.c ****             }
 821:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 822:Generated_Source\PSoC4/CyLib.c **** 
 823:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 824:Generated_Source\PSoC4/CyLib.c ****     }
 825:Generated_Source\PSoC4/CyLib.c **** 
 826:Generated_Source\PSoC4/CyLib.c **** #else
 827:Generated_Source\PSoC4/CyLib.c **** 
 828:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 829:Generated_Source\PSoC4/CyLib.c ****     {
 830:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 831:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 832:Generated_Source\PSoC4/CyLib.c **** 
 833:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 834:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 835:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 836:Generated_Source\PSoC4/CyLib.c ****         
 837:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 838:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 839:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 840:Generated_Source\PSoC4/CyLib.c **** 
 841:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 842:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 843:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 844:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
 845:Generated_Source\PSoC4/CyLib.c ****         #else
 846:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 847:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 848:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 849:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 850:Generated_Source\PSoC4/CyLib.c ****         {
 851:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 852:Generated_Source\PSoC4/CyLib.c **** 
 853:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 854:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 855:Generated_Source\PSoC4/CyLib.c ****                 {
 856:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 857:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 858:Generated_Source\PSoC4/CyLib.c ****                 }
 859:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 21


 860:Generated_Source\PSoC4/CyLib.c **** 
 861:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 862:Generated_Source\PSoC4/CyLib.c **** 
 863:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 864:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 865:Generated_Source\PSoC4/CyLib.c ****                     {
 866:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 867:Generated_Source\PSoC4/CyLib.c **** 
 868:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 869:Generated_Source\PSoC4/CyLib.c ****                     {
 870:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 871:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 872:Generated_Source\PSoC4/CyLib.c ****                     }
 873:Generated_Source\PSoC4/CyLib.c **** 
 874:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 875:Generated_Source\PSoC4/CyLib.c ****                     }
 876:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 877:Generated_Source\PSoC4/CyLib.c **** 
 878:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 879:Generated_Source\PSoC4/CyLib.c **** 
 880:Generated_Source\PSoC4/CyLib.c **** 
 881:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 882:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 883:Generated_Source\PSoC4/CyLib.c **** 
 884:Generated_Source\PSoC4/CyLib.c **** 
 885:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 886:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 887:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 888:Generated_Source\PSoC4/CyLib.c ****                 {
 889:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 890:Generated_Source\PSoC4/CyLib.c ****                 }
 891:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 892:Generated_Source\PSoC4/CyLib.c ****                 {
 893:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 894:Generated_Source\PSoC4/CyLib.c ****                 }
 895:Generated_Source\PSoC4/CyLib.c ****                 else
 896:Generated_Source\PSoC4/CyLib.c ****                 {
 897:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
 898:Generated_Source\PSoC4/CyLib.c ****                 }
 899:Generated_Source\PSoC4/CyLib.c ****             #else
 900:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 901:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 902:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 903:Generated_Source\PSoC4/CyLib.c **** 
 904:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 905:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 906:Generated_Source\PSoC4/CyLib.c **** 
 907:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 908:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 909:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 910:Generated_Source\PSoC4/CyLib.c **** 
 911:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 912:Generated_Source\PSoC4/CyLib.c **** 
 913:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 914:Generated_Source\PSoC4/CyLib.c ****             {
 915:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 916:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 22


 917:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 918:Generated_Source\PSoC4/CyLib.c **** 
 919:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 920:Generated_Source\PSoC4/CyLib.c **** 
 921:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 922:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 923:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 924:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 925:Generated_Source\PSoC4/CyLib.c ****             }
 926:Generated_Source\PSoC4/CyLib.c **** 
 927:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 928:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
 929:Generated_Source\PSoC4/CyLib.c ****                 {
 930:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
 931:Generated_Source\PSoC4/CyLib.c ****                 }
 932:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 933:Generated_Source\PSoC4/CyLib.c ****         
 934:Generated_Source\PSoC4/CyLib.c ****         
 935:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 936:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
 937:Generated_Source\PSoC4/CyLib.c ****                 {
 938:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
 939:Generated_Source\PSoC4/CyLib.c ****                 }
 940:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 941:Generated_Source\PSoC4/CyLib.c **** 
 942:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 943:Generated_Source\PSoC4/CyLib.c ****         }
 944:Generated_Source\PSoC4/CyLib.c ****         else
 945:Generated_Source\PSoC4/CyLib.c ****         {
 946:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 947:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 948:Generated_Source\PSoC4/CyLib.c ****         }
 949:Generated_Source\PSoC4/CyLib.c ****     }
 950:Generated_Source\PSoC4/CyLib.c **** 
 951:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 952:Generated_Source\PSoC4/CyLib.c **** 
 953:Generated_Source\PSoC4/CyLib.c **** 
 954:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 955:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 956:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 957:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 958:Generated_Source\PSoC4/CyLib.c ****     *
 959:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
 960:Generated_Source\PSoC4/CyLib.c ****     *
 961:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
 962:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 963:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
 964:Generated_Source\PSoC4/CyLib.c ****     *
 965:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 966:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 967:Generated_Source\PSoC4/CyLib.c ****     *
 968:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
 969:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 970:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
 971:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
 972:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 973:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 23


 974:Generated_Source\PSoC4/CyLib.c ****     *
 975:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 976:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 977:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 978:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 979:Generated_Source\PSoC4/CyLib.c ****     *
 980:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 981:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 982:Generated_Source\PSoC4/CyLib.c ****     {
 983:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 984:Generated_Source\PSoC4/CyLib.c **** 
 985:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 986:Generated_Source\PSoC4/CyLib.c **** 
 987:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 988:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 989:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 990:Generated_Source\PSoC4/CyLib.c **** 
 991:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 992:Generated_Source\PSoC4/CyLib.c ****     }
 993:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 994:Generated_Source\PSoC4/CyLib.c **** 
 995:Generated_Source\PSoC4/CyLib.c **** 
 996:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
 997:Generated_Source\PSoC4/CyLib.c **** 
 998:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 999:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1000:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1001:Generated_Source\PSoC4/CyLib.c ****     *
1002:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1003:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1004:Generated_Source\PSoC4/CyLib.c ****     *
1005:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1006:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1007:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1008:Generated_Source\PSoC4/CyLib.c ****     * called.
1009:Generated_Source\PSoC4/CyLib.c ****     *
1010:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1011:Generated_Source\PSoC4/CyLib.c ****     *
1012:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1013:Generated_Source\PSoC4/CyLib.c ****     *
1014:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1015:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1016:Generated_Source\PSoC4/CyLib.c ****     *
1017:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1018:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1019:Generated_Source\PSoC4/CyLib.c ****     *
1020:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1021:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1022:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1023:Generated_Source\PSoC4/CyLib.c ****     *
1024:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1025:Generated_Source\PSoC4/CyLib.c ****     *
1026:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1027:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1028:Generated_Source\PSoC4/CyLib.c ****     {
1029:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1030:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 24


1031:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1032:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1033:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1036:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1037:Generated_Source\PSoC4/CyLib.c **** 
1038:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1039:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1040:Generated_Source\PSoC4/CyLib.c ****         
1041:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1042:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1043:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1044:Generated_Source\PSoC4/CyLib.c ****             
1045:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1046:Generated_Source\PSoC4/CyLib.c ****             {
1047:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1048:Generated_Source\PSoC4/CyLib.c ****             }
1049:Generated_Source\PSoC4/CyLib.c ****             else
1050:Generated_Source\PSoC4/CyLib.c ****             {
1051:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1052:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1053:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1054:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1055:Generated_Source\PSoC4/CyLib.c ****             
1056:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1057:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1058:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1059:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1060:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1061:Generated_Source\PSoC4/CyLib.c ****                 
1062:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1063:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1064:Generated_Source\PSoC4/CyLib.c ****                 {
1065:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1066:Generated_Source\PSoC4/CyLib.c ****                 }
1067:Generated_Source\PSoC4/CyLib.c ****                 
1068:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1069:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1070:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1071:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1072:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1073:Generated_Source\PSoC4/CyLib.c **** 
1074:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1075:Generated_Source\PSoC4/CyLib.c ****                 {
1076:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1077:Generated_Source\PSoC4/CyLib.c ****                 }
1078:Generated_Source\PSoC4/CyLib.c **** 
1079:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1080:Generated_Source\PSoC4/CyLib.c ****                 {
1081:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1082:Generated_Source\PSoC4/CyLib.c ****                 }
1083:Generated_Source\PSoC4/CyLib.c ****                 
1084:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1085:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1086:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1087:Generated_Source\PSoC4/CyLib.c ****                 
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 25


1088:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1089:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1090:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1091:Generated_Source\PSoC4/CyLib.c ****                 #else
1092:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1093:Generated_Source\PSoC4/CyLib.c ****                 #endif
1094:Generated_Source\PSoC4/CyLib.c ****                 
1095:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1096:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1097:Generated_Source\PSoC4/CyLib.c ****                 {
1098:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1099:Generated_Source\PSoC4/CyLib.c ****                 }
1100:Generated_Source\PSoC4/CyLib.c ****                 
1101:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1102:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD | 
1103:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1104:Generated_Source\PSoC4/CyLib.c ****                                             
1105:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1106:Generated_Source\PSoC4/CyLib.c ****                 {
1107:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1108:Generated_Source\PSoC4/CyLib.c ****                 }
1109:Generated_Source\PSoC4/CyLib.c **** 
1110:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1111:Generated_Source\PSoC4/CyLib.c ****                 
1112:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1113:Generated_Source\PSoC4/CyLib.c ****                 
1114:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1115:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1116:Generated_Source\PSoC4/CyLib.c ****                 
1117:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1118:Generated_Source\PSoC4/CyLib.c ****                 {
1119:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1120:Generated_Source\PSoC4/CyLib.c ****                 }
1121:Generated_Source\PSoC4/CyLib.c ****                 
1122:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1123:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1124:Generated_Source\PSoC4/CyLib.c ****                 
1125:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1126:Generated_Source\PSoC4/CyLib.c ****                 {
1127:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1128:Generated_Source\PSoC4/CyLib.c ****                 }
1129:Generated_Source\PSoC4/CyLib.c ****                 
1130:Generated_Source\PSoC4/CyLib.c ****             }
1131:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 */
1132:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1133:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1134:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1135:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1136:Generated_Source\PSoC4/CyLib.c **** 
1137:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1138:Generated_Source\PSoC4/CyLib.c ****         {
1139:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1140:Generated_Source\PSoC4/CyLib.c **** 
1141:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1142:Generated_Source\PSoC4/CyLib.c ****             {
1143:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1144:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 26


1145:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1146:Generated_Source\PSoC4/CyLib.c ****                 {
1147:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1148:Generated_Source\PSoC4/CyLib.c ****                     break;
1149:Generated_Source\PSoC4/CyLib.c ****                 }
1150:Generated_Source\PSoC4/CyLib.c ****             }
1151:Generated_Source\PSoC4/CyLib.c **** 
1152:Generated_Source\PSoC4/CyLib.c ****         }
1153:Generated_Source\PSoC4/CyLib.c **** 
1154:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1155:Generated_Source\PSoC4/CyLib.c ****     }
1156:Generated_Source\PSoC4/CyLib.c **** 
1157:Generated_Source\PSoC4/CyLib.c **** 
1158:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1159:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1160:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1161:Generated_Source\PSoC4/CyLib.c ****     *
1162:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1163:Generated_Source\PSoC4/CyLib.c ****     *
1164:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1165:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1166:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1167:Generated_Source\PSoC4/CyLib.c ****     *
1168:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1169:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1170:Generated_Source\PSoC4/CyLib.c ****     {
1171:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1172:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1173:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1174:Generated_Source\PSoC4/CyLib.c **** 
1175:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1176:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1177:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1178:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1179:Generated_Source\PSoC4/CyLib.c ****         #else
1180:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1181:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1182:Generated_Source\PSoC4/CyLib.c ****     }
1183:Generated_Source\PSoC4/CyLib.c **** 
1184:Generated_Source\PSoC4/CyLib.c **** 
1185:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1186:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1187:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1188:Generated_Source\PSoC4/CyLib.c ****     *
1189:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1190:Generated_Source\PSoC4/CyLib.c ****     *
1191:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1192:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1193:Generated_Source\PSoC4/CyLib.c ****     *
1194:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, the error status bit is the WATCHDOG_ERROR bit in
1195:Generated_Source\PSoC4/CyLib.c ****     * ECO_STATUS register.
1196:Generated_Source\PSoC4/CyLib.c ****     *
1197:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1198:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1199:Generated_Source\PSoC4/CyLib.c ****     *
1200:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L: Non-zero indicates that ECO is running.
1201:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 27


1202:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1203:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1204:Generated_Source\PSoC4/CyLib.c ****     {
1205:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1206:Generated_Source\PSoC4/CyLib.c **** 
1207:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1208:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1209:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1210:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1211:Generated_Source\PSoC4/CyLib.c **** 
1212:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) || 
1213:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1214:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1215:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1216:Generated_Source\PSoC4/CyLib.c ****         #else
1217:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1218:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1219:Generated_Source\PSoC4/CyLib.c **** 
1220:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1221:Generated_Source\PSoC4/CyLib.c ****     }
1222:Generated_Source\PSoC4/CyLib.c **** 
1223:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1224:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1225:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1226:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1227:Generated_Source\PSoC4/CyLib.c ****         *
1228:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1229:Generated_Source\PSoC4/CyLib.c ****         *
1230:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1231:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1232:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1233:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1234:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1235:Generated_Source\PSoC4/CyLib.c ****         *
1236:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1237:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1238:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1239:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1240:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1241:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1242:Generated_Source\PSoC4/CyLib.c ****         *
1243:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1244:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1245:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1246:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1247:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1248:Generated_Source\PSoC4/CyLib.c ****         *
1249:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1250:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1251:Generated_Source\PSoC4/CyLib.c ****         {
1252:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1253:Generated_Source\PSoC4/CyLib.c **** 
1254:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1255:Generated_Source\PSoC4/CyLib.c ****             {
1256:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1257:Generated_Source\PSoC4/CyLib.c **** 
1258:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 28


1259:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1260:Generated_Source\PSoC4/CyLib.c **** 
1261:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1262:Generated_Source\PSoC4/CyLib.c ****             }
1263:Generated_Source\PSoC4/CyLib.c ****             else
1264:Generated_Source\PSoC4/CyLib.c ****             {
1265:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1266:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1267:Generated_Source\PSoC4/CyLib.c ****             }
1268:Generated_Source\PSoC4/CyLib.c ****         }
1269:Generated_Source\PSoC4/CyLib.c **** 
1270:Generated_Source\PSoC4/CyLib.c ****     #else
1271:Generated_Source\PSoC4/CyLib.c **** 
1272:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1273:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1274:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1275:Generated_Source\PSoC4/CyLib.c ****         *
1276:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1277:Generated_Source\PSoC4/CyLib.c ****         * 4200L devices only.
1278:Generated_Source\PSoC4/CyLib.c ****         *
1279:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1280:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1281:Generated_Source\PSoC4/CyLib.c ****         *
1282:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1283:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1284:Generated_Source\PSoC4/CyLib.c ****         *
1285:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1286:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1287:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1288:Generated_Source\PSoC4/CyLib.c ****         *
1289:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1290:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1291:Generated_Source\PSoC4/CyLib.c ****         *
1292:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1293:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1294:Generated_Source\PSoC4/CyLib.c ****         *
1295:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1296:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1297:Generated_Source\PSoC4/CyLib.c ****         *
1298:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1299:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1300:Generated_Source\PSoC4/CyLib.c ****         *
1301:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1302:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1303:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1304:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1305:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1306:Generated_Source\PSoC4/CyLib.c ****         *
1307:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1308:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1309:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1310:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1311:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1312:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1313:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1314:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1315:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 29


1316:Generated_Source\PSoC4/CyLib.c ****         *
1317:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1318:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1319:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1320:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1321:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1322:Generated_Source\PSoC4/CyLib.c ****         *
1323:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1324:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1325:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1326:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1327:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1328:Generated_Source\PSoC4/CyLib.c ****         *
1329:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1330:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1331:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1332:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1333:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1334:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1335:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1336:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1337:Generated_Source\PSoC4/CyLib.c ****         *
1338:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1339:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1340:Generated_Source\PSoC4/CyLib.c ****         {
1341:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1342:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1343:Generated_Source\PSoC4/CyLib.c **** 
1344:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1345:Generated_Source\PSoC4/CyLib.c **** 
1346:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1347:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1348:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1349:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1350:Generated_Source\PSoC4/CyLib.c **** 
1351:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1352:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1353:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1354:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1355:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1356:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1357:Generated_Source\PSoC4/CyLib.c **** 
1358:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1359:Generated_Source\PSoC4/CyLib.c **** 
1360:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1361:Generated_Source\PSoC4/CyLib.c ****         }
1362:Generated_Source\PSoC4/CyLib.c **** 
1363:Generated_Source\PSoC4/CyLib.c **** 
1364:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1365:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1366:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1367:Generated_Source\PSoC4/CyLib.c ****         *
1368:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1369:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1370:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1371:Generated_Source\PSoC4/CyLib.c ****         *
1372:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L devices only.
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 30


1373:Generated_Source\PSoC4/CyLib.c ****         *
1374:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1375:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1376:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1377:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1378:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1379:Generated_Source\PSoC4/CyLib.c ****         *
1380:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1381:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1382:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1383:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1384:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1385:Generated_Source\PSoC4/CyLib.c ****         *
1386:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1387:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1388:Generated_Source\PSoC4/CyLib.c ****         *
1389:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1390:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1391:Generated_Source\PSoC4/CyLib.c ****         {
1392:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1393:Generated_Source\PSoC4/CyLib.c **** 
1394:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1395:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1396:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1397:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1398:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1399:Generated_Source\PSoC4/CyLib.c **** 
1400:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1401:Generated_Source\PSoC4/CyLib.c **** 
1402:Generated_Source\PSoC4/CyLib.c **** 
1403:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1404:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1405:Generated_Source\PSoC4/CyLib.c ****             {
1406:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1407:Generated_Source\PSoC4/CyLib.c ****             }
1408:Generated_Source\PSoC4/CyLib.c ****             else
1409:Generated_Source\PSoC4/CyLib.c ****             {
1410:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1411:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1412:Generated_Source\PSoC4/CyLib.c **** 
1413:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1414:Generated_Source\PSoC4/CyLib.c ****                 {
1415:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1416:Generated_Source\PSoC4/CyLib.c ****                 }
1417:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1418:Generated_Source\PSoC4/CyLib.c ****                 {
1419:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1420:Generated_Source\PSoC4/CyLib.c ****                 }
1421:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1422:Generated_Source\PSoC4/CyLib.c ****                 {
1423:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1424:Generated_Source\PSoC4/CyLib.c ****                 }
1425:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1426:Generated_Source\PSoC4/CyLib.c ****                 {
1427:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1428:Generated_Source\PSoC4/CyLib.c ****                 }
1429:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 31


1430:Generated_Source\PSoC4/CyLib.c ****                 {
1431:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1432:Generated_Source\PSoC4/CyLib.c ****                 }
1433:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1434:Generated_Source\PSoC4/CyLib.c ****                 {
1435:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1436:Generated_Source\PSoC4/CyLib.c ****                 }
1437:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1438:Generated_Source\PSoC4/CyLib.c ****                 {
1439:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1440:Generated_Source\PSoC4/CyLib.c ****                 }
1441:Generated_Source\PSoC4/CyLib.c ****                 else
1442:Generated_Source\PSoC4/CyLib.c ****                 {
1443:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1444:Generated_Source\PSoC4/CyLib.c ****                 }
1445:Generated_Source\PSoC4/CyLib.c **** 
1446:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1447:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1448:Generated_Source\PSoC4/CyLib.c **** 
1449:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1450:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1451:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1452:Generated_Source\PSoC4/CyLib.c ****                 {
1453:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1454:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1455:Generated_Source\PSoC4/CyLib.c ****                 }
1456:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1457:Generated_Source\PSoC4/CyLib.c ****                 {
1458:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1459:Generated_Source\PSoC4/CyLib.c ****                 }
1460:Generated_Source\PSoC4/CyLib.c ****                 else
1461:Generated_Source\PSoC4/CyLib.c ****                 {
1462:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1463:Generated_Source\PSoC4/CyLib.c ****                 }
1464:Generated_Source\PSoC4/CyLib.c **** 
1465:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1466:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1467:Generated_Source\PSoC4/CyLib.c ****                 {
1468:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1469:Generated_Source\PSoC4/CyLib.c ****                 }
1470:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1471:Generated_Source\PSoC4/CyLib.c ****                 {
1472:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1473:Generated_Source\PSoC4/CyLib.c ****                 }
1474:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1475:Generated_Source\PSoC4/CyLib.c ****                 {
1476:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1477:Generated_Source\PSoC4/CyLib.c ****                 }
1478:Generated_Source\PSoC4/CyLib.c ****                 else
1479:Generated_Source\PSoC4/CyLib.c ****                 {
1480:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1481:Generated_Source\PSoC4/CyLib.c ****                 }
1482:Generated_Source\PSoC4/CyLib.c **** 
1483:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1484:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1485:Generated_Source\PSoC4/CyLib.c **** 
1486:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 32


1487:Generated_Source\PSoC4/CyLib.c **** 
1488:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1489:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1490:Generated_Source\PSoC4/CyLib.c ****                 {
1491:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1492:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1493:Generated_Source\PSoC4/CyLib.c ****                 }
1494:Generated_Source\PSoC4/CyLib.c ****                 else
1495:Generated_Source\PSoC4/CyLib.c ****                 {
1496:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1497:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1498:Generated_Source\PSoC4/CyLib.c ****                     */
1499:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1500:Generated_Source\PSoC4/CyLib.c ****                 }
1501:Generated_Source\PSoC4/CyLib.c ****             }
1502:Generated_Source\PSoC4/CyLib.c **** 
1503:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1504:Generated_Source\PSoC4/CyLib.c ****         }
1505:Generated_Source\PSoC4/CyLib.c **** 
1506:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1507:Generated_Source\PSoC4/CyLib.c **** 
1508:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1509:Generated_Source\PSoC4/CyLib.c **** 
1510:Generated_Source\PSoC4/CyLib.c **** 
1511:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
1512:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1513:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1514:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1515:Generated_Source\PSoC4/CyLib.c ****     *
1516:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1517:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1518:Generated_Source\PSoC4/CyLib.c ****     *
1519:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1520:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1521:Generated_Source\PSoC4/CyLib.c ****     *
1522:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1523:Generated_Source\PSoC4/CyLib.c ****     *
1524:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1525:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1526:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1
1527:Generated_Source\PSoC4/CyLib.c ****     *
1528:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1529:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1530:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1531:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1532:Generated_Source\PSoC4/CyLib.c ****     *
1533:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1534:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1535:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1536:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1537:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1538:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1539:Generated_Source\PSoC4/CyLib.c ****     *
1540:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1541:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1542:Generated_Source\PSoC4/CyLib.c ****     {
1543:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 33


1544:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1545:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1546:Generated_Source\PSoC4/CyLib.c **** 
1547:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1548:Generated_Source\PSoC4/CyLib.c ****         {
1549:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1550:Generated_Source\PSoC4/CyLib.c **** 
1551:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1552:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1553:Generated_Source\PSoC4/CyLib.c **** 
1554:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1555:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1556:Generated_Source\PSoC4/CyLib.c **** 
1557:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1558:Generated_Source\PSoC4/CyLib.c **** 
1559:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1560:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1561:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1562:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1563:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1564:Generated_Source\PSoC4/CyLib.c **** 
1565:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1566:Generated_Source\PSoC4/CyLib.c ****             {
1567:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1568:Generated_Source\PSoC4/CyLib.c **** 
1569:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1570:Generated_Source\PSoC4/CyLib.c ****                 {
1571:Generated_Source\PSoC4/CyLib.c **** 
1572:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1573:Generated_Source\PSoC4/CyLib.c ****                     {
1574:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1575:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1576:Generated_Source\PSoC4/CyLib.c ****                         break;
1577:Generated_Source\PSoC4/CyLib.c ****                     }
1578:Generated_Source\PSoC4/CyLib.c **** 
1579:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1580:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1581:Generated_Source\PSoC4/CyLib.c ****                 }
1582:Generated_Source\PSoC4/CyLib.c ****             }
1583:Generated_Source\PSoC4/CyLib.c ****         }
1584:Generated_Source\PSoC4/CyLib.c ****         else
1585:Generated_Source\PSoC4/CyLib.c ****         {
1586:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1587:Generated_Source\PSoC4/CyLib.c ****         }
1588:Generated_Source\PSoC4/CyLib.c **** 
1589:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1590:Generated_Source\PSoC4/CyLib.c ****     }
1591:Generated_Source\PSoC4/CyLib.c **** 
1592:Generated_Source\PSoC4/CyLib.c **** 
1593:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1594:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1595:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1596:Generated_Source\PSoC4/CyLib.c ****     *
1597:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1598:Generated_Source\PSoC4/CyLib.c ****     *
1599:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1600:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 34


1601:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1602:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1603:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1604:Generated_Source\PSoC4/CyLib.c ****     *
1605:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1606:Generated_Source\PSoC4/CyLib.c ****     *
1607:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1608:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1609:Generated_Source\PSoC4/CyLib.c ****     {
1610:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1611:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1612:Generated_Source\PSoC4/CyLib.c **** 
1613:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1614:Generated_Source\PSoC4/CyLib.c **** 
1615:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1616:Generated_Source\PSoC4/CyLib.c **** 
1617:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1618:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1619:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1620:Generated_Source\PSoC4/CyLib.c ****         {
1621:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1622:Generated_Source\PSoC4/CyLib.c ****         }
1623:Generated_Source\PSoC4/CyLib.c **** 
1624:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1625:Generated_Source\PSoC4/CyLib.c **** 
1626:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1627:Generated_Source\PSoC4/CyLib.c ****     }
1628:Generated_Source\PSoC4/CyLib.c **** 
1629:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1630:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1631:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1632:Generated_Source\PSoC4/CyLib.c ****     *
1633:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1634:Generated_Source\PSoC4/CyLib.c ****     *
1635:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1636:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1637:Generated_Source\PSoC4/CyLib.c ****     *
1638:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1639:Generated_Source\PSoC4/CyLib.c ****     *
1640:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1641:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1642:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1643:Generated_Source\PSoC4/CyLib.c ****     *
1644:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1645:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1646:Generated_Source\PSoC4/CyLib.c ****     {
1647:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1648:Generated_Source\PSoC4/CyLib.c **** 
1649:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1650:Generated_Source\PSoC4/CyLib.c ****         {
1651:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1652:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1653:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1654:Generated_Source\PSoC4/CyLib.c ****         }
1655:Generated_Source\PSoC4/CyLib.c ****     }
1656:Generated_Source\PSoC4/CyLib.c **** 
1657:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 35


1658:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1659:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1660:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1661:Generated_Source\PSoC4/CyLib.c ****     *
1662:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1663:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1664:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1665:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1666:Generated_Source\PSoC4/CyLib.c ****     *
1667:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1668:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1669:Generated_Source\PSoC4/CyLib.c ****     *
1670:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1671:Generated_Source\PSoC4/CyLib.c ****     *
1672:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1673:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1674:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1675:Generated_Source\PSoC4/CyLib.c ****     *
1676:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1677:Generated_Source\PSoC4/CyLib.c ****     * divider.
1678:Generated_Source\PSoC4/CyLib.c ****     *
1679:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1680:Generated_Source\PSoC4/CyLib.c ****     *
1681:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1682:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1683:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1684:Generated_Source\PSoC4/CyLib.c ****     *
1685:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1686:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1687:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1688:Generated_Source\PSoC4/CyLib.c ****     *
1689:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1690:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1691:Generated_Source\PSoC4/CyLib.c ****     {
1692:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1693:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1694:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1695:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1696:Generated_Source\PSoC4/CyLib.c **** 
1697:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1698:Generated_Source\PSoC4/CyLib.c **** 
1699:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1700:Generated_Source\PSoC4/CyLib.c **** 
1701:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1702:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1703:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1704:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1705:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1706:Generated_Source\PSoC4/CyLib.c ****         {
1707:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1708:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1709:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1710:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1711:Generated_Source\PSoC4/CyLib.c **** 
1712:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1713:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1714:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 36


1715:Generated_Source\PSoC4/CyLib.c **** 
1716:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1717:Generated_Source\PSoC4/CyLib.c **** 
1718:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1719:Generated_Source\PSoC4/CyLib.c ****         }
1720:Generated_Source\PSoC4/CyLib.c **** 
1721:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1722:Generated_Source\PSoC4/CyLib.c **** 
1723:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1724:Generated_Source\PSoC4/CyLib.c ****     }
1725:Generated_Source\PSoC4/CyLib.c **** 
1726:Generated_Source\PSoC4/CyLib.c **** 
1727:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1728:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1729:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1730:Generated_Source\PSoC4/CyLib.c ****     *
1731:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1732:Generated_Source\PSoC4/CyLib.c ****     *
1733:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1734:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1735:Generated_Source\PSoC4/CyLib.c ****     *
1736:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1737:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1738:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1739:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1740:Generated_Source\PSoC4/CyLib.c ****     *
1741:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1742:Generated_Source\PSoC4/CyLib.c ****     *
1743:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1744:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1745:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1746:Generated_Source\PSoC4/CyLib.c ****     *
1747:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1748:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1749:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1750:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1751:Generated_Source\PSoC4/CyLib.c ****     *
1752:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1753:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1754:Generated_Source\PSoC4/CyLib.c ****     *
1755:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1756:Generated_Source\PSoC4/CyLib.c ****     *
1757:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1758:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1759:Generated_Source\PSoC4/CyLib.c ****     {
1760:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1761:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1762:Generated_Source\PSoC4/CyLib.c **** 
1763:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1764:Generated_Source\PSoC4/CyLib.c **** 
1765:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1766:Generated_Source\PSoC4/CyLib.c ****         {
1767:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1768:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1769:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1770:Generated_Source\PSoC4/CyLib.c ****         }
1771:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 37


1772:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1773:Generated_Source\PSoC4/CyLib.c ****     }
1774:Generated_Source\PSoC4/CyLib.c **** 
1775:Generated_Source\PSoC4/CyLib.c **** 
1776:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1777:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1778:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1779:Generated_Source\PSoC4/CyLib.c ****     *
1780:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1781:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1782:Generated_Source\PSoC4/CyLib.c ****     *
1783:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1784:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1785:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1786:Generated_Source\PSoC4/CyLib.c ****     *
1787:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1788:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1789:Generated_Source\PSoC4/CyLib.c ****     *
1790:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1791:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1792:Generated_Source\PSoC4/CyLib.c ****     {
1793:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1794:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1795:Generated_Source\PSoC4/CyLib.c **** 
1796:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1797:Generated_Source\PSoC4/CyLib.c **** 
1798:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1799:Generated_Source\PSoC4/CyLib.c **** 
1800:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1801:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1802:Generated_Source\PSoC4/CyLib.c **** 
1803:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1804:Generated_Source\PSoC4/CyLib.c **** 
1805:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1806:Generated_Source\PSoC4/CyLib.c ****     }
1807:Generated_Source\PSoC4/CyLib.c **** 
1808:Generated_Source\PSoC4/CyLib.c **** 
1809:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1810:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1811:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1812:Generated_Source\PSoC4/CyLib.c ****     *
1813:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1814:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1815:Generated_Source\PSoC4/CyLib.c ****     *
1816:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1817:Generated_Source\PSoC4/CyLib.c ****     *
1818:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1819:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1820:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1821:Generated_Source\PSoC4/CyLib.c ****     *
1822:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1823:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1824:Generated_Source\PSoC4/CyLib.c ****     *
1825:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1826:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1827:Generated_Source\PSoC4/CyLib.c ****     {
1828:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 38


1829:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1830:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_LOCKED;
1831:Generated_Source\PSoC4/CyLib.c **** 
1832:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1833:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1834:Generated_Source\PSoC4/CyLib.c **** 
1835:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1836:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll)) ||
1837:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll)))
1838:Generated_Source\PSoC4/CyLib.c ****         {
1839:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1840:Generated_Source\PSoC4/CyLib.c ****         }
1841:Generated_Source\PSoC4/CyLib.c **** 
1842:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1843:Generated_Source\PSoC4/CyLib.c ****     }
1844:Generated_Source\PSoC4/CyLib.c **** 
1845:Generated_Source\PSoC4/CyLib.c **** 
1846:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1847:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1848:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1849:Generated_Source\PSoC4/CyLib.c ****     *
1850:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1851:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1852:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1853:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1856:Generated_Source\PSoC4/CyLib.c ****     *
1857:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1858:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1859:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1860:Generated_Source\PSoC4/CyLib.c ****     *
1861:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1862:Generated_Source\PSoC4/CyLib.c ****     *
1863:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1864:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1865:Generated_Source\PSoC4/CyLib.c ****     {
1866:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1867:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1868:Generated_Source\PSoC4/CyLib.c **** 
1869:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1870:Generated_Source\PSoC4/CyLib.c **** 
1871:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1872:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1873:Generated_Source\PSoC4/CyLib.c **** 
1874:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1875:Generated_Source\PSoC4/CyLib.c **** 
1876:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1877:Generated_Source\PSoC4/CyLib.c ****     }
1878:Generated_Source\PSoC4/CyLib.c **** 
1879:Generated_Source\PSoC4/CyLib.c **** 
1880:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1881:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1882:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1883:Generated_Source\PSoC4/CyLib.c ****     *
1884:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1885:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 39


1886:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
1887:Generated_Source\PSoC4/CyLib.c ****     *
1888:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1889:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1890:Generated_Source\PSoC4/CyLib.c ****     *
1891:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1892:Generated_Source\PSoC4/CyLib.c ****     *
1893:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
1894:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1895:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1896:Generated_Source\PSoC4/CyLib.c ****     *
1897:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1898:Generated_Source\PSoC4/CyLib.c ****     *
1899:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
1900:Generated_Source\PSoC4/CyLib.c ****     *
1901:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
1902:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
1903:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1904:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1905:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1906:Generated_Source\PSoC4/CyLib.c ****     *
1907:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
1908:Generated_Source\PSoC4/CyLib.c ****     *
1909:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
1910:Generated_Source\PSoC4/CyLib.c ****     * frequency.
1911:Generated_Source\PSoC4/CyLib.c ****     *
1912:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
1913:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
1914:Generated_Source\PSoC4/CyLib.c ****     *
1915:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1916:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
1917:Generated_Source\PSoC4/CyLib.c ****     {
1918:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
1919:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
1920:Generated_Source\PSoC4/CyLib.c **** 
1921:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
1922:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
1923:Generated_Source\PSoC4/CyLib.c **** 
1924:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
1925:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
1926:Generated_Source\PSoC4/CyLib.c **** 
1927:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
1928:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
1929:Generated_Source\PSoC4/CyLib.c **** 
1930:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1931:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1932:Generated_Source\PSoC4/CyLib.c **** 
1933:Generated_Source\PSoC4/CyLib.c **** 
1934:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1935:Generated_Source\PSoC4/CyLib.c **** 
1936:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1937:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
1938:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
1939:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
1940:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1941:Generated_Source\PSoC4/CyLib.c ****         {
1942:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 40


1943:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
1944:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
1945:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
1946:Generated_Source\PSoC4/CyLib.c **** 
1947:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
1948:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
1949:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
1950:Generated_Source\PSoC4/CyLib.c **** 
1951:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
1952:Generated_Source\PSoC4/CyLib.c ****             {
1953:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
1954:Generated_Source\PSoC4/CyLib.c ****                 {
1955:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
1956:Generated_Source\PSoC4/CyLib.c **** 
1957:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
1958:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
1959:Generated_Source\PSoC4/CyLib.c **** 
1960:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
1961:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
1962:Generated_Source\PSoC4/CyLib.c **** 
1963:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
1964:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
1965:Generated_Source\PSoC4/CyLib.c **** 
1966:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
1967:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
1968:Generated_Source\PSoC4/CyLib.c ****                     {
1969:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
1970:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
1971:Generated_Source\PSoC4/CyLib.c ****                         break;
1972:Generated_Source\PSoC4/CyLib.c ****                     }
1973:Generated_Source\PSoC4/CyLib.c ****                 }
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c **** 
1976:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
1977:Generated_Source\PSoC4/CyLib.c ****                 {
1978:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
1979:Generated_Source\PSoC4/CyLib.c ****                     {
1980:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
1981:Generated_Source\PSoC4/CyLib.c ****                     }
1982:Generated_Source\PSoC4/CyLib.c ****                 }
1983:Generated_Source\PSoC4/CyLib.c ****             }
1984:Generated_Source\PSoC4/CyLib.c **** 
1985:Generated_Source\PSoC4/CyLib.c ****         }
1986:Generated_Source\PSoC4/CyLib.c **** 
1987:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1988:Generated_Source\PSoC4/CyLib.c ****     }
1989:Generated_Source\PSoC4/CyLib.c **** 
1990:Generated_Source\PSoC4/CyLib.c **** 
1991:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1992:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
1993:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1994:Generated_Source\PSoC4/CyLib.c ****     *
1995:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
1996:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
1997:Generated_Source\PSoC4/CyLib.c ****     *
1998:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1999:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 41


2000:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2001:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2002:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
2003:Generated_Source\PSoC4/CyLib.c ****     *
2004:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2005:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2006:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock
2007:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2008:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0]
2009:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1]
2010:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2]
2011:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3]
2012:Generated_Source\PSoC4/CyLib.c ****     *
2013:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2014:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2015:Generated_Source\PSoC4/CyLib.c ****     {
2016:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2017:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2018:Generated_Source\PSoC4/CyLib.c **** 
2019:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2020:Generated_Source\PSoC4/CyLib.c **** 
2021:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
2022:Generated_Source\PSoC4/CyLib.c ****         {
2023:Generated_Source\PSoC4/CyLib.c ****             regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2024:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MASK(pl
2025:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG = regTmp;
2026:Generated_Source\PSoC4/CyLib.c ****         }
2027:Generated_Source\PSoC4/CyLib.c **** 
2028:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2029:Generated_Source\PSoC4/CyLib.c ****     }
2030:Generated_Source\PSoC4/CyLib.c **** 
2031:Generated_Source\PSoC4/CyLib.c **** 
2032:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2033:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2034:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2035:Generated_Source\PSoC4/CyLib.c ****     *
2036:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2037:Generated_Source\PSoC4/CyLib.c ****     *
2038:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2039:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2040:Generated_Source\PSoC4/CyLib.c ****     *
2041:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
2042:Generated_Source\PSoC4/CyLib.c ****     *
2043:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2044:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2045:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
2046:Generated_Source\PSoC4/CyLib.c ****     *
2047:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2048:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2049:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2050:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2051:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2052:Generated_Source\PSoC4/CyLib.c ****     *
2053:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2054:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2055:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2056:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 42


2057:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2058:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2059:Generated_Source\PSoC4/CyLib.c ****     {
2060:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2061:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2062:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2063:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2064:Generated_Source\PSoC4/CyLib.c **** 
2065:Generated_Source\PSoC4/CyLib.c **** 
2066:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2067:Generated_Source\PSoC4/CyLib.c **** 
2068:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2069:Generated_Source\PSoC4/CyLib.c **** 
2070:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2071:Generated_Source\PSoC4/CyLib.c ****         {
2072:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2073:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2074:Generated_Source\PSoC4/CyLib.c **** 
2075:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2076:Generated_Source\PSoC4/CyLib.c **** 
2077:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2078:Generated_Source\PSoC4/CyLib.c ****         }
2079:Generated_Source\PSoC4/CyLib.c **** 
2080:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2081:Generated_Source\PSoC4/CyLib.c **** 
2082:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2083:Generated_Source\PSoC4/CyLib.c ****     }
2084:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
2085:Generated_Source\PSoC4/CyLib.c **** 
2086:Generated_Source\PSoC4/CyLib.c **** 
2087:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2088:Generated_Source\PSoC4/CyLib.c **** 
2089:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2090:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2091:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2092:Generated_Source\PSoC4/CyLib.c ****     *
2093:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2094:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2095:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2096:Generated_Source\PSoC4/CyLib.c ****     *
2097:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2098:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2099:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2100:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2101:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2102:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2103:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2104:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2105:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2106:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2107:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2108:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2109:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2110:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2111:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2112:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2113:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 43


2114:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2115:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2116:Generated_Source\PSoC4/CyLib.c ****     *
2117:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2118:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2119:Generated_Source\PSoC4/CyLib.c ****     {
2120:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2121:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
2122:Generated_Source\PSoC4/CyLib.c **** 
2123:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2124:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
2125:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
2126:Generated_Source\PSoC4/CyLib.c **** 
2127:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2128:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2129:Generated_Source\PSoC4/CyLib.c **** 
2130:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2131:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
2132:Generated_Source\PSoC4/CyLib.c **** 
2133:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2134:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
2135:Generated_Source\PSoC4/CyLib.c **** 
2136:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2137:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
2138:Generated_Source\PSoC4/CyLib.c ****     }
2139:Generated_Source\PSoC4/CyLib.c **** 
2140:Generated_Source\PSoC4/CyLib.c **** 
2141:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2142:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2143:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2144:Generated_Source\PSoC4/CyLib.c ****     *
2145:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2146:Generated_Source\PSoC4/CyLib.c ****     *
2147:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2148:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2149:Generated_Source\PSoC4/CyLib.c ****     {
 280              		.loc 1 2149 0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 0
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 284              		@ link register save eliminated.
2150:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 285              		.loc 1 2150 0
 286 0000 054A     		ldr	r2, .L22
 287 0002 1368     		ldr	r3, [r2]
 288 0004 0221     		movs	r1, #2
 289 0006 8B43     		bics	r3, r1
 290 0008 1360     		str	r3, [r2]
2151:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 291              		.loc 1 2151 0
 292 000a 044A     		ldr	r2, .L22+4
 293 000c 1368     		ldr	r3, [r2]
 294 000e 0139     		subs	r1, r1, #1
 295 0010 8B43     		bics	r3, r1
 296 0012 1360     		str	r3, [r2]
2152:Generated_Source\PSoC4/CyLib.c ****     }
 297              		.loc 1 2152 0
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 44


 298              		@ sp needed
 299 0014 7047     		bx	lr
 300              	.L23:
 301 0016 C046     		.align	2
 302              	.L22:
 303 0018 08000B40 		.word	1074462728
 304 001c 18000B40 		.word	1074462744
 305              		.cfi_endproc
 306              	.LFE8:
 307              		.size	CySysLvdDisable, .-CySysLvdDisable
 308              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 309              		.align	2
 310              		.global	CySysLvdGetInterruptSource
 311              		.code	16
 312              		.thumb_func
 313              		.type	CySysLvdGetInterruptSource, %function
 314              	CySysLvdGetInterruptSource:
 315              	.LFB9:
2153:Generated_Source\PSoC4/CyLib.c **** 
2154:Generated_Source\PSoC4/CyLib.c **** 
2155:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2156:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2157:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2158:Generated_Source\PSoC4/CyLib.c ****     *
2159:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2160:Generated_Source\PSoC4/CyLib.c ****     *
2161:Generated_Source\PSoC4/CyLib.c ****     * \return
2162:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2163:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2164:Generated_Source\PSoC4/CyLib.c ****     *
2165:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2166:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2167:Generated_Source\PSoC4/CyLib.c ****     {
 316              		.loc 1 2167 0
 317              		.cfi_startproc
 318              		@ args = 0, pretend = 0, frame = 0
 319              		@ frame_needed = 0, uses_anonymous_args = 0
 320              		@ link register save eliminated.
2168:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 321              		.loc 1 2168 0
 322 0000 024B     		ldr	r3, .L25
 323 0002 1B68     		ldr	r3, [r3]
 324 0004 0220     		movs	r0, #2
 325 0006 1840     		ands	r0, r3
2169:Generated_Source\PSoC4/CyLib.c ****     }
 326              		.loc 1 2169 0
 327              		@ sp needed
 328 0008 7047     		bx	lr
 329              	.L26:
 330 000a C046     		.align	2
 331              	.L25:
 332 000c 04000B40 		.word	1074462724
 333              		.cfi_endproc
 334              	.LFE9:
 335              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 336              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 337              		.align	2
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 45


 338              		.global	CySysLvdClearInterrupt
 339              		.code	16
 340              		.thumb_func
 341              		.type	CySysLvdClearInterrupt, %function
 342              	CySysLvdClearInterrupt:
 343              	.LFB10:
2170:Generated_Source\PSoC4/CyLib.c **** 
2171:Generated_Source\PSoC4/CyLib.c **** 
2172:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2173:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2174:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2175:Generated_Source\PSoC4/CyLib.c ****     *
2176:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2177:Generated_Source\PSoC4/CyLib.c ****     *
2178:Generated_Source\PSoC4/CyLib.c ****     * \return
2179:Generated_Source\PSoC4/CyLib.c ****     *  None
2180:Generated_Source\PSoC4/CyLib.c ****     *
2181:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2182:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2183:Generated_Source\PSoC4/CyLib.c ****     {
 344              		.loc 1 2183 0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 0
 347              		@ frame_needed = 0, uses_anonymous_args = 0
 348              		@ link register save eliminated.
2184:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 349              		.loc 1 2184 0
 350 0000 0222     		movs	r2, #2
 351 0002 014B     		ldr	r3, .L28
 352 0004 1A60     		str	r2, [r3]
2185:Generated_Source\PSoC4/CyLib.c ****     }
 353              		.loc 1 2185 0
 354              		@ sp needed
 355 0006 7047     		bx	lr
 356              	.L29:
 357              		.align	2
 358              	.L28:
 359 0008 04000B40 		.word	1074462724
 360              		.cfi_endproc
 361              	.LFE10:
 362              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 363              		.section	.text.CySysGetResetReason,"ax",%progbits
 364              		.align	2
 365              		.global	CySysGetResetReason
 366              		.code	16
 367              		.thumb_func
 368              		.type	CySysGetResetReason, %function
 369              	CySysGetResetReason:
 370              	.LFB11:
2186:Generated_Source\PSoC4/CyLib.c **** 
2187:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2188:Generated_Source\PSoC4/CyLib.c **** 
2189:Generated_Source\PSoC4/CyLib.c **** 
2190:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2191:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2192:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2193:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 46


2194:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2195:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2196:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2197:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2198:Generated_Source\PSoC4/CyLib.c **** *
2199:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2200:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2201:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2202:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2203:Generated_Source\PSoC4/CyLib.c **** *
2204:Generated_Source\PSoC4/CyLib.c **** * \return
2205:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2206:Generated_Source\PSoC4/CyLib.c **** *
2207:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2208:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2209:Generated_Source\PSoC4/CyLib.c **** {
 371              		.loc 1 2209 0
 372              		.cfi_startproc
 373              		@ args = 0, pretend = 0, frame = 0
 374              		@ frame_needed = 0, uses_anonymous_args = 0
 375              		@ link register save eliminated.
 376              	.LVL16:
 377 0000 0200     		movs	r2, r0
2210:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2211:Generated_Source\PSoC4/CyLib.c **** 
2212:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 378              		.loc 1 2212 0
 379 0002 1920     		movs	r0, #25
 380              	.LVL17:
 381 0004 0240     		ands	r2, r0
 382              	.LVL18:
2213:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 383              		.loc 1 2213 0
 384 0006 0249     		ldr	r1, .L31
 385 0008 0B68     		ldr	r3, [r1]
 386 000a 1840     		ands	r0, r3
 387              	.LVL19:
2214:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2215:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 388              		.loc 1 2215 0
 389 000c 0A60     		str	r2, [r1]
2216:Generated_Source\PSoC4/CyLib.c **** 
2217:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2218:Generated_Source\PSoC4/CyLib.c **** }
 390              		.loc 1 2218 0
 391              		@ sp needed
 392 000e 7047     		bx	lr
 393              	.L32:
 394              		.align	2
 395              	.L31:
 396 0010 00030B40 		.word	1074463488
 397              		.cfi_endproc
 398              	.LFE11:
 399              		.size	CySysGetResetReason, .-CySysGetResetReason
 400              		.section	.text.CyDisableInts,"ax",%progbits
 401              		.align	2
 402              		.global	CyDisableInts
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 47


 403              		.code	16
 404              		.thumb_func
 405              		.type	CyDisableInts, %function
 406              	CyDisableInts:
 407              	.LFB12:
2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c **** 
2221:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2222:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2223:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2224:Generated_Source\PSoC4/CyLib.c **** *
2225:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2226:Generated_Source\PSoC4/CyLib.c **** *
2227:Generated_Source\PSoC4/CyLib.c **** * \return
2228:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2229:Generated_Source\PSoC4/CyLib.c **** *
2230:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2231:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2232:Generated_Source\PSoC4/CyLib.c **** {
 408              		.loc 1 2232 0
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 0
 411              		@ frame_needed = 0, uses_anonymous_args = 0
 412              		@ link register save eliminated.
2233:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2234:Generated_Source\PSoC4/CyLib.c **** 
2235:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2236:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 413              		.loc 1 2236 0
 414 0000 024B     		ldr	r3, .L34
 415 0002 1868     		ldr	r0, [r3]
 416              	.LVL20:
2237:Generated_Source\PSoC4/CyLib.c **** 
2238:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2239:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 417              		.loc 1 2239 0
 418 0004 0122     		movs	r2, #1
 419 0006 5242     		rsbs	r2, r2, #0
 420 0008 1A60     		str	r2, [r3]
2240:Generated_Source\PSoC4/CyLib.c **** 
2241:Generated_Source\PSoC4/CyLib.c ****     return (intState);
2242:Generated_Source\PSoC4/CyLib.c **** }
 421              		.loc 1 2242 0
 422              		@ sp needed
 423 000a 7047     		bx	lr
 424              	.L35:
 425              		.align	2
 426              	.L34:
 427 000c 80E100E0 		.word	-536813184
 428              		.cfi_endproc
 429              	.LFE12:
 430              		.size	CyDisableInts, .-CyDisableInts
 431              		.section	.text.CyEnableInts,"ax",%progbits
 432              		.align	2
 433              		.global	CyEnableInts
 434              		.code	16
 435              		.thumb_func
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 48


 436              		.type	CyEnableInts, %function
 437              	CyEnableInts:
 438              	.LFB13:
2243:Generated_Source\PSoC4/CyLib.c **** 
2244:Generated_Source\PSoC4/CyLib.c **** 
2245:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2246:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2247:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2248:Generated_Source\PSoC4/CyLib.c **** *
2249:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2250:Generated_Source\PSoC4/CyLib.c **** *
2251:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2252:Generated_Source\PSoC4/CyLib.c **** *
2253:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2254:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2255:Generated_Source\PSoC4/CyLib.c **** {
 439              		.loc 1 2255 0
 440              		.cfi_startproc
 441              		@ args = 0, pretend = 0, frame = 0
 442              		@ frame_needed = 0, uses_anonymous_args = 0
 443              		@ link register save eliminated.
 444              	.LVL21:
2256:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 445              		.loc 1 2256 0
 446 0000 014B     		ldr	r3, .L37
 447 0002 1860     		str	r0, [r3]
2257:Generated_Source\PSoC4/CyLib.c **** }
 448              		.loc 1 2257 0
 449              		@ sp needed
 450 0004 7047     		bx	lr
 451              	.L38:
 452 0006 C046     		.align	2
 453              	.L37:
 454 0008 00E100E0 		.word	-536813312
 455              		.cfi_endproc
 456              	.LFE13:
 457              		.size	CyEnableInts, .-CyEnableInts
 458              		.section	.text.CyIntEnable,"ax",%progbits
 459              		.align	2
 460              		.global	CyIntEnable
 461              		.code	16
 462              		.thumb_func
 463              		.type	CyIntEnable, %function
 464              	CyIntEnable:
 465              	.LFB20:
2258:Generated_Source\PSoC4/CyLib.c **** 
2259:Generated_Source\PSoC4/CyLib.c **** 
2260:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2261:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2262:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2263:Generated_Source\PSoC4/CyLib.c **** *
2264:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2265:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2266:Generated_Source\PSoC4/CyLib.c **** *
2267:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2268:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2269:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 49


2270:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2271:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2272:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2273:Generated_Source\PSoC4/CyLib.c **** *
2274:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2275:Generated_Source\PSoC4/CyLib.c **** *
2276:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2277:Generated_Source\PSoC4/CyLib.c **** *
2278:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2279:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2280:Generated_Source\PSoC4/CyLib.c **** {
2281:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2282:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2283:Generated_Source\PSoC4/CyLib.c **** 
2284:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2285:Generated_Source\PSoC4/CyLib.c **** 
2286:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2287:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
2288:Generated_Source\PSoC4/CyLib.c **** 
2289:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2290:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2291:Generated_Source\PSoC4/CyLib.c **** 
2292:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2293:Generated_Source\PSoC4/CyLib.c **** }
2294:Generated_Source\PSoC4/CyLib.c **** 
2295:Generated_Source\PSoC4/CyLib.c **** 
2296:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2297:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2298:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2299:Generated_Source\PSoC4/CyLib.c **** *
2300:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2301:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2302:Generated_Source\PSoC4/CyLib.c **** *
2303:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2304:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2305:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2306:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2307:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2308:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2309:Generated_Source\PSoC4/CyLib.c **** *
2310:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2311:Generated_Source\PSoC4/CyLib.c **** *
2312:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2313:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2314:Generated_Source\PSoC4/CyLib.c **** {
2315:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2316:Generated_Source\PSoC4/CyLib.c **** 
2317:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2318:Generated_Source\PSoC4/CyLib.c **** 
2319:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
2320:Generated_Source\PSoC4/CyLib.c **** }
2321:Generated_Source\PSoC4/CyLib.c **** 
2322:Generated_Source\PSoC4/CyLib.c **** 
2323:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2324:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2325:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2326:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 50


2327:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2328:Generated_Source\PSoC4/CyLib.c **** *
2329:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2330:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2331:Generated_Source\PSoC4/CyLib.c **** *
2332:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2333:Generated_Source\PSoC4/CyLib.c **** *
2334:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2335:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2336:Generated_Source\PSoC4/CyLib.c **** {
2337:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2338:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2339:Generated_Source\PSoC4/CyLib.c **** 
2340:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2341:Generated_Source\PSoC4/CyLib.c **** 
2342:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2343:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
2344:Generated_Source\PSoC4/CyLib.c **** 
2345:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2346:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2347:Generated_Source\PSoC4/CyLib.c **** 
2348:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2349:Generated_Source\PSoC4/CyLib.c **** }
2350:Generated_Source\PSoC4/CyLib.c **** 
2351:Generated_Source\PSoC4/CyLib.c **** 
2352:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2353:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2354:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2355:Generated_Source\PSoC4/CyLib.c **** *
2356:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2357:Generated_Source\PSoC4/CyLib.c **** *
2358:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2359:Generated_Source\PSoC4/CyLib.c **** *
2360:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2361:Generated_Source\PSoC4/CyLib.c **** *
2362:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2363:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2364:Generated_Source\PSoC4/CyLib.c **** {
2365:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2366:Generated_Source\PSoC4/CyLib.c **** 
2367:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2368:Generated_Source\PSoC4/CyLib.c **** 
2369:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
2370:Generated_Source\PSoC4/CyLib.c **** }
2371:Generated_Source\PSoC4/CyLib.c **** 
2372:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2373:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2374:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2375:Generated_Source\PSoC4/CyLib.c **** *
2376:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2377:Generated_Source\PSoC4/CyLib.c **** *
2378:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2379:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2380:Generated_Source\PSoC4/CyLib.c **** *
2381:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2382:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2383:Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 51


2384:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2385:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2386:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2387:Generated_Source\PSoC4/CyLib.c **** 
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2389:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2390:Generated_Source\PSoC4/CyLib.c **** 
2391:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
2392:Generated_Source\PSoC4/CyLib.c **** 
2393:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
2394:Generated_Source\PSoC4/CyLib.c **** 
2395:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2396:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
2397:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
2398:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2399:Generated_Source\PSoC4/CyLib.c **** 
2400:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2401:Generated_Source\PSoC4/CyLib.c **** }
2402:Generated_Source\PSoC4/CyLib.c **** 
2403:Generated_Source\PSoC4/CyLib.c **** 
2404:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2405:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2406:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2407:Generated_Source\PSoC4/CyLib.c **** *
2408:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2409:Generated_Source\PSoC4/CyLib.c **** *
2410:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2411:Generated_Source\PSoC4/CyLib.c **** *
2412:Generated_Source\PSoC4/CyLib.c **** * \return
2413:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2414:Generated_Source\PSoC4/CyLib.c **** *
2415:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2416:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2417:Generated_Source\PSoC4/CyLib.c **** {
2418:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2419:Generated_Source\PSoC4/CyLib.c **** 
2420:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2421:Generated_Source\PSoC4/CyLib.c **** 
2422:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
2423:Generated_Source\PSoC4/CyLib.c **** 
2424:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
2425:Generated_Source\PSoC4/CyLib.c **** }
2426:Generated_Source\PSoC4/CyLib.c **** 
2427:Generated_Source\PSoC4/CyLib.c **** 
2428:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2429:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2430:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2431:Generated_Source\PSoC4/CyLib.c **** *
2432:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2433:Generated_Source\PSoC4/CyLib.c **** *
2434:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2435:Generated_Source\PSoC4/CyLib.c **** *
2436:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2437:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2438:Generated_Source\PSoC4/CyLib.c **** {
 466              		.loc 1 2438 0
 467              		.cfi_startproc
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 52


 468              		@ args = 0, pretend = 0, frame = 0
 469              		@ frame_needed = 0, uses_anonymous_args = 0
 470              		@ link register save eliminated.
 471              	.LVL22:
2439:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 472              		.loc 1 2439 0
 473 0000 1F23     		movs	r3, #31
 474 0002 1840     		ands	r0, r3
 475              	.LVL23:
 476 0004 1E3B     		subs	r3, r3, #30
 477 0006 8340     		lsls	r3, r3, r0
 478 0008 014A     		ldr	r2, .L40
 479 000a 1360     		str	r3, [r2]
2440:Generated_Source\PSoC4/CyLib.c **** }
 480              		.loc 1 2440 0
 481              		@ sp needed
 482 000c 7047     		bx	lr
 483              	.L41:
 484 000e C046     		.align	2
 485              	.L40:
 486 0010 00E100E0 		.word	-536813312
 487              		.cfi_endproc
 488              	.LFE20:
 489              		.size	CyIntEnable, .-CyIntEnable
 490              		.section	.text.CyIntGetState,"ax",%progbits
 491              		.align	2
 492              		.global	CyIntGetState
 493              		.code	16
 494              		.thumb_func
 495              		.type	CyIntGetState, %function
 496              	CyIntGetState:
 497              	.LFB21:
2441:Generated_Source\PSoC4/CyLib.c **** 
2442:Generated_Source\PSoC4/CyLib.c **** 
2443:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2444:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2445:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2446:Generated_Source\PSoC4/CyLib.c **** *
2447:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2448:Generated_Source\PSoC4/CyLib.c **** *
2449:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2450:Generated_Source\PSoC4/CyLib.c **** *
2451:Generated_Source\PSoC4/CyLib.c **** * \return
2452:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2453:Generated_Source\PSoC4/CyLib.c **** *
2454:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2455:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2456:Generated_Source\PSoC4/CyLib.c **** {
 498              		.loc 1 2456 0
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 0
 501              		@ frame_needed = 0, uses_anonymous_args = 0
 502              		@ link register save eliminated.
 503              	.LVL24:
2457:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2458:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 504              		.loc 1 2458 0
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 53


 505 0000 044B     		ldr	r3, .L43
 506 0002 1B68     		ldr	r3, [r3]
 507 0004 1F22     		movs	r2, #31
 508 0006 1040     		ands	r0, r2
 509              	.LVL25:
 510 0008 C340     		lsrs	r3, r3, r0
 511 000a 1800     		movs	r0, r3
 512 000c 0123     		movs	r3, #1
 513 000e 1840     		ands	r0, r3
2459:Generated_Source\PSoC4/CyLib.c **** }
 514              		.loc 1 2459 0
 515              		@ sp needed
 516 0010 7047     		bx	lr
 517              	.L44:
 518 0012 C046     		.align	2
 519              	.L43:
 520 0014 00E100E0 		.word	-536813312
 521              		.cfi_endproc
 522              	.LFE21:
 523              		.size	CyIntGetState, .-CyIntGetState
 524              		.section	.text.CyIntDisable,"ax",%progbits
 525              		.align	2
 526              		.global	CyIntDisable
 527              		.code	16
 528              		.thumb_func
 529              		.type	CyIntDisable, %function
 530              	CyIntDisable:
 531              	.LFB22:
2460:Generated_Source\PSoC4/CyLib.c **** 
2461:Generated_Source\PSoC4/CyLib.c **** 
2462:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2463:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2464:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2465:Generated_Source\PSoC4/CyLib.c **** *
2466:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2467:Generated_Source\PSoC4/CyLib.c **** *
2468:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2469:Generated_Source\PSoC4/CyLib.c **** *
2470:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2471:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2472:Generated_Source\PSoC4/CyLib.c **** {
 532              		.loc 1 2472 0
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 0
 535              		@ frame_needed = 0, uses_anonymous_args = 0
 536              		@ link register save eliminated.
 537              	.LVL26:
2473:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 538              		.loc 1 2473 0
 539 0000 1F23     		movs	r3, #31
 540 0002 1840     		ands	r0, r3
 541              	.LVL27:
 542 0004 1E3B     		subs	r3, r3, #30
 543 0006 8340     		lsls	r3, r3, r0
 544 0008 014A     		ldr	r2, .L46
 545 000a 1360     		str	r3, [r2]
2474:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 54


 546              		.loc 1 2474 0
 547              		@ sp needed
 548 000c 7047     		bx	lr
 549              	.L47:
 550 000e C046     		.align	2
 551              	.L46:
 552 0010 80E100E0 		.word	-536813184
 553              		.cfi_endproc
 554              	.LFE22:
 555              		.size	CyIntDisable, .-CyIntDisable
 556              		.section	.text.CyIntSetPending,"ax",%progbits
 557              		.align	2
 558              		.global	CyIntSetPending
 559              		.code	16
 560              		.thumb_func
 561              		.type	CyIntSetPending, %function
 562              	CyIntSetPending:
 563              	.LFB23:
2475:Generated_Source\PSoC4/CyLib.c **** 
2476:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2477:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2478:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2479:Generated_Source\PSoC4/CyLib.c **** *
2480:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2481:Generated_Source\PSoC4/CyLib.c **** *
2482:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2483:Generated_Source\PSoC4/CyLib.c **** *
2484:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2485:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2486:Generated_Source\PSoC4/CyLib.c **** {
 564              		.loc 1 2486 0
 565              		.cfi_startproc
 566              		@ args = 0, pretend = 0, frame = 0
 567              		@ frame_needed = 0, uses_anonymous_args = 0
 568              		@ link register save eliminated.
 569              	.LVL28:
2487:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 570              		.loc 1 2487 0
 571 0000 1F23     		movs	r3, #31
 572 0002 1840     		ands	r0, r3
 573              	.LVL29:
 574 0004 1E3B     		subs	r3, r3, #30
 575 0006 8340     		lsls	r3, r3, r0
 576 0008 014A     		ldr	r2, .L49
 577 000a 1360     		str	r3, [r2]
2488:Generated_Source\PSoC4/CyLib.c **** }
 578              		.loc 1 2488 0
 579              		@ sp needed
 580 000c 7047     		bx	lr
 581              	.L50:
 582 000e C046     		.align	2
 583              	.L49:
 584 0010 00E200E0 		.word	-536813056
 585              		.cfi_endproc
 586              	.LFE23:
 587              		.size	CyIntSetPending, .-CyIntSetPending
 588              		.section	.text.CyIntClearPending,"ax",%progbits
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 55


 589              		.align	2
 590              		.global	CyIntClearPending
 591              		.code	16
 592              		.thumb_func
 593              		.type	CyIntClearPending, %function
 594              	CyIntClearPending:
 595              	.LFB24:
2489:Generated_Source\PSoC4/CyLib.c **** 
2490:Generated_Source\PSoC4/CyLib.c **** 
2491:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2492:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2493:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2494:Generated_Source\PSoC4/CyLib.c **** *
2495:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2496:Generated_Source\PSoC4/CyLib.c **** *
2497:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2498:Generated_Source\PSoC4/CyLib.c **** *
2499:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2500:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2501:Generated_Source\PSoC4/CyLib.c **** {
 596              		.loc 1 2501 0
 597              		.cfi_startproc
 598              		@ args = 0, pretend = 0, frame = 0
 599              		@ frame_needed = 0, uses_anonymous_args = 0
 600              		@ link register save eliminated.
 601              	.LVL30:
2502:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 602              		.loc 1 2502 0
 603 0000 1F23     		movs	r3, #31
 604 0002 1840     		ands	r0, r3
 605              	.LVL31:
 606 0004 1E3B     		subs	r3, r3, #30
 607 0006 8340     		lsls	r3, r3, r0
 608 0008 014A     		ldr	r2, .L52
 609 000a 1360     		str	r3, [r2]
2503:Generated_Source\PSoC4/CyLib.c **** }
 610              		.loc 1 2503 0
 611              		@ sp needed
 612 000c 7047     		bx	lr
 613              	.L53:
 614 000e C046     		.align	2
 615              	.L52:
 616 0010 80E200E0 		.word	-536812928
 617              		.cfi_endproc
 618              	.LFE24:
 619              		.size	CyIntClearPending, .-CyIntClearPending
 620              		.section	.text.CyHalt,"ax",%progbits
 621              		.align	2
 622              		.global	CyHalt
 623              		.code	16
 624              		.thumb_func
 625              		.type	CyHalt, %function
 626              	CyHalt:
 627              	.LFB25:
2504:Generated_Source\PSoC4/CyLib.c **** 
2505:Generated_Source\PSoC4/CyLib.c **** 
2506:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 56


2507:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2508:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2509:Generated_Source\PSoC4/CyLib.c **** *
2510:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2511:Generated_Source\PSoC4/CyLib.c **** *
2512:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2513:Generated_Source\PSoC4/CyLib.c **** *
2514:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2515:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2516:Generated_Source\PSoC4/CyLib.c **** {
 628              		.loc 1 2516 0
 629              		.cfi_startproc
 630              		@ args = 0, pretend = 0, frame = 0
 631              		@ frame_needed = 0, uses_anonymous_args = 0
 632              		@ link register save eliminated.
 633              	.LVL32:
2517:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2518:Generated_Source\PSoC4/CyLib.c ****     {
2519:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2520:Generated_Source\PSoC4/CyLib.c ****     }
2521:Generated_Source\PSoC4/CyLib.c **** 
2522:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2523:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2524:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2525:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 634              		.loc 1 2525 0
 635              		.syntax divided
 636              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 637 0000 01BE     		    bkpt    1
 638              	@ 0 "" 2
2526:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2527:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2528:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2529:Generated_Source\PSoC4/CyLib.c **** }
 639              		.loc 1 2529 0
 640              		.thumb
 641              		.syntax unified
 642              		@ sp needed
 643 0002 7047     		bx	lr
 644              		.cfi_endproc
 645              	.LFE25:
 646              		.size	CyHalt, .-CyHalt
 647              		.section	.text.CyIntSetSysVector,"ax",%progbits
 648              		.align	2
 649              		.global	CyIntSetSysVector
 650              		.code	16
 651              		.thumb_func
 652              		.type	CyIntSetSysVector, %function
 653              	CyIntSetSysVector:
 654              	.LFB14:
2280:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 655              		.loc 1 2280 0
 656              		.cfi_startproc
 657              		@ args = 0, pretend = 0, frame = 0
 658              		@ frame_needed = 0, uses_anonymous_args = 0
 659              	.LVL33:
 660 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 57


 661              		.cfi_def_cfa_offset 16
 662              		.cfi_offset 4, -16
 663              		.cfi_offset 5, -12
 664              		.cfi_offset 6, -8
 665              		.cfi_offset 14, -4
 666 0002 0400     		movs	r4, r0
 667 0004 0D00     		movs	r5, r1
 668              	.LVL34:
2284:Generated_Source\PSoC4/CyLib.c **** 
 669              		.loc 1 2284 0
 670 0006 0F28     		cmp	r0, #15
 671 0008 02D9     		bls	.L56
2284:Generated_Source\PSoC4/CyLib.c **** 
 672              		.loc 1 2284 0 is_stmt 0 discriminator 1
 673 000a 0020     		movs	r0, #0
 674              	.LVL35:
 675 000c FFF7FEFF 		bl	CyHalt
 676              	.LVL36:
 677              	.L56:
2287:Generated_Source\PSoC4/CyLib.c **** 
 678              		.loc 1 2287 0 is_stmt 1
 679 0010 A400     		lsls	r4, r4, #2
 680 0012 8023     		movs	r3, #128
 681 0014 9B05     		lsls	r3, r3, #22
 682 0016 9C46     		mov	ip, r3
 683 0018 6444     		add	r4, r4, ip
 684 001a 2068     		ldr	r0, [r4]
 685              	.LVL37:
2290:Generated_Source\PSoC4/CyLib.c **** 
 686              		.loc 1 2290 0
 687 001c 2560     		str	r5, [r4]
2293:Generated_Source\PSoC4/CyLib.c **** 
 688              		.loc 1 2293 0
 689              		@ sp needed
 690              	.LVL38:
 691 001e 70BD     		pop	{r4, r5, r6, pc}
 692              		.cfi_endproc
 693              	.LFE14:
 694              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 695              		.section	.text.CyIntGetSysVector,"ax",%progbits
 696              		.align	2
 697              		.global	CyIntGetSysVector
 698              		.code	16
 699              		.thumb_func
 700              		.type	CyIntGetSysVector, %function
 701              	CyIntGetSysVector:
 702              	.LFB15:
2314:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 703              		.loc 1 2314 0
 704              		.cfi_startproc
 705              		@ args = 0, pretend = 0, frame = 0
 706              		@ frame_needed = 0, uses_anonymous_args = 0
 707              	.LVL39:
 708 0000 10B5     		push	{r4, lr}
 709              		.cfi_def_cfa_offset 8
 710              		.cfi_offset 4, -8
 711              		.cfi_offset 14, -4
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 58


 712 0002 0400     		movs	r4, r0
 713              	.LVL40:
2317:Generated_Source\PSoC4/CyLib.c **** 
 714              		.loc 1 2317 0
 715 0004 0F28     		cmp	r0, #15
 716 0006 02D9     		bls	.L58
2317:Generated_Source\PSoC4/CyLib.c **** 
 717              		.loc 1 2317 0 is_stmt 0 discriminator 1
 718 0008 0020     		movs	r0, #0
 719              	.LVL41:
 720 000a FFF7FEFF 		bl	CyHalt
 721              	.LVL42:
 722              	.L58:
2319:Generated_Source\PSoC4/CyLib.c **** }
 723              		.loc 1 2319 0 is_stmt 1
 724 000e A400     		lsls	r4, r4, #2
 725 0010 8023     		movs	r3, #128
 726 0012 9B05     		lsls	r3, r3, #22
 727 0014 9C46     		mov	ip, r3
 728 0016 6444     		add	r4, r4, ip
 729 0018 2068     		ldr	r0, [r4]
2320:Generated_Source\PSoC4/CyLib.c **** 
 730              		.loc 1 2320 0
 731              		@ sp needed
 732 001a 10BD     		pop	{r4, pc}
 733              		.cfi_endproc
 734              	.LFE15:
 735              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 736              		.section	.text.CyIntSetVector,"ax",%progbits
 737              		.align	2
 738              		.global	CyIntSetVector
 739              		.code	16
 740              		.thumb_func
 741              		.type	CyIntSetVector, %function
 742              	CyIntSetVector:
 743              	.LFB16:
2336:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 744              		.loc 1 2336 0
 745              		.cfi_startproc
 746              		@ args = 0, pretend = 0, frame = 0
 747              		@ frame_needed = 0, uses_anonymous_args = 0
 748              	.LVL43:
 749 0000 70B5     		push	{r4, r5, r6, lr}
 750              		.cfi_def_cfa_offset 16
 751              		.cfi_offset 4, -16
 752              		.cfi_offset 5, -12
 753              		.cfi_offset 6, -8
 754              		.cfi_offset 14, -4
 755 0002 0400     		movs	r4, r0
 756 0004 0D00     		movs	r5, r1
 757              	.LVL44:
2340:Generated_Source\PSoC4/CyLib.c **** 
 758              		.loc 1 2340 0
 759 0006 1F28     		cmp	r0, #31
 760 0008 02D9     		bls	.L60
2340:Generated_Source\PSoC4/CyLib.c **** 
 761              		.loc 1 2340 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 59


 762 000a 0020     		movs	r0, #0
 763              	.LVL45:
 764 000c FFF7FEFF 		bl	CyHalt
 765              	.LVL46:
 766              	.L60:
2343:Generated_Source\PSoC4/CyLib.c **** 
 767              		.loc 1 2343 0 is_stmt 1
 768 0010 1034     		adds	r4, r4, #16
 769 0012 A400     		lsls	r4, r4, #2
 770 0014 8023     		movs	r3, #128
 771 0016 9B05     		lsls	r3, r3, #22
 772 0018 9C46     		mov	ip, r3
 773 001a 6444     		add	r4, r4, ip
 774 001c 2068     		ldr	r0, [r4]
 775              	.LVL47:
2346:Generated_Source\PSoC4/CyLib.c **** 
 776              		.loc 1 2346 0
 777 001e 2560     		str	r5, [r4]
2349:Generated_Source\PSoC4/CyLib.c **** 
 778              		.loc 1 2349 0
 779              		@ sp needed
 780              	.LVL48:
 781 0020 70BD     		pop	{r4, r5, r6, pc}
 782              		.cfi_endproc
 783              	.LFE16:
 784              		.size	CyIntSetVector, .-CyIntSetVector
 785 0022 C046     		.section	.text.CyIntGetVector,"ax",%progbits
 786              		.align	2
 787              		.global	CyIntGetVector
 788              		.code	16
 789              		.thumb_func
 790              		.type	CyIntGetVector, %function
 791              	CyIntGetVector:
 792              	.LFB17:
2364:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 793              		.loc 1 2364 0
 794              		.cfi_startproc
 795              		@ args = 0, pretend = 0, frame = 0
 796              		@ frame_needed = 0, uses_anonymous_args = 0
 797              	.LVL49:
 798 0000 10B5     		push	{r4, lr}
 799              		.cfi_def_cfa_offset 8
 800              		.cfi_offset 4, -8
 801              		.cfi_offset 14, -4
 802 0002 0400     		movs	r4, r0
 803              	.LVL50:
2367:Generated_Source\PSoC4/CyLib.c **** 
 804              		.loc 1 2367 0
 805 0004 1F28     		cmp	r0, #31
 806 0006 02D9     		bls	.L62
2367:Generated_Source\PSoC4/CyLib.c **** 
 807              		.loc 1 2367 0 is_stmt 0 discriminator 1
 808 0008 0020     		movs	r0, #0
 809              	.LVL51:
 810 000a FFF7FEFF 		bl	CyHalt
 811              	.LVL52:
 812              	.L62:
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 60


2369:Generated_Source\PSoC4/CyLib.c **** }
 813              		.loc 1 2369 0 is_stmt 1
 814 000e 1034     		adds	r4, r4, #16
 815 0010 A400     		lsls	r4, r4, #2
 816 0012 8023     		movs	r3, #128
 817 0014 9B05     		lsls	r3, r3, #22
 818 0016 9C46     		mov	ip, r3
 819 0018 6444     		add	r4, r4, ip
 820 001a 2068     		ldr	r0, [r4]
2370:Generated_Source\PSoC4/CyLib.c **** 
 821              		.loc 1 2370 0
 822              		@ sp needed
 823 001c 10BD     		pop	{r4, pc}
 824              		.cfi_endproc
 825              	.LFE17:
 826              		.size	CyIntGetVector, .-CyIntGetVector
 827 001e C046     		.section	.text.CyIntSetPriority,"ax",%progbits
 828              		.align	2
 829              		.global	CyIntSetPriority
 830              		.code	16
 831              		.thumb_func
 832              		.type	CyIntSetPriority, %function
 833              	CyIntSetPriority:
 834              	.LFB18:
2383:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 835              		.loc 1 2383 0
 836              		.cfi_startproc
 837              		@ args = 0, pretend = 0, frame = 0
 838              		@ frame_needed = 0, uses_anonymous_args = 0
 839              	.LVL53:
 840 0000 70B5     		push	{r4, r5, r6, lr}
 841              		.cfi_def_cfa_offset 16
 842              		.cfi_offset 4, -16
 843              		.cfi_offset 5, -12
 844              		.cfi_offset 6, -8
 845              		.cfi_offset 14, -4
 846 0002 0400     		movs	r4, r0
 847 0004 0E00     		movs	r6, r1
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 848              		.loc 1 2388 0
 849 0006 0329     		cmp	r1, #3
 850 0008 02D9     		bls	.L64
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 851              		.loc 1 2388 0 is_stmt 0 discriminator 1
 852 000a 0020     		movs	r0, #0
 853              	.LVL54:
 854 000c FFF7FEFF 		bl	CyHalt
 855              	.LVL55:
 856              	.L64:
2389:Generated_Source\PSoC4/CyLib.c **** 
 857              		.loc 1 2389 0 is_stmt 1
 858 0010 1F2C     		cmp	r4, #31
 859 0012 02D9     		bls	.L65
2389:Generated_Source\PSoC4/CyLib.c **** 
 860              		.loc 1 2389 0 is_stmt 0 discriminator 1
 861 0014 0020     		movs	r0, #0
 862 0016 FFF7FEFF 		bl	CyHalt
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 61


 863              	.LVL56:
 864              	.L65:
2391:Generated_Source\PSoC4/CyLib.c **** 
 865              		.loc 1 2391 0 is_stmt 1
 866 001a 0325     		movs	r5, #3
 867 001c 2540     		ands	r5, r4
 868 001e ED00     		lsls	r5, r5, #3
 869 0020 0635     		adds	r5, r5, #6
 870              	.LVL57:
2393:Generated_Source\PSoC4/CyLib.c **** 
 871              		.loc 1 2393 0
 872 0022 FFF7FEFF 		bl	CyEnterCriticalSection
 873              	.LVL58:
2395:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 874              		.loc 1 2395 0
 875 0026 A408     		lsrs	r4, r4, #2
 876 0028 A400     		lsls	r4, r4, #2
 877 002a 074B     		ldr	r3, .L66
 878 002c 9C46     		mov	ip, r3
 879 002e 6444     		add	r4, r4, ip
 880 0030 2168     		ldr	r1, [r4]
 881              	.LVL59:
2396:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 882              		.loc 1 2396 0
 883 0032 0323     		movs	r3, #3
 884 0034 AB40     		lsls	r3, r3, r5
 885 0036 9943     		bics	r1, r3
 886              	.LVL60:
 887 0038 0B00     		movs	r3, r1
 888              	.LVL61:
2397:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 889              		.loc 1 2397 0
 890 003a 3100     		movs	r1, r6
 891              	.LVL62:
 892 003c A940     		lsls	r1, r1, r5
 893 003e 1943     		orrs	r1, r3
 894              	.LVL63:
2398:Generated_Source\PSoC4/CyLib.c **** 
 895              		.loc 1 2398 0
 896 0040 2160     		str	r1, [r4]
2400:Generated_Source\PSoC4/CyLib.c **** }
 897              		.loc 1 2400 0
 898 0042 FFF7FEFF 		bl	CyExitCriticalSection
 899              	.LVL64:
2401:Generated_Source\PSoC4/CyLib.c **** 
 900              		.loc 1 2401 0
 901              		@ sp needed
 902              	.LVL65:
 903 0046 70BD     		pop	{r4, r5, r6, pc}
 904              	.L67:
 905              		.align	2
 906              	.L66:
 907 0048 00E400E0 		.word	-536812544
 908              		.cfi_endproc
 909              	.LFE18:
 910              		.size	CyIntSetPriority, .-CyIntSetPriority
 911              		.section	.text.CyIntGetPriority,"ax",%progbits
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 62


 912              		.align	2
 913              		.global	CyIntGetPriority
 914              		.code	16
 915              		.thumb_func
 916              		.type	CyIntGetPriority, %function
 917              	CyIntGetPriority:
 918              	.LFB19:
2417:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
 919              		.loc 1 2417 0
 920              		.cfi_startproc
 921              		@ args = 0, pretend = 0, frame = 0
 922              		@ frame_needed = 0, uses_anonymous_args = 0
 923              	.LVL66:
 924 0000 10B5     		push	{r4, lr}
 925              		.cfi_def_cfa_offset 8
 926              		.cfi_offset 4, -8
 927              		.cfi_offset 14, -4
 928 0002 0400     		movs	r4, r0
2420:Generated_Source\PSoC4/CyLib.c **** 
 929              		.loc 1 2420 0
 930 0004 1F28     		cmp	r0, #31
 931 0006 02D9     		bls	.L69
2420:Generated_Source\PSoC4/CyLib.c **** 
 932              		.loc 1 2420 0 is_stmt 0 discriminator 1
 933 0008 0020     		movs	r0, #0
 934              	.LVL67:
 935 000a FFF7FEFF 		bl	CyHalt
 936              	.LVL68:
 937              	.L69:
2422:Generated_Source\PSoC4/CyLib.c **** 
 938              		.loc 1 2422 0 is_stmt 1
 939 000e A308     		lsrs	r3, r4, #2
 940 0010 9B00     		lsls	r3, r3, #2
 941 0012 054A     		ldr	r2, .L70
 942 0014 9446     		mov	ip, r2
 943 0016 6344     		add	r3, r3, ip
 944 0018 1868     		ldr	r0, [r3]
 945 001a 0323     		movs	r3, #3
 946 001c 1C40     		ands	r4, r3
 947 001e E400     		lsls	r4, r4, #3
 948 0020 0634     		adds	r4, r4, #6
 949 0022 E040     		lsrs	r0, r0, r4
 950              	.LVL69:
2424:Generated_Source\PSoC4/CyLib.c **** }
 951              		.loc 1 2424 0
 952 0024 1840     		ands	r0, r3
 953              	.LVL70:
2425:Generated_Source\PSoC4/CyLib.c **** 
 954              		.loc 1 2425 0
 955              		@ sp needed
 956 0026 10BD     		pop	{r4, pc}
 957              	.L71:
 958              		.align	2
 959              	.L70:
 960 0028 00E400E0 		.word	-536812544
 961              		.cfi_endproc
 962              	.LFE19:
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 63


 963              		.size	CyIntGetPriority, .-CyIntGetPriority
 964              		.section	.text.CySoftwareReset,"ax",%progbits
 965              		.align	2
 966              		.global	CySoftwareReset
 967              		.code	16
 968              		.thumb_func
 969              		.type	CySoftwareReset, %function
 970              	CySoftwareReset:
 971              	.LFB26:
2530:Generated_Source\PSoC4/CyLib.c **** 
2531:Generated_Source\PSoC4/CyLib.c **** 
2532:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2533:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2534:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2535:Generated_Source\PSoC4/CyLib.c **** *
2536:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2537:Generated_Source\PSoC4/CyLib.c **** *
2538:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2539:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2540:Generated_Source\PSoC4/CyLib.c **** {
 972              		.loc 1 2540 0
 973              		.cfi_startproc
 974              		@ args = 0, pretend = 0, frame = 0
 975              		@ frame_needed = 0, uses_anonymous_args = 0
 976              		@ link register save eliminated.
2541:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2542:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2543:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2544:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2545:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 977              		.loc 1 2545 0
 978 0000 034A     		ldr	r2, .L73
 979 0002 1368     		ldr	r3, [r2]
 980 0004 1B04     		lsls	r3, r3, #16
 981 0006 1B0C     		lsrs	r3, r3, #16
2546:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 982              		.loc 1 2546 0
 983 0008 0249     		ldr	r1, .L73+4
 984 000a 0B43     		orrs	r3, r1
2545:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 985              		.loc 1 2545 0
 986 000c 1360     		str	r3, [r2]
2547:Generated_Source\PSoC4/CyLib.c **** }
 987              		.loc 1 2547 0
 988              		@ sp needed
 989 000e 7047     		bx	lr
 990              	.L74:
 991              		.align	2
 992              	.L73:
 993 0010 0CED00E0 		.word	-536810228
 994 0014 0400FA05 		.word	100270084
 995              		.cfi_endproc
 996              	.LFE26:
 997              		.size	CySoftwareReset, .-CySoftwareReset
 998              		.section	.text.CyDelay,"ax",%progbits
 999              		.align	2
 1000              		.global	CyDelay
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 64


 1001              		.code	16
 1002              		.thumb_func
 1003              		.type	CyDelay, %function
 1004              	CyDelay:
 1005              	.LFB27:
2548:Generated_Source\PSoC4/CyLib.c **** 
2549:Generated_Source\PSoC4/CyLib.c **** 
2550:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2551:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2552:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2553:Generated_Source\PSoC4/CyLib.c **** *
2554:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2555:Generated_Source\PSoC4/CyLib.c **** *
2556:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2557:Generated_Source\PSoC4/CyLib.c **** *
2558:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2559:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2560:Generated_Source\PSoC4/CyLib.c **** {
 1006              		.loc 1 2560 0
 1007              		.cfi_startproc
 1008              		@ args = 0, pretend = 0, frame = 0
 1009              		@ frame_needed = 0, uses_anonymous_args = 0
 1010              	.LVL71:
 1011 0000 10B5     		push	{r4, lr}
 1012              		.cfi_def_cfa_offset 8
 1013              		.cfi_offset 4, -8
 1014              		.cfi_offset 14, -4
 1015 0002 0400     		movs	r4, r0
2561:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1016              		.loc 1 2561 0
 1017 0004 06E0     		b	.L76
 1018              	.LVL72:
 1019              	.L77:
2562:Generated_Source\PSoC4/CyLib.c ****     {
2563:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2564:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2565:Generated_Source\PSoC4/CyLib.c ****          */
2566:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1020              		.loc 1 2566 0
 1021 0006 084B     		ldr	r3, .L78
 1022 0008 5868     		ldr	r0, [r3, #4]
 1023 000a FFF7FEFF 		bl	CyDelayCycles
 1024              	.LVL73:
2567:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1025              		.loc 1 2567 0
 1026 000e 074B     		ldr	r3, .L78+4
 1027 0010 9C46     		mov	ip, r3
 1028 0012 6444     		add	r4, r4, ip
 1029              	.LVL74:
 1030              	.L76:
2561:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1031              		.loc 1 2561 0
 1032 0014 8023     		movs	r3, #128
 1033 0016 1B02     		lsls	r3, r3, #8
 1034 0018 9C42     		cmp	r4, r3
 1035 001a F4D8     		bhi	.L77
2568:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 65


2569:Generated_Source\PSoC4/CyLib.c **** 
2570:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1036              		.loc 1 2570 0
 1037 001c 024B     		ldr	r3, .L78
 1038 001e 9868     		ldr	r0, [r3, #8]
 1039 0020 6043     		muls	r0, r4
 1040 0022 FFF7FEFF 		bl	CyDelayCycles
 1041              	.LVL75:
2571:Generated_Source\PSoC4/CyLib.c **** }
 1042              		.loc 1 2571 0
 1043              		@ sp needed
 1044              	.LVL76:
 1045 0026 10BD     		pop	{r4, pc}
 1046              	.L79:
 1047              		.align	2
 1048              	.L78:
 1049 0028 00000000 		.word	.LANCHOR0
 1050 002c 0080FFFF 		.word	-32768
 1051              		.cfi_endproc
 1052              	.LFE27:
 1053              		.size	CyDelay, .-CyDelay
 1054              		.section	.text.CyDelayUs,"ax",%progbits
 1055              		.align	2
 1056              		.global	CyDelayUs
 1057              		.code	16
 1058              		.thumb_func
 1059              		.type	CyDelayUs, %function
 1060              	CyDelayUs:
 1061              	.LFB28:
2572:Generated_Source\PSoC4/CyLib.c **** 
2573:Generated_Source\PSoC4/CyLib.c **** 
2574:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2575:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2576:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2577:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2578:Generated_Source\PSoC4/CyLib.c **** *
2579:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2580:Generated_Source\PSoC4/CyLib.c **** *
2581:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2582:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2583:Generated_Source\PSoC4/CyLib.c **** {
 1062              		.loc 1 2583 0
 1063              		.cfi_startproc
 1064              		@ args = 0, pretend = 0, frame = 0
 1065              		@ frame_needed = 0, uses_anonymous_args = 0
 1066              	.LVL77:
 1067 0000 10B5     		push	{r4, lr}
 1068              		.cfi_def_cfa_offset 8
 1069              		.cfi_offset 4, -8
 1070              		.cfi_offset 14, -4
2584:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1071              		.loc 1 2584 0
 1072 0002 034B     		ldr	r3, .L81
 1073 0004 1B7B     		ldrb	r3, [r3, #12]
 1074 0006 5843     		muls	r0, r3
 1075              	.LVL78:
 1076 0008 FFF7FEFF 		bl	CyDelayCycles
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 66


 1077              	.LVL79:
2585:Generated_Source\PSoC4/CyLib.c **** }
 1078              		.loc 1 2585 0
 1079              		@ sp needed
 1080 000c 10BD     		pop	{r4, pc}
 1081              	.L82:
 1082 000e C046     		.align	2
 1083              	.L81:
 1084 0010 00000000 		.word	.LANCHOR0
 1085              		.cfi_endproc
 1086              	.LFE28:
 1087              		.size	CyDelayUs, .-CyDelayUs
 1088              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 1089              		.align	2
 1090              		.global	CySysClkWriteImoFreq
 1091              		.code	16
 1092              		.thumb_func
 1093              		.type	CySysClkWriteImoFreq, %function
 1094              	CySysClkWriteImoFreq:
 1095              	.LFB6:
 624:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 1096              		.loc 1 624 0
 1097              		.cfi_startproc
 1098              		@ args = 0, pretend = 0, frame = 8
 1099              		@ frame_needed = 0, uses_anonymous_args = 0
 1100              	.LVL80:
 1101 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1102              		.cfi_def_cfa_offset 20
 1103              		.cfi_offset 4, -20
 1104              		.cfi_offset 5, -16
 1105              		.cfi_offset 6, -12
 1106              		.cfi_offset 7, -8
 1107              		.cfi_offset 14, -4
 1108 0002 5746     		mov	r7, r10
 1109 0004 4E46     		mov	r6, r9
 1110 0006 C0B4     		push	{r6, r7}
 1111              		.cfi_def_cfa_offset 28
 1112              		.cfi_offset 9, -28
 1113              		.cfi_offset 10, -24
 1114 0008 83B0     		sub	sp, sp, #12
 1115              		.cfi_def_cfa_offset 40
 1116 000a 0400     		movs	r4, r0
 647:Generated_Source\PSoC4/CyLib.c **** 
 1117              		.loc 1 647 0
 1118 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1119              	.LVL81:
 1120 0010 0190     		str	r0, [sp, #4]
 1121              	.LVL82:
 697:Generated_Source\PSoC4/CyLib.c ****         {
 1122              		.loc 1 697 0
 1123 0012 E71E     		subs	r7, r4, #3
 1124 0014 2D2F     		cmp	r7, #45
 1125 0016 74D8     		bhi	.L84
 699:Generated_Source\PSoC4/CyLib.c ****             {
 1126              		.loc 1 699 0
 1127 0018 3F4B     		ldr	r3, .L94
 1128 001a 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 67


 1129 001c DBB2     		uxtb	r3, r3
 1130 001e 9C42     		cmp	r4, r3
 1131 0020 08D8     		bhi	.L85
 701:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 1132              		.loc 1 701 0
 1133 0022 3E4B     		ldr	r3, .L94+4
 1134 0024 1B78     		ldrb	r3, [r3]
 1135 0026 DBB2     		uxtb	r3, r3
 1136 0028 9A46     		mov	r10, r3
 1137              	.LVL83:
 702:Generated_Source\PSoC4/CyLib.c ****             }
 1138              		.loc 1 702 0
 1139 002a 3D4B     		ldr	r3, .L94+8
 1140 002c 1B78     		ldrb	r3, [r3]
 1141 002e DBB2     		uxtb	r3, r3
 1142 0030 9946     		mov	r9, r3
 1143              	.LVL84:
 1144 0032 31E0     		b	.L86
 1145              	.LVL85:
 1146              	.L85:
 704:Generated_Source\PSoC4/CyLib.c ****             {
 1147              		.loc 1 704 0
 1148 0034 3B4B     		ldr	r3, .L94+12
 1149 0036 1B78     		ldrb	r3, [r3]
 1150 0038 DBB2     		uxtb	r3, r3
 1151 003a 9C42     		cmp	r4, r3
 1152 003c 08D8     		bhi	.L87
 706:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 1153              		.loc 1 706 0
 1154 003e 3A4B     		ldr	r3, .L94+16
 1155 0040 1B78     		ldrb	r3, [r3]
 1156 0042 DBB2     		uxtb	r3, r3
 1157 0044 9A46     		mov	r10, r3
 1158              	.LVL86:
 707:Generated_Source\PSoC4/CyLib.c ****             }
 1159              		.loc 1 707 0
 1160 0046 394B     		ldr	r3, .L94+20
 1161 0048 1B78     		ldrb	r3, [r3]
 1162 004a DBB2     		uxtb	r3, r3
 1163 004c 9946     		mov	r9, r3
 1164              	.LVL87:
 1165 004e 23E0     		b	.L86
 1166              	.LVL88:
 1167              	.L87:
 709:Generated_Source\PSoC4/CyLib.c ****             {
 1168              		.loc 1 709 0
 1169 0050 374B     		ldr	r3, .L94+24
 1170 0052 1B78     		ldrb	r3, [r3]
 1171 0054 DBB2     		uxtb	r3, r3
 1172 0056 9C42     		cmp	r4, r3
 1173 0058 08D8     		bhi	.L88
 711:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 1174              		.loc 1 711 0
 1175 005a 364B     		ldr	r3, .L94+28
 1176 005c 1B78     		ldrb	r3, [r3]
 1177 005e DBB2     		uxtb	r3, r3
 1178 0060 9A46     		mov	r10, r3
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 68


 1179              	.LVL89:
 712:Generated_Source\PSoC4/CyLib.c ****             }
 1180              		.loc 1 712 0
 1181 0062 354B     		ldr	r3, .L94+32
 1182 0064 1B78     		ldrb	r3, [r3]
 1183 0066 DBB2     		uxtb	r3, r3
 1184 0068 9946     		mov	r9, r3
 1185              	.LVL90:
 1186 006a 15E0     		b	.L86
 1187              	.LVL91:
 1188              	.L88:
 714:Generated_Source\PSoC4/CyLib.c ****             {
 1189              		.loc 1 714 0
 1190 006c 334B     		ldr	r3, .L94+36
 1191 006e 1B78     		ldrb	r3, [r3]
 1192 0070 DBB2     		uxtb	r3, r3
 1193 0072 9C42     		cmp	r4, r3
 1194 0074 08D8     		bhi	.L89
 716:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 1195              		.loc 1 716 0
 1196 0076 324B     		ldr	r3, .L94+40
 1197 0078 1B78     		ldrb	r3, [r3]
 1198 007a DBB2     		uxtb	r3, r3
 1199 007c 9A46     		mov	r10, r3
 1200              	.LVL92:
 717:Generated_Source\PSoC4/CyLib.c ****             }
 1201              		.loc 1 717 0
 1202 007e 314B     		ldr	r3, .L94+44
 1203 0080 1B78     		ldrb	r3, [r3]
 1204 0082 DBB2     		uxtb	r3, r3
 1205 0084 9946     		mov	r9, r3
 1206              	.LVL93:
 1207 0086 07E0     		b	.L86
 1208              	.LVL94:
 1209              	.L89:
 721:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 1210              		.loc 1 721 0
 1211 0088 2F4B     		ldr	r3, .L94+48
 1212 008a 1B78     		ldrb	r3, [r3]
 1213 008c DBB2     		uxtb	r3, r3
 1214 008e 9A46     		mov	r10, r3
 1215              	.LVL95:
 722:Generated_Source\PSoC4/CyLib.c ****             }
 1216              		.loc 1 722 0
 1217 0090 2E4B     		ldr	r3, .L94+52
 1218 0092 1B78     		ldrb	r3, [r3]
 1219 0094 DBB2     		uxtb	r3, r3
 1220 0096 9946     		mov	r9, r3
 1221              	.LVL96:
 1222              	.L86:
 726:Generated_Source\PSoC4/CyLib.c **** 
 1223              		.loc 1 726 0
 1224 0098 2D4B     		ldr	r3, .L94+56
 1225 009a DE5D     		ldrb	r6, [r3, r7]
 1226              	.LVL97:
 738:Generated_Source\PSoC4/CyLib.c ****             {
 1227              		.loc 1 738 0
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 69


 1228 009c 2F2E     		cmp	r6, #47
 1229 009e 09D9     		bls	.L90
 738:Generated_Source\PSoC4/CyLib.c ****             {
 1230              		.loc 1 738 0 is_stmt 0 discriminator 1
 1231 00a0 2A2C     		cmp	r4, #42
 1232 00a2 07D9     		bls	.L90
 741:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 1233              		.loc 1 741 0 is_stmt 1
 1234 00a4 1922     		movs	r2, #25
 1235 00a6 2B4B     		ldr	r3, .L94+60
 1236 00a8 1A60     		str	r2, [r3]
 1237              	.LVL98:
 744:Generated_Source\PSoC4/CyLib.c **** 
 1238              		.loc 1 744 0
 1239 00aa 0520     		movs	r0, #5
 1240 00ac FFF7FEFF 		bl	CyDelayCycles
 1241              	.LVL99:
 746:Generated_Source\PSoC4/CyLib.c ****             }
 1242              		.loc 1 746 0
 1243 00b0 1925     		movs	r5, #25
 1244 00b2 03E0     		b	.L91
 1245              	.LVL100:
 1246              	.L90:
 750:Generated_Source\PSoC4/CyLib.c ****             }
 1247              		.loc 1 750 0
 1248 00b4 274B     		ldr	r3, .L94+60
 1249 00b6 1D68     		ldr	r5, [r3]
 1250 00b8 3F23     		movs	r3, #63
 1251 00ba 1D40     		ands	r5, r3
 1252              	.LVL101:
 1253              	.L91:
 762:Generated_Source\PSoC4/CyLib.c ****             {
 1254              		.loc 1 762 0
 1255 00bc B542     		cmp	r5, r6
 1256 00be 06D9     		bls	.L92
 765:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1257              		.loc 1 765 0
 1258 00c0 234B     		ldr	r3, .L94+56
 1259 00c2 DA5D     		ldrb	r2, [r3, r7]
 1260 00c4 234B     		ldr	r3, .L94+60
 1261 00c6 1A60     		str	r2, [r3]
 766:Generated_Source\PSoC4/CyLib.c ****             }
 1262              		.loc 1 766 0
 1263 00c8 0520     		movs	r0, #5
 1264 00ca FFF7FEFF 		bl	CyDelayCycles
 1265              	.LVL102:
 1266              	.L92:
 785:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 1267              		.loc 1 785 0
 1268 00ce 1F4B     		ldr	r3, .L94+52
 1269 00d0 9C46     		mov	ip, r3
 1270 00d2 6444     		add	r4, r4, ip
 1271              	.LVL103:
 1272 00d4 2378     		ldrb	r3, [r4]
 1273 00d6 DBB2     		uxtb	r3, r3
 1274              	.LVL104:
 789:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 70


 1275              		.loc 1 789 0
 1276 00d8 1F4A     		ldr	r2, .L94+64
 1277 00da 1360     		str	r3, [r2]
 790:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 1278              		.loc 1 790 0
 1279 00dc 1F4B     		ldr	r3, .L94+68
 1280              	.LVL105:
 1281 00de 5246     		mov	r2, r10
 1282              	.LVL106:
 1283 00e0 1A60     		str	r2, [r3]
 1284              	.LVL107:
 791:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 1285              		.loc 1 791 0
 1286 00e2 1F4B     		ldr	r3, .L94+72
 1287 00e4 4A46     		mov	r2, r9
 1288 00e6 1A60     		str	r2, [r3]
 792:Generated_Source\PSoC4/CyLib.c **** 
 1289              		.loc 1 792 0
 1290 00e8 0520     		movs	r0, #5
 1291 00ea FFF7FEFF 		bl	CyDelayUs
 1292              	.LVL108:
 794:Generated_Source\PSoC4/CyLib.c ****             {
 1293              		.loc 1 794 0
 1294 00ee B542     		cmp	r5, r6
 1295 00f0 0AD2     		bcs	.L93
 797:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1296              		.loc 1 797 0
 1297 00f2 174B     		ldr	r3, .L94+56
 1298 00f4 DA5D     		ldrb	r2, [r3, r7]
 1299 00f6 174B     		ldr	r3, .L94+60
 1300 00f8 1A60     		str	r2, [r3]
 798:Generated_Source\PSoC4/CyLib.c ****             }
 1301              		.loc 1 798 0
 1302 00fa 0520     		movs	r0, #5
 1303 00fc FFF7FEFF 		bl	CyDelayCycles
 1304              	.LVL109:
 1305 0100 02E0     		b	.L93
 1306              	.LVL110:
 1307              	.L84:
 804:Generated_Source\PSoC4/CyLib.c ****         }
 1308              		.loc 1 804 0 discriminator 1
 1309 0102 0020     		movs	r0, #0
 1310 0104 FFF7FEFF 		bl	CyHalt
 1311              	.LVL111:
 1312              	.L93:
 823:Generated_Source\PSoC4/CyLib.c ****     }
 1313              		.loc 1 823 0
 1314 0108 0198     		ldr	r0, [sp, #4]
 1315 010a FFF7FEFF 		bl	CyExitCriticalSection
 1316              	.LVL112:
 824:Generated_Source\PSoC4/CyLib.c **** 
 1317              		.loc 1 824 0
 1318 010e 03B0     		add	sp, sp, #12
 1319              		@ sp needed
 1320              	.LVL113:
 1321 0110 0CBC     		pop	{r2, r3}
 1322 0112 9146     		mov	r9, r2
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 71


 1323 0114 9A46     		mov	r10, r3
 1324 0116 F0BD     		pop	{r4, r5, r6, r7, pc}
 1325              	.L95:
 1326              		.align	2
 1327              	.L94:
 1328 0118 C0F1FF0F 		.word	268431808
 1329 011c C1F1FF0F 		.word	268431809
 1330 0120 C2F1FF0F 		.word	268431810
 1331 0124 C3F1FF0F 		.word	268431811
 1332 0128 C4F1FF0F 		.word	268431812
 1333 012c C5F1FF0F 		.word	268431813
 1334 0130 C6F1FF0F 		.word	268431814
 1335 0134 C7F1FF0F 		.word	268431815
 1336 0138 C8F1FF0F 		.word	268431816
 1337 013c C9F1FF0F 		.word	268431817
 1338 0140 CAF1FF0F 		.word	268431818
 1339 0144 CBF1FF0F 		.word	268431819
 1340 0148 CCF1FF0F 		.word	268431820
 1341 014c CDF1FF0F 		.word	268431821
 1342 0150 00000000 		.word	.LANCHOR1
 1343 0154 2CFF0B40 		.word	1074528044
 1344 0158 28FF0B40 		.word	1074528040
 1345 015c 1CFF0B40 		.word	1074528028
 1346 0160 20FF0B40 		.word	1074528032
 1347              		.cfi_endproc
 1348              	.LFE6:
 1349              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 1350              		.section	.text.CySysLvdEnable,"ax",%progbits
 1351              		.align	2
 1352              		.global	CySysLvdEnable
 1353              		.code	16
 1354              		.thumb_func
 1355              		.type	CySysLvdEnable, %function
 1356              	CySysLvdEnable:
 1357              	.LFB7:
2119:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
 1358              		.loc 1 2119 0
 1359              		.cfi_startproc
 1360              		@ args = 0, pretend = 0, frame = 0
 1361              		@ frame_needed = 0, uses_anonymous_args = 0
 1362              	.LVL114:
 1363 0000 70B5     		push	{r4, r5, r6, lr}
 1364              		.cfi_def_cfa_offset 16
 1365              		.cfi_offset 4, -16
 1366              		.cfi_offset 5, -12
 1367              		.cfi_offset 6, -8
 1368              		.cfi_offset 14, -4
 1369 0002 0300     		movs	r3, r0
2121:Generated_Source\PSoC4/CyLib.c **** 
 1370              		.loc 1 2121 0
 1371 0004 0D4C     		ldr	r4, .L97
 1372 0006 2268     		ldr	r2, [r4]
 1373 0008 0225     		movs	r5, #2
 1374 000a AA43     		bics	r2, r5
 1375 000c 2260     		str	r2, [r4]
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1376              		.loc 1 2124 0
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 72


 1377 000e 0C4A     		ldr	r2, .L97+4
 1378 0010 1168     		ldr	r1, [r2]
 1379 0012 1E20     		movs	r0, #30
 1380              	.LVL115:
 1381 0014 8143     		bics	r1, r0
2125:Generated_Source\PSoC4/CyLib.c **** 
 1382              		.loc 1 2125 0
 1383 0016 5B00     		lsls	r3, r3, #1
 1384              	.LVL116:
 1385 0018 1840     		ands	r0, r3
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1386              		.loc 1 2124 0
 1387 001a 0843     		orrs	r0, r1
 1388 001c 1060     		str	r0, [r2]
2128:Generated_Source\PSoC4/CyLib.c **** 
 1389              		.loc 1 2128 0
 1390 001e 1168     		ldr	r1, [r2]
 1391 0020 0123     		movs	r3, #1
 1392 0022 0B43     		orrs	r3, r1
 1393 0024 1360     		str	r3, [r2]
2131:Generated_Source\PSoC4/CyLib.c **** 
 1394              		.loc 1 2131 0
 1395 0026 FA20     		movs	r0, #250
 1396 0028 8000     		lsls	r0, r0, #2
 1397 002a FFF7FEFF 		bl	CyDelayUs
 1398              	.LVL117:
2134:Generated_Source\PSoC4/CyLib.c **** 
 1399              		.loc 1 2134 0
 1400 002e FFF7FEFF 		bl	CySysLvdClearInterrupt
 1401              	.LVL118:
2137:Generated_Source\PSoC4/CyLib.c ****     }
 1402              		.loc 1 2137 0
 1403 0032 2368     		ldr	r3, [r4]
 1404 0034 1D43     		orrs	r5, r3
 1405 0036 2560     		str	r5, [r4]
2138:Generated_Source\PSoC4/CyLib.c **** 
 1406              		.loc 1 2138 0
 1407              		@ sp needed
 1408 0038 70BD     		pop	{r4, r5, r6, pc}
 1409              	.L98:
 1410 003a C046     		.align	2
 1411              	.L97:
 1412 003c 08000B40 		.word	1074462728
 1413 0040 18000B40 		.word	1074462744
 1414              		.cfi_endproc
 1415              	.LFE7:
 1416              		.size	CySysLvdEnable, .-CySysLvdEnable
 1417              		.global	__aeabi_uidiv
 1418              		.section	.text.CyDelayFreq,"ax",%progbits
 1419              		.align	2
 1420              		.global	CyDelayFreq
 1421              		.code	16
 1422              		.thumb_func
 1423              		.type	CyDelayFreq, %function
 1424              	CyDelayFreq:
 1425              	.LFB29:
2586:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 73


2587:Generated_Source\PSoC4/CyLib.c **** 
2588:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2589:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2590:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2591:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2592:Generated_Source\PSoC4/CyLib.c **** *
2593:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2594:Generated_Source\PSoC4/CyLib.c **** *
2595:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2596:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2597:Generated_Source\PSoC4/CyLib.c **** {
 1426              		.loc 1 2597 0
 1427              		.cfi_startproc
 1428              		@ args = 0, pretend = 0, frame = 0
 1429              		@ frame_needed = 0, uses_anonymous_args = 0
 1430              	.LVL119:
 1431 0000 70B5     		push	{r4, r5, r6, lr}
 1432              		.cfi_def_cfa_offset 16
 1433              		.cfi_offset 4, -16
 1434              		.cfi_offset 5, -12
 1435              		.cfi_offset 6, -8
 1436              		.cfi_offset 14, -4
2598:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1437              		.loc 1 2598 0
 1438 0002 0028     		cmp	r0, #0
 1439 0004 02D0     		beq	.L100
2599:Generated_Source\PSoC4/CyLib.c ****     {
2600:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1440              		.loc 1 2600 0
 1441 0006 0C4B     		ldr	r3, .L102
 1442 0008 1861     		str	r0, [r3, #16]
 1443 000a 02E0     		b	.L101
 1444              	.L100:
2601:Generated_Source\PSoC4/CyLib.c ****     }
2602:Generated_Source\PSoC4/CyLib.c ****     else
2603:Generated_Source\PSoC4/CyLib.c ****     {
2604:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1445              		.loc 1 2604 0
 1446 000c 0B4A     		ldr	r2, .L102+4
 1447 000e 0A4B     		ldr	r3, .L102
 1448 0010 1A61     		str	r2, [r3, #16]
 1449              	.L101:
2605:Generated_Source\PSoC4/CyLib.c ****     }
2606:Generated_Source\PSoC4/CyLib.c **** 
2607:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1450              		.loc 1 2607 0
 1451 0012 094C     		ldr	r4, .L102
 1452 0014 2569     		ldr	r5, [r4, #16]
 1453 0016 0A4B     		ldr	r3, .L102+8
 1454 0018 E818     		adds	r0, r5, r3
 1455              	.LVL120:
 1456 001a 0A49     		ldr	r1, .L102+12
 1457 001c FFF7FEFF 		bl	__aeabi_uidiv
 1458              	.LVL121:
 1459 0020 2073     		strb	r0, [r4, #12]
2608:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1460              		.loc 1 2608 0
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 74


 1461 0022 094B     		ldr	r3, .L102+16
 1462 0024 E818     		adds	r0, r5, r3
 1463 0026 FA21     		movs	r1, #250
 1464 0028 8900     		lsls	r1, r1, #2
 1465 002a FFF7FEFF 		bl	__aeabi_uidiv
 1466              	.LVL122:
 1467 002e A060     		str	r0, [r4, #8]
2609:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1468              		.loc 1 2609 0
 1469 0030 C003     		lsls	r0, r0, #15
 1470 0032 6060     		str	r0, [r4, #4]
2610:Generated_Source\PSoC4/CyLib.c **** }
 1471              		.loc 1 2610 0
 1472              		@ sp needed
 1473 0034 70BD     		pop	{r4, r5, r6, pc}
 1474              	.L103:
 1475 0036 C046     		.align	2
 1476              	.L102:
 1477 0038 00000000 		.word	.LANCHOR0
 1478 003c 00366E01 		.word	24000000
 1479 0040 3F420F00 		.word	999999
 1480 0044 40420F00 		.word	1000000
 1481 0048 E7030000 		.word	999
 1482              		.cfi_endproc
 1483              	.LFE29:
 1484              		.size	CyDelayFreq, .-CyDelayFreq
 1485              		.section	.text.CySysTickStop,"ax",%progbits
 1486              		.align	2
 1487              		.global	CySysTickStop
 1488              		.code	16
 1489              		.thumb_func
 1490              		.type	CySysTickStop, %function
 1491              	CySysTickStop:
 1492              	.LFB33:
2611:Generated_Source\PSoC4/CyLib.c **** 
2612:Generated_Source\PSoC4/CyLib.c **** 
2613:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2614:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2615:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2616:Generated_Source\PSoC4/CyLib.c **** *
2617:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2618:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2619:Generated_Source\PSoC4/CyLib.c **** *
2620:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2621:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2622:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2623:Generated_Source\PSoC4/CyLib.c **** *
2624:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2625:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2626:Generated_Source\PSoC4/CyLib.c **** *
2627:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2628:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2629:Generated_Source\PSoC4/CyLib.c **** {
2630:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
2631:Generated_Source\PSoC4/CyLib.c ****     {
2632:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
2633:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 75


2634:Generated_Source\PSoC4/CyLib.c ****     }
2635:Generated_Source\PSoC4/CyLib.c **** 
2636:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
2637:Generated_Source\PSoC4/CyLib.c **** }
2638:Generated_Source\PSoC4/CyLib.c **** 
2639:Generated_Source\PSoC4/CyLib.c **** 
2640:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2641:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2642:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2643:Generated_Source\PSoC4/CyLib.c **** *
2644:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2645:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2646:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2647:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2648:Generated_Source\PSoC4/CyLib.c **** *
2649:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2650:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2651:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2652:Generated_Source\PSoC4/CyLib.c **** *
2653:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2654:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2655:Generated_Source\PSoC4/CyLib.c **** *
2656:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2657:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2658:Generated_Source\PSoC4/CyLib.c **** {
2659:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2660:Generated_Source\PSoC4/CyLib.c **** 
2661:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2662:Generated_Source\PSoC4/CyLib.c ****     {
2663:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
2664:Generated_Source\PSoC4/CyLib.c ****     }
2665:Generated_Source\PSoC4/CyLib.c **** 
2666:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
2667:Generated_Source\PSoC4/CyLib.c **** 
2668:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2669:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
2670:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2671:Generated_Source\PSoC4/CyLib.c **** 
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
2673:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
2674:Generated_Source\PSoC4/CyLib.c **** }
2675:Generated_Source\PSoC4/CyLib.c **** 
2676:Generated_Source\PSoC4/CyLib.c **** 
2677:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2678:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2679:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2680:Generated_Source\PSoC4/CyLib.c **** *
2681:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2682:Generated_Source\PSoC4/CyLib.c **** *
2683:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2684:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2685:Generated_Source\PSoC4/CyLib.c **** *
2686:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2687:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2688:Generated_Source\PSoC4/CyLib.c **** {
2689:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
2690:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 76


2691:Generated_Source\PSoC4/CyLib.c **** }
2692:Generated_Source\PSoC4/CyLib.c **** 
2693:Generated_Source\PSoC4/CyLib.c **** 
2694:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2695:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2696:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2697:Generated_Source\PSoC4/CyLib.c **** *
2698:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2699:Generated_Source\PSoC4/CyLib.c **** *
2700:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2701:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2702:Generated_Source\PSoC4/CyLib.c **** *
2703:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2704:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2705:Generated_Source\PSoC4/CyLib.c **** {
 1493              		.loc 1 2705 0
 1494              		.cfi_startproc
 1495              		@ args = 0, pretend = 0, frame = 0
 1496              		@ frame_needed = 0, uses_anonymous_args = 0
 1497              		@ link register save eliminated.
2706:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1498              		.loc 1 2706 0
 1499 0000 024A     		ldr	r2, .L105
 1500 0002 1368     		ldr	r3, [r2]
 1501 0004 0121     		movs	r1, #1
 1502 0006 8B43     		bics	r3, r1
 1503 0008 1360     		str	r3, [r2]
2707:Generated_Source\PSoC4/CyLib.c **** }
 1504              		.loc 1 2707 0
 1505              		@ sp needed
 1506 000a 7047     		bx	lr
 1507              	.L106:
 1508              		.align	2
 1509              	.L105:
 1510 000c 10E000E0 		.word	-536813552
 1511              		.cfi_endproc
 1512              	.LFE33:
 1513              		.size	CySysTickStop, .-CySysTickStop
 1514              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1515              		.align	2
 1516              		.global	CySysTickEnableInterrupt
 1517              		.code	16
 1518              		.thumb_func
 1519              		.type	CySysTickEnableInterrupt, %function
 1520              	CySysTickEnableInterrupt:
 1521              	.LFB34:
2708:Generated_Source\PSoC4/CyLib.c **** 
2709:Generated_Source\PSoC4/CyLib.c **** 
2710:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2711:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2712:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2713:Generated_Source\PSoC4/CyLib.c **** *
2714:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2715:Generated_Source\PSoC4/CyLib.c **** *
2716:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2717:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2718:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 77


2719:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2720:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2721:Generated_Source\PSoC4/CyLib.c **** {
 1522              		.loc 1 2721 0
 1523              		.cfi_startproc
 1524              		@ args = 0, pretend = 0, frame = 0
 1525              		@ frame_needed = 0, uses_anonymous_args = 0
 1526              		@ link register save eliminated.
2722:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1527              		.loc 1 2722 0
 1528 0000 024A     		ldr	r2, .L108
 1529 0002 1168     		ldr	r1, [r2]
 1530 0004 0223     		movs	r3, #2
 1531 0006 0B43     		orrs	r3, r1
 1532 0008 1360     		str	r3, [r2]
2723:Generated_Source\PSoC4/CyLib.c **** }
 1533              		.loc 1 2723 0
 1534              		@ sp needed
 1535 000a 7047     		bx	lr
 1536              	.L109:
 1537              		.align	2
 1538              	.L108:
 1539 000c 10E000E0 		.word	-536813552
 1540              		.cfi_endproc
 1541              	.LFE34:
 1542              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1543              		.section	.text.CySysTickEnable,"ax",%progbits
 1544              		.align	2
 1545              		.global	CySysTickEnable
 1546              		.code	16
 1547              		.thumb_func
 1548              		.type	CySysTickEnable, %function
 1549              	CySysTickEnable:
 1550              	.LFB32:
2688:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1551              		.loc 1 2688 0
 1552              		.cfi_startproc
 1553              		@ args = 0, pretend = 0, frame = 0
 1554              		@ frame_needed = 0, uses_anonymous_args = 0
 1555 0000 10B5     		push	{r4, lr}
 1556              		.cfi_def_cfa_offset 8
 1557              		.cfi_offset 4, -8
 1558              		.cfi_offset 14, -4
2689:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1559              		.loc 1 2689 0
 1560 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1561              	.LVL123:
2690:Generated_Source\PSoC4/CyLib.c **** }
 1562              		.loc 1 2690 0
 1563 0006 034A     		ldr	r2, .L111
 1564 0008 1168     		ldr	r1, [r2]
 1565 000a 0123     		movs	r3, #1
 1566 000c 0B43     		orrs	r3, r1
 1567 000e 1360     		str	r3, [r2]
2691:Generated_Source\PSoC4/CyLib.c **** 
 1568              		.loc 1 2691 0
 1569              		@ sp needed
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 78


 1570 0010 10BD     		pop	{r4, pc}
 1571              	.L112:
 1572 0012 C046     		.align	2
 1573              	.L111:
 1574 0014 10E000E0 		.word	-536813552
 1575              		.cfi_endproc
 1576              	.LFE32:
 1577              		.size	CySysTickEnable, .-CySysTickEnable
 1578              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1579              		.align	2
 1580              		.global	CySysTickDisableInterrupt
 1581              		.code	16
 1582              		.thumb_func
 1583              		.type	CySysTickDisableInterrupt, %function
 1584              	CySysTickDisableInterrupt:
 1585              	.LFB35:
2724:Generated_Source\PSoC4/CyLib.c **** 
2725:Generated_Source\PSoC4/CyLib.c **** 
2726:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2727:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2728:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2729:Generated_Source\PSoC4/CyLib.c **** *
2730:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2731:Generated_Source\PSoC4/CyLib.c **** *
2732:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2733:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2734:Generated_Source\PSoC4/CyLib.c **** *
2735:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2736:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2737:Generated_Source\PSoC4/CyLib.c **** {
 1586              		.loc 1 2737 0
 1587              		.cfi_startproc
 1588              		@ args = 0, pretend = 0, frame = 0
 1589              		@ frame_needed = 0, uses_anonymous_args = 0
 1590              		@ link register save eliminated.
2738:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1591              		.loc 1 2738 0
 1592 0000 024A     		ldr	r2, .L114
 1593 0002 1368     		ldr	r3, [r2]
 1594 0004 0221     		movs	r1, #2
 1595 0006 8B43     		bics	r3, r1
 1596 0008 1360     		str	r3, [r2]
2739:Generated_Source\PSoC4/CyLib.c **** }
 1597              		.loc 1 2739 0
 1598              		@ sp needed
 1599 000a 7047     		bx	lr
 1600              	.L115:
 1601              		.align	2
 1602              	.L114:
 1603 000c 10E000E0 		.word	-536813552
 1604              		.cfi_endproc
 1605              	.LFE35:
 1606              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1607              		.section	.text.CySysTickSetReload,"ax",%progbits
 1608              		.align	2
 1609              		.global	CySysTickSetReload
 1610              		.code	16
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 79


 1611              		.thumb_func
 1612              		.type	CySysTickSetReload, %function
 1613              	CySysTickSetReload:
 1614              	.LFB36:
2740:Generated_Source\PSoC4/CyLib.c **** 
2741:Generated_Source\PSoC4/CyLib.c **** 
2742:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2743:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2744:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2745:Generated_Source\PSoC4/CyLib.c **** *
2746:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2747:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2748:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2749:Generated_Source\PSoC4/CyLib.c **** *
2750:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2751:Generated_Source\PSoC4/CyLib.c **** *
2752:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2753:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2754:Generated_Source\PSoC4/CyLib.c **** {
 1615              		.loc 1 2754 0
 1616              		.cfi_startproc
 1617              		@ args = 0, pretend = 0, frame = 0
 1618              		@ frame_needed = 0, uses_anonymous_args = 0
 1619              		@ link register save eliminated.
 1620              	.LVL124:
2755:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1621              		.loc 1 2755 0
 1622 0000 0002     		lsls	r0, r0, #8
 1623              	.LVL125:
 1624 0002 000A     		lsrs	r0, r0, #8
 1625 0004 014B     		ldr	r3, .L117
 1626 0006 1860     		str	r0, [r3]
2756:Generated_Source\PSoC4/CyLib.c **** }
 1627              		.loc 1 2756 0
 1628              		@ sp needed
 1629 0008 7047     		bx	lr
 1630              	.L118:
 1631 000a C046     		.align	2
 1632              	.L117:
 1633 000c 14E000E0 		.word	-536813548
 1634              		.cfi_endproc
 1635              	.LFE36:
 1636              		.size	CySysTickSetReload, .-CySysTickSetReload
 1637              		.section	.text.CySysTickGetReload,"ax",%progbits
 1638              		.align	2
 1639              		.global	CySysTickGetReload
 1640              		.code	16
 1641              		.thumb_func
 1642              		.type	CySysTickGetReload, %function
 1643              	CySysTickGetReload:
 1644              	.LFB37:
2757:Generated_Source\PSoC4/CyLib.c **** 
2758:Generated_Source\PSoC4/CyLib.c **** 
2759:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2760:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2761:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2762:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 80


2763:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2764:Generated_Source\PSoC4/CyLib.c **** *
2765:Generated_Source\PSoC4/CyLib.c **** * \return
2766:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2767:Generated_Source\PSoC4/CyLib.c **** *
2768:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2769:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2770:Generated_Source\PSoC4/CyLib.c **** {
 1645              		.loc 1 2770 0
 1646              		.cfi_startproc
 1647              		@ args = 0, pretend = 0, frame = 0
 1648              		@ frame_needed = 0, uses_anonymous_args = 0
 1649              		@ link register save eliminated.
2771:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 1650              		.loc 1 2771 0
 1651 0000 024B     		ldr	r3, .L120
 1652 0002 1868     		ldr	r0, [r3]
 1653 0004 0002     		lsls	r0, r0, #8
 1654 0006 000A     		lsrs	r0, r0, #8
2772:Generated_Source\PSoC4/CyLib.c **** }
 1655              		.loc 1 2772 0
 1656              		@ sp needed
 1657 0008 7047     		bx	lr
 1658              	.L121:
 1659 000a C046     		.align	2
 1660              	.L120:
 1661 000c 14E000E0 		.word	-536813548
 1662              		.cfi_endproc
 1663              	.LFE37:
 1664              		.size	CySysTickGetReload, .-CySysTickGetReload
 1665              		.section	.text.CySysTickGetValue,"ax",%progbits
 1666              		.align	2
 1667              		.global	CySysTickGetValue
 1668              		.code	16
 1669              		.thumb_func
 1670              		.type	CySysTickGetValue, %function
 1671              	CySysTickGetValue:
 1672              	.LFB38:
2773:Generated_Source\PSoC4/CyLib.c **** 
2774:Generated_Source\PSoC4/CyLib.c **** 
2775:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2776:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2777:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2778:Generated_Source\PSoC4/CyLib.c **** *
2779:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2780:Generated_Source\PSoC4/CyLib.c **** *
2781:Generated_Source\PSoC4/CyLib.c **** * \return
2782:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2783:Generated_Source\PSoC4/CyLib.c **** *
2784:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2785:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2786:Generated_Source\PSoC4/CyLib.c **** {
 1673              		.loc 1 2786 0
 1674              		.cfi_startproc
 1675              		@ args = 0, pretend = 0, frame = 0
 1676              		@ frame_needed = 0, uses_anonymous_args = 0
 1677              		@ link register save eliminated.
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 81


2787:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 1678              		.loc 1 2787 0
 1679 0000 024B     		ldr	r3, .L123
 1680 0002 1868     		ldr	r0, [r3]
 1681 0004 0002     		lsls	r0, r0, #8
 1682 0006 000A     		lsrs	r0, r0, #8
2788:Generated_Source\PSoC4/CyLib.c **** }
 1683              		.loc 1 2788 0
 1684              		@ sp needed
 1685 0008 7047     		bx	lr
 1686              	.L124:
 1687 000a C046     		.align	2
 1688              	.L123:
 1689 000c 18E000E0 		.word	-536813544
 1690              		.cfi_endproc
 1691              	.LFE38:
 1692              		.size	CySysTickGetValue, .-CySysTickGetValue
 1693              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 1694              		.align	2
 1695              		.global	CySysTickGetCountFlag
 1696              		.code	16
 1697              		.thumb_func
 1698              		.type	CySysTickGetCountFlag, %function
 1699              	CySysTickGetCountFlag:
 1700              	.LFB39:
2789:Generated_Source\PSoC4/CyLib.c **** 
2790:Generated_Source\PSoC4/CyLib.c **** 
2791:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2792:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2793:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2794:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2795:Generated_Source\PSoC4/CyLib.c ****     *
2796:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2797:Generated_Source\PSoC4/CyLib.c ****     *
2798:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2799:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2800:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2801:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2802:Generated_Source\PSoC4/CyLib.c ****     *
2803:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2804:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2805:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2806:Generated_Source\PSoC4/CyLib.c ****     *
2807:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2808:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2809:Generated_Source\PSoC4/CyLib.c ****     *
2810:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2811:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2812:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
2813:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2814:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2815:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2816:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2817:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2818:Generated_Source\PSoC4/CyLib.c ****     {
2819:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
2820:Generated_Source\PSoC4/CyLib.c ****         {
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 82


2821:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
2822:Generated_Source\PSoC4/CyLib.c ****         }
2823:Generated_Source\PSoC4/CyLib.c ****         else
2824:Generated_Source\PSoC4/CyLib.c ****         {
2825:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
2826:Generated_Source\PSoC4/CyLib.c ****         }
2827:Generated_Source\PSoC4/CyLib.c ****     }
2828:Generated_Source\PSoC4/CyLib.c **** 
2829:Generated_Source\PSoC4/CyLib.c ****     
2830:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2831:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
2832:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2833:Generated_Source\PSoC4/CyLib.c ****     *
2834:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
2835:Generated_Source\PSoC4/CyLib.c ****     *
2836:Generated_Source\PSoC4/CyLib.c ****     *  \return 
2837:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2838:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2839:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2840:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2841:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2842:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
2843:Generated_Source\PSoC4/CyLib.c ****     {
2844:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
2845:Generated_Source\PSoC4/CyLib.c ****     }
2846:Generated_Source\PSoC4/CyLib.c ****     
2847:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2848:Generated_Source\PSoC4/CyLib.c **** 
2849:Generated_Source\PSoC4/CyLib.c **** 
2850:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2851:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2852:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2853:Generated_Source\PSoC4/CyLib.c **** *
2854:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2855:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
2856:Generated_Source\PSoC4/CyLib.c **** *
2857:Generated_Source\PSoC4/CyLib.c **** * \return
2858:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2859:Generated_Source\PSoC4/CyLib.c **** *
2860:Generated_Source\PSoC4/CyLib.c **** *
2861:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2862:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2863:Generated_Source\PSoC4/CyLib.c **** *
2864:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2865:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2866:Generated_Source\PSoC4/CyLib.c **** {
 1701              		.loc 1 2866 0
 1702              		.cfi_startproc
 1703              		@ args = 0, pretend = 0, frame = 0
 1704              		@ frame_needed = 0, uses_anonymous_args = 0
 1705              		@ link register save eliminated.
2867:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 1706              		.loc 1 2867 0
 1707 0000 024B     		ldr	r3, .L126
 1708 0002 1868     		ldr	r0, [r3]
 1709 0004 000C     		lsrs	r0, r0, #16
 1710 0006 0123     		movs	r3, #1
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 83


 1711 0008 1840     		ands	r0, r3
2868:Generated_Source\PSoC4/CyLib.c **** }
 1712              		.loc 1 2868 0
 1713              		@ sp needed
 1714 000a 7047     		bx	lr
 1715              	.L127:
 1716              		.align	2
 1717              	.L126:
 1718 000c 10E000E0 		.word	-536813552
 1719              		.cfi_endproc
 1720              	.LFE39:
 1721              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 1722              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 1723              		.align	2
 1724              		.code	16
 1725              		.thumb_func
 1726              		.type	CySysTickServiceCallbacks, %function
 1727              	CySysTickServiceCallbacks:
 1728              	.LFB43:
2869:Generated_Source\PSoC4/CyLib.c **** 
2870:Generated_Source\PSoC4/CyLib.c **** 
2871:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2872:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2873:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2874:Generated_Source\PSoC4/CyLib.c **** *
2875:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2876:Generated_Source\PSoC4/CyLib.c **** *
2877:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2878:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
2879:Generated_Source\PSoC4/CyLib.c **** {
2880:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
2881:Generated_Source\PSoC4/CyLib.c **** }
2882:Generated_Source\PSoC4/CyLib.c **** 
2883:Generated_Source\PSoC4/CyLib.c **** 
2884:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2885:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
2886:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2887:Generated_Source\PSoC4/CyLib.c **** *
2888:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
2889:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
2890:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
2891:Generated_Source\PSoC4/CyLib.c **** *
2892:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
2893:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
2894:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
2895:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
2896:Generated_Source\PSoC4/CyLib.c **** *  functions.
2897:Generated_Source\PSoC4/CyLib.c **** *
2898:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
2899:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2900:Generated_Source\PSoC4/CyLib.c **** *
2901:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
2902:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
2903:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
2904:Generated_Source\PSoC4/CyLib.c **** *
2905:Generated_Source\PSoC4/CyLib.c **** * \return
2906:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 84


2907:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
2908:Generated_Source\PSoC4/CyLib.c **** *
2909:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2910:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
2911:Generated_Source\PSoC4/CyLib.c **** *
2912:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2913:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
2914:Generated_Source\PSoC4/CyLib.c **** {
2915:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
2916:Generated_Source\PSoC4/CyLib.c **** 
2917:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
2918:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
2919:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
2920:Generated_Source\PSoC4/CyLib.c **** }
2921:Generated_Source\PSoC4/CyLib.c **** 
2922:Generated_Source\PSoC4/CyLib.c **** 
2923:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2924:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
2925:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2926:Generated_Source\PSoC4/CyLib.c **** *
2927:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
2928:Generated_Source\PSoC4/CyLib.c **** *
2929:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
2930:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2931:Generated_Source\PSoC4/CyLib.c **** *
2932:Generated_Source\PSoC4/CyLib.c **** * \return
2933:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
2934:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
2935:Generated_Source\PSoC4/CyLib.c **** *
2936:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2937:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
2938:Generated_Source\PSoC4/CyLib.c **** {
2939:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
2940:Generated_Source\PSoC4/CyLib.c **** }
2941:Generated_Source\PSoC4/CyLib.c **** 
2942:Generated_Source\PSoC4/CyLib.c **** 
2943:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2944:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
2945:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2946:Generated_Source\PSoC4/CyLib.c **** *
2947:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
2948:Generated_Source\PSoC4/CyLib.c **** *
2949:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2950:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
2951:Generated_Source\PSoC4/CyLib.c **** {
 1729              		.loc 1 2951 0
 1730              		.cfi_startproc
 1731              		@ args = 0, pretend = 0, frame = 0
 1732              		@ frame_needed = 0, uses_anonymous_args = 0
 1733 0000 10B5     		push	{r4, lr}
 1734              		.cfi_def_cfa_offset 8
 1735              		.cfi_offset 4, -8
 1736              		.cfi_offset 14, -4
2952:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2953:Generated_Source\PSoC4/CyLib.c **** 
2954:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
2955:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 85


 1737              		.loc 1 2955 0
 1738 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 1739              	.LVL126:
 1740 0006 0128     		cmp	r0, #1
 1741 0008 0BD1     		bne	.L128
 1742 000a 07E0     		b	.L133
 1743              	.LVL127:
 1744              	.L132:
2956:Generated_Source\PSoC4/CyLib.c ****     {
2957:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2958:Generated_Source\PSoC4/CyLib.c ****         {
2959:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 1745              		.loc 1 2959 0
 1746 000c A300     		lsls	r3, r4, #2
 1747 000e 054A     		ldr	r2, .L134
 1748 0010 9B58     		ldr	r3, [r3, r2]
 1749 0012 002B     		cmp	r3, #0
 1750 0014 00D0     		beq	.L131
2960:Generated_Source\PSoC4/CyLib.c ****             {
2961:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 1751              		.loc 1 2961 0
 1752 0016 9847     		blx	r3
 1753              	.LVL128:
 1754              	.L131:
2957:Generated_Source\PSoC4/CyLib.c ****         {
 1755              		.loc 1 2957 0 discriminator 2
 1756 0018 0134     		adds	r4, r4, #1
 1757              	.LVL129:
 1758 001a 00E0     		b	.L129
 1759              	.LVL130:
 1760              	.L133:
 1761 001c 0024     		movs	r4, #0
 1762              	.L129:
 1763              	.LVL131:
2957:Generated_Source\PSoC4/CyLib.c ****         {
 1764              		.loc 1 2957 0 is_stmt 0 discriminator 1
 1765 001e 042C     		cmp	r4, #4
 1766 0020 F4D9     		bls	.L132
 1767              	.LVL132:
 1768              	.L128:
2962:Generated_Source\PSoC4/CyLib.c ****             }
2963:Generated_Source\PSoC4/CyLib.c ****         }
2964:Generated_Source\PSoC4/CyLib.c ****     }
2965:Generated_Source\PSoC4/CyLib.c **** }
 1769              		.loc 1 2965 0 is_stmt 1
 1770              		@ sp needed
 1771 0022 10BD     		pop	{r4, pc}
 1772              	.L135:
 1773              		.align	2
 1774              	.L134:
 1775 0024 00000000 		.word	.LANCHOR2
 1776              		.cfi_endproc
 1777              	.LFE43:
 1778              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 1779              		.section	.text.CySysTickClear,"ax",%progbits
 1780              		.align	2
 1781              		.global	CySysTickClear
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 86


 1782              		.code	16
 1783              		.thumb_func
 1784              		.type	CySysTickClear, %function
 1785              	CySysTickClear:
 1786              	.LFB40:
2879:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1787              		.loc 1 2879 0
 1788              		.cfi_startproc
 1789              		@ args = 0, pretend = 0, frame = 0
 1790              		@ frame_needed = 0, uses_anonymous_args = 0
 1791              		@ link register save eliminated.
2880:Generated_Source\PSoC4/CyLib.c **** }
 1792              		.loc 1 2880 0
 1793 0000 0022     		movs	r2, #0
 1794 0002 014B     		ldr	r3, .L137
 1795 0004 1A60     		str	r2, [r3]
2881:Generated_Source\PSoC4/CyLib.c **** 
 1796              		.loc 1 2881 0
 1797              		@ sp needed
 1798 0006 7047     		bx	lr
 1799              	.L138:
 1800              		.align	2
 1801              	.L137:
 1802 0008 18E000E0 		.word	-536813544
 1803              		.cfi_endproc
 1804              	.LFE40:
 1805              		.size	CySysTickClear, .-CySysTickClear
 1806              		.section	.text.CySysTickInit,"ax",%progbits
 1807              		.align	2
 1808              		.global	CySysTickInit
 1809              		.code	16
 1810              		.thumb_func
 1811              		.type	CySysTickInit, %function
 1812              	CySysTickInit:
 1813              	.LFB31:
2658:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
 1814              		.loc 1 2658 0
 1815              		.cfi_startproc
 1816              		@ args = 0, pretend = 0, frame = 0
 1817              		@ frame_needed = 0, uses_anonymous_args = 0
 1818 0000 10B5     		push	{r4, lr}
 1819              		.cfi_def_cfa_offset 8
 1820              		.cfi_offset 4, -8
 1821              		.cfi_offset 14, -4
 1822              	.LVL133:
2661:Generated_Source\PSoC4/CyLib.c ****     {
 1823              		.loc 1 2661 0
 1824 0002 0023     		movs	r3, #0
 1825 0004 04E0     		b	.L140
 1826              	.LVL134:
 1827              	.L141:
2663:Generated_Source\PSoC4/CyLib.c ****     }
 1828              		.loc 1 2663 0 discriminator 3
 1829 0006 9900     		lsls	r1, r3, #2
 1830 0008 0020     		movs	r0, #0
 1831 000a 0A4A     		ldr	r2, .L142
 1832 000c 8850     		str	r0, [r1, r2]
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 87


2661:Generated_Source\PSoC4/CyLib.c ****     {
 1833              		.loc 1 2661 0 discriminator 3
 1834 000e 0133     		adds	r3, r3, #1
 1835              	.LVL135:
 1836              	.L140:
2661:Generated_Source\PSoC4/CyLib.c ****     {
 1837              		.loc 1 2661 0 is_stmt 0 discriminator 1
 1838 0010 042B     		cmp	r3, #4
 1839 0012 F8D9     		bls	.L141
2666:Generated_Source\PSoC4/CyLib.c **** 
 1840              		.loc 1 2666 0 is_stmt 1
 1841 0014 0849     		ldr	r1, .L142+4
 1842 0016 0F20     		movs	r0, #15
 1843 0018 FFF7FEFF 		bl	CyIntSetSysVector
 1844              	.LVL136:
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1845              		.loc 1 2672 0
 1846 001c 074B     		ldr	r3, .L142+8
 1847 001e 1869     		ldr	r0, [r3, #16]
 1848 0020 FA21     		movs	r1, #250
 1849 0022 8900     		lsls	r1, r1, #2
 1850 0024 FFF7FEFF 		bl	__aeabi_uidiv
 1851              	.LVL137:
 1852 0028 FFF7FEFF 		bl	CySysTickSetReload
 1853              	.LVL138:
2673:Generated_Source\PSoC4/CyLib.c **** }
 1854              		.loc 1 2673 0
 1855 002c FFF7FEFF 		bl	CySysTickClear
 1856              	.LVL139:
2674:Generated_Source\PSoC4/CyLib.c **** 
 1857              		.loc 1 2674 0
 1858              		@ sp needed
 1859 0030 10BD     		pop	{r4, pc}
 1860              	.L143:
 1861 0032 C046     		.align	2
 1862              	.L142:
 1863 0034 00000000 		.word	.LANCHOR2
 1864 0038 00000000 		.word	CySysTickServiceCallbacks
 1865 003c 00000000 		.word	.LANCHOR0
 1866              		.cfi_endproc
 1867              	.LFE31:
 1868              		.size	CySysTickInit, .-CySysTickInit
 1869              		.section	.text.CySysTickStart,"ax",%progbits
 1870              		.align	2
 1871              		.global	CySysTickStart
 1872              		.code	16
 1873              		.thumb_func
 1874              		.type	CySysTickStart, %function
 1875              	CySysTickStart:
 1876              	.LFB30:
2629:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1877              		.loc 1 2629 0
 1878              		.cfi_startproc
 1879              		@ args = 0, pretend = 0, frame = 0
 1880              		@ frame_needed = 0, uses_anonymous_args = 0
 1881 0000 10B5     		push	{r4, lr}
 1882              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 88


 1883              		.cfi_offset 4, -8
 1884              		.cfi_offset 14, -4
2630:Generated_Source\PSoC4/CyLib.c ****     {
 1885              		.loc 1 2630 0
 1886 0002 064B     		ldr	r3, .L146
 1887 0004 5B69     		ldr	r3, [r3, #20]
 1888 0006 002B     		cmp	r3, #0
 1889 0008 04D1     		bne	.L145
2632:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1890              		.loc 1 2632 0
 1891 000a FFF7FEFF 		bl	CySysTickInit
 1892              	.LVL140:
2633:Generated_Source\PSoC4/CyLib.c ****     }
 1893              		.loc 1 2633 0
 1894 000e 0122     		movs	r2, #1
 1895 0010 024B     		ldr	r3, .L146
 1896 0012 5A61     		str	r2, [r3, #20]
 1897              	.L145:
2636:Generated_Source\PSoC4/CyLib.c **** }
 1898              		.loc 1 2636 0
 1899 0014 FFF7FEFF 		bl	CySysTickEnable
 1900              	.LVL141:
2637:Generated_Source\PSoC4/CyLib.c **** 
 1901              		.loc 1 2637 0
 1902              		@ sp needed
 1903 0018 10BD     		pop	{r4, pc}
 1904              	.L147:
 1905 001a C046     		.align	2
 1906              	.L146:
 1907 001c 00000000 		.word	.LANCHOR2
 1908              		.cfi_endproc
 1909              	.LFE30:
 1910              		.size	CySysTickStart, .-CySysTickStart
 1911              		.section	.text.CySysTickSetCallback,"ax",%progbits
 1912              		.align	2
 1913              		.global	CySysTickSetCallback
 1914              		.code	16
 1915              		.thumb_func
 1916              		.type	CySysTickSetCallback, %function
 1917              	CySysTickSetCallback:
 1918              	.LFB41:
2914:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 1919              		.loc 1 2914 0
 1920              		.cfi_startproc
 1921              		@ args = 0, pretend = 0, frame = 0
 1922              		@ frame_needed = 0, uses_anonymous_args = 0
 1923              		@ link register save eliminated.
 1924              	.LVL142:
2917:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 1925              		.loc 1 2917 0
 1926 0000 024A     		ldr	r2, .L149
 1927 0002 8300     		lsls	r3, r0, #2
 1928 0004 9858     		ldr	r0, [r3, r2]
 1929              	.LVL143:
2918:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 1930              		.loc 1 2918 0
 1931 0006 9950     		str	r1, [r3, r2]
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 89


2920:Generated_Source\PSoC4/CyLib.c **** 
 1932              		.loc 1 2920 0
 1933              		@ sp needed
 1934 0008 7047     		bx	lr
 1935              	.L150:
 1936 000a C046     		.align	2
 1937              	.L149:
 1938 000c 00000000 		.word	.LANCHOR2
 1939              		.cfi_endproc
 1940              	.LFE41:
 1941              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 1942              		.section	.text.CySysTickGetCallback,"ax",%progbits
 1943              		.align	2
 1944              		.global	CySysTickGetCallback
 1945              		.code	16
 1946              		.thumb_func
 1947              		.type	CySysTickGetCallback, %function
 1948              	CySysTickGetCallback:
 1949              	.LFB42:
2938:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 1950              		.loc 1 2938 0
 1951              		.cfi_startproc
 1952              		@ args = 0, pretend = 0, frame = 0
 1953              		@ frame_needed = 0, uses_anonymous_args = 0
 1954              		@ link register save eliminated.
 1955              	.LVL144:
2939:Generated_Source\PSoC4/CyLib.c **** }
 1956              		.loc 1 2939 0
 1957 0000 8000     		lsls	r0, r0, #2
 1958              	.LVL145:
 1959 0002 014B     		ldr	r3, .L152
 1960 0004 C058     		ldr	r0, [r0, r3]
2940:Generated_Source\PSoC4/CyLib.c **** 
 1961              		.loc 1 2940 0
 1962              		@ sp needed
 1963 0006 7047     		bx	lr
 1964              	.L153:
 1965              		.align	2
 1966              	.L152:
 1967 0008 00000000 		.word	.LANCHOR2
 1968              		.cfi_endproc
 1969              	.LFE42:
 1970              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 1971              		.section	.text.CyGetUniqueId,"ax",%progbits
 1972              		.align	2
 1973              		.global	CyGetUniqueId
 1974              		.code	16
 1975              		.thumb_func
 1976              		.type	CyGetUniqueId, %function
 1977              	CyGetUniqueId:
 1978              	.LFB44:
2966:Generated_Source\PSoC4/CyLib.c **** 
2967:Generated_Source\PSoC4/CyLib.c **** 
2968:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2969:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
2970:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2971:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 90


2972:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
2973:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
2974:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
2975:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
2976:Generated_Source\PSoC4/CyLib.c **** *
2977:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
2978:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
2979:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
2980:Generated_Source\PSoC4/CyLib.c **** *
2981:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2982:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
2983:Generated_Source\PSoC4/CyLib.c **** {
 1979              		.loc 1 2983 0
 1980              		.cfi_startproc
 1981              		@ args = 0, pretend = 0, frame = 0
 1982              		@ frame_needed = 0, uses_anonymous_args = 0
 1983              		@ link register save eliminated.
 1984              	.LVL146:
2984:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
2985:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 1985              		.loc 1 2985 0
 1986 0000 134B     		ldr	r3, .L155
 1987 0002 1B78     		ldrb	r3, [r3]
 1988 0004 DAB2     		uxtb	r2, r3
 1989 0006 0260     		str	r2, [r0]
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 1990              		.loc 1 2986 0
 1991 0008 124B     		ldr	r3, .L155+4
 1992 000a 1B78     		ldrb	r3, [r3]
 1993 000c 1B02     		lsls	r3, r3, #8
 1994 000e 1343     		orrs	r3, r2
 1995 0010 0360     		str	r3, [r0]
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 1996              		.loc 1 2987 0
 1997 0012 114A     		ldr	r2, .L155+8
 1998 0014 1278     		ldrb	r2, [r2]
 1999 0016 1204     		lsls	r2, r2, #16
 2000 0018 1343     		orrs	r3, r2
 2001 001a 0360     		str	r3, [r0]
2988:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2002              		.loc 1 2988 0
 2003 001c 0F4A     		ldr	r2, .L155+12
 2004 001e 1278     		ldrb	r2, [r2]
 2005 0020 1206     		lsls	r2, r2, #24
 2006 0022 1343     		orrs	r3, r2
 2007 0024 0360     		str	r3, [r0]
2989:Generated_Source\PSoC4/CyLib.c **** 
2990:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 2008              		.loc 1 2990 0
 2009 0026 0E4B     		ldr	r3, .L155+16
 2010 0028 1B78     		ldrb	r3, [r3]
 2011 002a DAB2     		uxtb	r2, r3
 2012 002c 4260     		str	r2, [r0, #4]
2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2013              		.loc 1 2991 0
 2014 002e 0D4B     		ldr	r3, .L155+20
 2015 0030 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 91


 2016 0032 1B02     		lsls	r3, r3, #8
 2017 0034 1343     		orrs	r3, r2
 2018 0036 4360     		str	r3, [r0, #4]
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2019              		.loc 1 2992 0
 2020 0038 0B4A     		ldr	r2, .L155+24
 2021 003a 1278     		ldrb	r2, [r2]
 2022 003c 1204     		lsls	r2, r2, #16
 2023 003e 1343     		orrs	r3, r2
 2024 0040 4360     		str	r3, [r0, #4]
2993:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2025              		.loc 1 2993 0
 2026 0042 0A4A     		ldr	r2, .L155+28
 2027 0044 1278     		ldrb	r2, [r2]
 2028 0046 1206     		lsls	r2, r2, #24
 2029 0048 1343     		orrs	r3, r2
 2030 004a 4360     		str	r3, [r0, #4]
2994:Generated_Source\PSoC4/CyLib.c **** #else
2995:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
2996:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
2997:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
2998:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
2999:Generated_Source\PSoC4/CyLib.c **** 
3000:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3001:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3002:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3003:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3004:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3005:Generated_Source\PSoC4/CyLib.c **** }
 2031              		.loc 1 3005 0
 2032              		@ sp needed
 2033 004c 7047     		bx	lr
 2034              	.L156:
 2035 004e C046     		.align	2
 2036              	.L155:
 2037 0050 78F1FF0F 		.word	268431736
 2038 0054 79F1FF0F 		.word	268431737
 2039 0058 7AF1FF0F 		.word	268431738
 2040 005c 7BF1FF0F 		.word	268431739
 2041 0060 7CF1FF0F 		.word	268431740
 2042 0064 7DF1FF0F 		.word	268431741
 2043 0068 7EF1FF0F 		.word	268431742
 2044 006c 7FF1FF0F 		.word	268431743
 2045              		.cfi_endproc
 2046              	.LFE44:
 2047              		.size	CyGetUniqueId, .-CyGetUniqueId
 2048              		.global	CySysClkPumpConfig
 2049              		.global	cyImoFreqMhz2Reg
 2050              		.global	CySysTickInitVar
 2051              		.global	cydelay32kMs
 2052              		.global	cydelayFreqMhz
 2053              		.global	cydelayFreqKhz
 2054              		.global	cydelayFreqHz
 2055              		.section	.rodata
 2056              		.align	2
 2057              		.set	.LANCHOR1,. + 0
 2058              		.type	cyImoFreqMhz2Reg, %object
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 92


 2059              		.size	cyImoFreqMhz2Reg, 46
 2060              	cyImoFreqMhz2Reg:
 2061 0000 03       		.byte	3
 2062 0001 04       		.byte	4
 2063 0002 05       		.byte	5
 2064 0003 06       		.byte	6
 2065 0004 07       		.byte	7
 2066 0005 08       		.byte	8
 2067 0006 09       		.byte	9
 2068 0007 0A       		.byte	10
 2069 0008 0B       		.byte	11
 2070 0009 0C       		.byte	12
 2071 000a 0E       		.byte	14
 2072 000b 0F       		.byte	15
 2073 000c 10       		.byte	16
 2074 000d 11       		.byte	17
 2075 000e 12       		.byte	18
 2076 000f 13       		.byte	19
 2077 0010 14       		.byte	20
 2078 0011 15       		.byte	21
 2079 0012 16       		.byte	22
 2080 0013 17       		.byte	23
 2081 0014 18       		.byte	24
 2082 0015 19       		.byte	25
 2083 0016 1B       		.byte	27
 2084 0017 1C       		.byte	28
 2085 0018 1D       		.byte	29
 2086 0019 1E       		.byte	30
 2087 001a 1F       		.byte	31
 2088 001b 20       		.byte	32
 2089 001c 21       		.byte	33
 2090 001d 22       		.byte	34
 2091 001e 23       		.byte	35
 2092 001f 25       		.byte	37
 2093 0020 26       		.byte	38
 2094 0021 27       		.byte	39
 2095 0022 28       		.byte	40
 2096 0023 29       		.byte	41
 2097 0024 2A       		.byte	42
 2098 0025 2B       		.byte	43
 2099 0026 2E       		.byte	46
 2100 0027 2F       		.byte	47
 2101 0028 30       		.byte	48
 2102 0029 31       		.byte	49
 2103 002a 32       		.byte	50
 2104 002b 33       		.byte	51
 2105 002c 34       		.byte	52
 2106 002d 35       		.byte	53
 2107              		.data
 2108              		.align	2
 2109              		.set	.LANCHOR0,. + 0
 2110              		.type	CySysClkPumpConfig, %object
 2111              		.size	CySysClkPumpConfig, 4
 2112              	CySysClkPumpConfig:
 2113 0000 01000000 		.word	1
 2114              		.type	cydelay32kMs, %object
 2115              		.size	cydelay32kMs, 4
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 93


 2116              	cydelay32kMs:
 2117 0004 0000E02E 		.word	786432000
 2118              		.type	cydelayFreqKhz, %object
 2119              		.size	cydelayFreqKhz, 4
 2120              	cydelayFreqKhz:
 2121 0008 C05D0000 		.word	24000
 2122              		.type	cydelayFreqMhz, %object
 2123              		.size	cydelayFreqMhz, 1
 2124              	cydelayFreqMhz:
 2125 000c 18       		.byte	24
 2126 000d 000000   		.space	3
 2127              		.type	cydelayFreqHz, %object
 2128              		.size	cydelayFreqHz, 4
 2129              	cydelayFreqHz:
 2130 0010 00366E01 		.word	24000000
 2131              		.bss
 2132              		.align	2
 2133              		.set	.LANCHOR2,. + 0
 2134              		.type	CySysTickCallbacks, %object
 2135              		.size	CySysTickCallbacks, 20
 2136              	CySysTickCallbacks:
 2137 0000 00000000 		.space	20
 2137      00000000 
 2137      00000000 
 2137      00000000 
 2137      00000000 
 2138              		.type	CySysTickInitVar, %object
 2139              		.size	CySysTickInitVar, 4
 2140              	CySysTickInitVar:
 2141 0014 00000000 		.space	4
 2142              		.text
 2143              	.Letext0:
 2144              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2145              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 2146              		.section	.debug_info,"",%progbits
 2147              	.Ldebug_info0:
 2148 0000 F80A0000 		.4byte	0xaf8
 2149 0004 0400     		.2byte	0x4
 2150 0006 00000000 		.4byte	.Ldebug_abbrev0
 2151 000a 04       		.byte	0x4
 2152 000b 01       		.uleb128 0x1
 2153 000c 84000000 		.4byte	.LASF105
 2154 0010 0C       		.byte	0xc
 2155 0011 64060000 		.4byte	.LASF106
 2156 0015 31020000 		.4byte	.LASF107
 2157 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2158 001d 00000000 		.4byte	0
 2159 0021 00000000 		.4byte	.Ldebug_line0
 2160 0025 02       		.uleb128 0x2
 2161 0026 01       		.byte	0x1
 2162 0027 06       		.byte	0x6
 2163 0028 8C010000 		.4byte	.LASF0
 2164 002c 02       		.uleb128 0x2
 2165 002d 01       		.byte	0x1
 2166 002e 08       		.byte	0x8
 2167 002f 16050000 		.4byte	.LASF1
 2168 0033 02       		.uleb128 0x2
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 94


 2169 0034 02       		.byte	0x2
 2170 0035 05       		.byte	0x5
 2171 0036 24050000 		.4byte	.LASF2
 2172 003a 02       		.uleb128 0x2
 2173 003b 02       		.byte	0x2
 2174 003c 07       		.byte	0x7
 2175 003d 7A030000 		.4byte	.LASF3
 2176 0041 02       		.uleb128 0x2
 2177 0042 04       		.byte	0x4
 2178 0043 05       		.byte	0x5
 2179 0044 C6010000 		.4byte	.LASF4
 2180 0048 02       		.uleb128 0x2
 2181 0049 04       		.byte	0x4
 2182 004a 07       		.byte	0x7
 2183 004b 02030000 		.4byte	.LASF5
 2184 004f 02       		.uleb128 0x2
 2185 0050 08       		.byte	0x8
 2186 0051 05       		.byte	0x5
 2187 0052 7E010000 		.4byte	.LASF6
 2188 0056 02       		.uleb128 0x2
 2189 0057 08       		.byte	0x8
 2190 0058 07       		.byte	0x7
 2191 0059 12010000 		.4byte	.LASF7
 2192 005d 03       		.uleb128 0x3
 2193 005e 04       		.byte	0x4
 2194 005f 05       		.byte	0x5
 2195 0060 696E7400 		.ascii	"int\000"
 2196 0064 02       		.uleb128 0x2
 2197 0065 04       		.byte	0x4
 2198 0066 07       		.byte	0x7
 2199 0067 E6020000 		.4byte	.LASF8
 2200 006b 04       		.uleb128 0x4
 2201 006c F1010000 		.4byte	.LASF9
 2202 0070 02       		.byte	0x2
 2203 0071 D201     		.2byte	0x1d2
 2204 0073 2C000000 		.4byte	0x2c
 2205 0077 04       		.uleb128 0x4
 2206 0078 17000000 		.4byte	.LASF10
 2207 007c 02       		.byte	0x2
 2208 007d D301     		.2byte	0x1d3
 2209 007f 3A000000 		.4byte	0x3a
 2210 0083 04       		.uleb128 0x4
 2211 0084 9D010000 		.4byte	.LASF11
 2212 0088 02       		.byte	0x2
 2213 0089 D401     		.2byte	0x1d4
 2214 008b 48000000 		.4byte	0x48
 2215 008f 02       		.uleb128 0x2
 2216 0090 04       		.byte	0x4
 2217 0091 04       		.byte	0x4
 2218 0092 99040000 		.4byte	.LASF12
 2219 0096 02       		.uleb128 0x2
 2220 0097 08       		.byte	0x8
 2221 0098 04       		.byte	0x4
 2222 0099 0D020000 		.4byte	.LASF13
 2223 009d 02       		.uleb128 0x2
 2224 009e 01       		.byte	0x1
 2225 009f 08       		.byte	0x8
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 95


 2226 00a0 67050000 		.4byte	.LASF14
 2227 00a4 04       		.uleb128 0x4
 2228 00a5 00050000 		.4byte	.LASF15
 2229 00a9 02       		.byte	0x2
 2230 00aa 7C02     		.2byte	0x27c
 2231 00ac B0000000 		.4byte	0xb0
 2232 00b0 05       		.uleb128 0x5
 2233 00b1 6B000000 		.4byte	0x6b
 2234 00b5 04       		.uleb128 0x4
 2235 00b6 E8030000 		.4byte	.LASF16
 2236 00ba 02       		.byte	0x2
 2237 00bb 7E02     		.2byte	0x27e
 2238 00bd C1000000 		.4byte	0xc1
 2239 00c1 05       		.uleb128 0x5
 2240 00c2 83000000 		.4byte	0x83
 2241 00c6 04       		.uleb128 0x4
 2242 00c7 6C050000 		.4byte	.LASF17
 2243 00cb 02       		.byte	0x2
 2244 00cc 8E02     		.2byte	0x28e
 2245 00ce D2000000 		.4byte	0xd2
 2246 00d2 06       		.uleb128 0x6
 2247 00d3 04       		.byte	0x4
 2248 00d4 D8000000 		.4byte	0xd8
 2249 00d8 07       		.uleb128 0x7
 2250 00d9 02       		.uleb128 0x2
 2251 00da 08       		.byte	0x8
 2252 00db 04       		.byte	0x4
 2253 00dc 25040000 		.4byte	.LASF18
 2254 00e0 02       		.uleb128 0x2
 2255 00e1 04       		.byte	0x4
 2256 00e2 07       		.byte	0x7
 2257 00e3 0A040000 		.4byte	.LASF19
 2258 00e7 08       		.uleb128 0x8
 2259 00e8 C4040000 		.4byte	.LASF20
 2260 00ec 03       		.byte	0x3
 2261 00ed F5       		.byte	0xf5
 2262 00ee D2000000 		.4byte	0xd2
 2263 00f2 09       		.uleb128 0x9
 2264 00f3 42060000 		.4byte	.LASF21
 2265 00f7 01       		.byte	0x1
 2266 00f8 6B       		.byte	0x6b
 2267 00f9 00000000 		.4byte	.LFB0
 2268 00fd 14000000 		.4byte	.LFE0-.LFB0
 2269 0101 01       		.uleb128 0x1
 2270 0102 9C       		.byte	0x9c
 2271 0103 09       		.uleb128 0x9
 2272 0104 2F030000 		.4byte	.LASF22
 2273 0108 01       		.byte	0x1
 2274 0109 8B       		.byte	0x8b
 2275 010a 00000000 		.4byte	.LFB1
 2276 010e 10000000 		.4byte	.LFE1-.LFB1
 2277 0112 01       		.uleb128 0x1
 2278 0113 9C       		.byte	0x9c
 2279 0114 0A       		.uleb128 0xa
 2280 0115 27000000 		.4byte	.LASF25
 2281 0119 01       		.byte	0x1
 2282 011a AD01     		.2byte	0x1ad
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 96


 2283 011c 00000000 		.4byte	.LFB2
 2284 0120 20000000 		.4byte	.LFE2-.LFB2
 2285 0124 01       		.uleb128 0x1
 2286 0125 9C       		.byte	0x9c
 2287 0126 6D010000 		.4byte	0x16d
 2288 012a 0B       		.uleb128 0xb
 2289 012b 4C050000 		.4byte	.LASF27
 2290 012f 01       		.byte	0x1
 2291 0130 AD01     		.2byte	0x1ad
 2292 0132 83000000 		.4byte	0x83
 2293 0136 00000000 		.4byte	.LLST0
 2294 013a 0C       		.uleb128 0xc
 2295 013b A4010000 		.4byte	.LASF23
 2296 013f 01       		.byte	0x1
 2297 0140 AF01     		.2byte	0x1af
 2298 0142 6B000000 		.4byte	0x6b
 2299 0146 2C000000 		.4byte	.LLST1
 2300 014a 0C       		.uleb128 0xc
 2301 014b 90060000 		.4byte	.LASF24
 2302 014f 01       		.byte	0x1
 2303 0150 B001     		.2byte	0x1b0
 2304 0152 83000000 		.4byte	0x83
 2305 0156 3F000000 		.4byte	.LLST2
 2306 015a 0D       		.uleb128 0xd
 2307 015b 08000000 		.4byte	.LVL1
 2308 015f DA0A0000 		.4byte	0xada
 2309 0163 0D       		.uleb128 0xd
 2310 0164 1A000000 		.4byte	.LVL5
 2311 0168 E50A0000 		.4byte	0xae5
 2312 016c 00       		.byte	0
 2313 016d 0A       		.uleb128 0xa
 2314 016e D3030000 		.4byte	.LASF26
 2315 0172 01       		.byte	0x1
 2316 0173 D901     		.2byte	0x1d9
 2317 0175 00000000 		.4byte	.LFB3
 2318 0179 38000000 		.4byte	.LFE3-.LFB3
 2319 017d 01       		.uleb128 0x1
 2320 017e 9C       		.byte	0x9c
 2321 017f 92010000 		.4byte	0x192
 2322 0183 0E       		.uleb128 0xe
 2323 0184 06020000 		.4byte	.LASF28
 2324 0188 01       		.byte	0x1
 2325 0189 D901     		.2byte	0x1d9
 2326 018b 83000000 		.4byte	0x83
 2327 018f 01       		.uleb128 0x1
 2328 0190 50       		.byte	0x50
 2329 0191 00       		.byte	0
 2330 0192 0F       		.uleb128 0xf
 2331 0193 78020000 		.4byte	.LASF34
 2332 0197 01       		.byte	0x1
 2333 0198 FE01     		.2byte	0x1fe
 2334 019a 83000000 		.4byte	0x83
 2335 019e 00000000 		.4byte	.LFB4
 2336 01a2 1C000000 		.4byte	.LFE4-.LFB4
 2337 01a6 01       		.uleb128 0x1
 2338 01a7 9C       		.byte	0x9c
 2339 01a8 DF010000 		.4byte	0x1df
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 97


 2340 01ac 0C       		.uleb128 0xc
 2341 01ad A4010000 		.4byte	.LASF23
 2342 01b1 01       		.byte	0x1
 2343 01b2 0002     		.2byte	0x200
 2344 01b4 6B000000 		.4byte	0x6b
 2345 01b8 5D000000 		.4byte	.LLST3
 2346 01bc 0C       		.uleb128 0xc
 2347 01bd 41040000 		.4byte	.LASF29
 2348 01c1 01       		.byte	0x1
 2349 01c2 0102     		.2byte	0x201
 2350 01c4 83000000 		.4byte	0x83
 2351 01c8 70000000 		.4byte	.LLST4
 2352 01cc 0D       		.uleb128 0xd
 2353 01cd 06000000 		.4byte	.LVL8
 2354 01d1 DA0A0000 		.4byte	0xada
 2355 01d5 0D       		.uleb128 0xd
 2356 01d6 12000000 		.4byte	.LVL10
 2357 01da E50A0000 		.4byte	0xae5
 2358 01de 00       		.byte	0
 2359 01df 0A       		.uleb128 0xa
 2360 01e0 89050000 		.4byte	.LASF30
 2361 01e4 01       		.byte	0x1
 2362 01e5 3502     		.2byte	0x235
 2363 01e7 00000000 		.4byte	.LFB5
 2364 01eb 30000000 		.4byte	.LFE5-.LFB5
 2365 01ef 01       		.uleb128 0x1
 2366 01f0 9C       		.byte	0x9c
 2367 01f1 28020000 		.4byte	0x228
 2368 01f5 0B       		.uleb128 0xb
 2369 01f6 3A060000 		.4byte	.LASF31
 2370 01fa 01       		.byte	0x1
 2371 01fb 3502     		.2byte	0x235
 2372 01fd 83000000 		.4byte	0x83
 2373 0201 8E000000 		.4byte	.LLST5
 2374 0205 0C       		.uleb128 0xc
 2375 0206 A4010000 		.4byte	.LASF23
 2376 020a 01       		.byte	0x1
 2377 020b 3702     		.2byte	0x237
 2378 020d 6B000000 		.4byte	0x6b
 2379 0211 BA000000 		.4byte	.LLST6
 2380 0215 0D       		.uleb128 0xd
 2381 0216 08000000 		.4byte	.LVL13
 2382 021a DA0A0000 		.4byte	0xada
 2383 021e 0D       		.uleb128 0xd
 2384 021f 24000000 		.4byte	.LVL15
 2385 0223 E50A0000 		.4byte	0xae5
 2386 0227 00       		.byte	0
 2387 0228 10       		.uleb128 0x10
 2388 0229 01060000 		.4byte	.LASF32
 2389 022d 01       		.byte	0x1
 2390 022e 6408     		.2byte	0x864
 2391 0230 00000000 		.4byte	.LFB8
 2392 0234 20000000 		.4byte	.LFE8-.LFB8
 2393 0238 01       		.uleb128 0x1
 2394 0239 9C       		.byte	0x9c
 2395 023a 11       		.uleb128 0x11
 2396 023b 14030000 		.4byte	.LASF81
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 98


 2397 023f 01       		.byte	0x1
 2398 0240 7608     		.2byte	0x876
 2399 0242 83000000 		.4byte	0x83
 2400 0246 00000000 		.4byte	.LFB9
 2401 024a 10000000 		.4byte	.LFE9-.LFB9
 2402 024e 01       		.uleb128 0x1
 2403 024f 9C       		.byte	0x9c
 2404 0250 10       		.uleb128 0x10
 2405 0251 1A020000 		.4byte	.LASF33
 2406 0255 01       		.byte	0x1
 2407 0256 8608     		.2byte	0x886
 2408 0258 00000000 		.4byte	.LFB10
 2409 025c 0C000000 		.4byte	.LFE10-.LFB10
 2410 0260 01       		.uleb128 0x1
 2411 0261 9C       		.byte	0x9c
 2412 0262 0F       		.uleb128 0xf
 2413 0263 66030000 		.4byte	.LASF35
 2414 0267 01       		.byte	0x1
 2415 0268 A008     		.2byte	0x8a0
 2416 026a 83000000 		.4byte	0x83
 2417 026e 00000000 		.4byte	.LFB11
 2418 0272 14000000 		.4byte	.LFE11-.LFB11
 2419 0276 01       		.uleb128 0x1
 2420 0277 9C       		.byte	0x9c
 2421 0278 9B020000 		.4byte	0x29b
 2422 027c 0B       		.uleb128 0xb
 2423 027d 60050000 		.4byte	.LASF36
 2424 0281 01       		.byte	0x1
 2425 0282 A008     		.2byte	0x8a0
 2426 0284 83000000 		.4byte	0x83
 2427 0288 CD000000 		.4byte	.LLST7
 2428 028c 12       		.uleb128 0x12
 2429 028d FD030000 		.4byte	.LASF37
 2430 0291 01       		.byte	0x1
 2431 0292 A208     		.2byte	0x8a2
 2432 0294 83000000 		.4byte	0x83
 2433 0298 01       		.uleb128 0x1
 2434 0299 50       		.byte	0x50
 2435 029a 00       		.byte	0
 2436 029b 0F       		.uleb128 0xf
 2437 029c 61000000 		.4byte	.LASF38
 2438 02a0 01       		.byte	0x1
 2439 02a1 B708     		.2byte	0x8b7
 2440 02a3 83000000 		.4byte	0x83
 2441 02a7 00000000 		.4byte	.LFB12
 2442 02ab 10000000 		.4byte	.LFE12-.LFB12
 2443 02af 01       		.uleb128 0x1
 2444 02b0 9C       		.byte	0x9c
 2445 02b1 C4020000 		.4byte	0x2c4
 2446 02b5 12       		.uleb128 0x12
 2447 02b6 1E000000 		.4byte	.LASF39
 2448 02ba 01       		.byte	0x1
 2449 02bb B908     		.2byte	0x8b9
 2450 02bd 83000000 		.4byte	0x83
 2451 02c1 01       		.uleb128 0x1
 2452 02c2 50       		.byte	0x50
 2453 02c3 00       		.byte	0
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 99


 2454 02c4 0A       		.uleb128 0xa
 2455 02c5 3A010000 		.4byte	.LASF40
 2456 02c9 01       		.byte	0x1
 2457 02ca CE08     		.2byte	0x8ce
 2458 02cc 00000000 		.4byte	.LFB13
 2459 02d0 0C000000 		.4byte	.LFE13-.LFB13
 2460 02d4 01       		.uleb128 0x1
 2461 02d5 9C       		.byte	0x9c
 2462 02d6 E9020000 		.4byte	0x2e9
 2463 02da 0E       		.uleb128 0xe
 2464 02db 73020000 		.4byte	.LASF41
 2465 02df 01       		.byte	0x1
 2466 02e0 CE08     		.2byte	0x8ce
 2467 02e2 83000000 		.4byte	0x83
 2468 02e6 01       		.uleb128 0x1
 2469 02e7 50       		.byte	0x50
 2470 02e8 00       		.byte	0
 2471 02e9 0A       		.uleb128 0xa
 2472 02ea 2E050000 		.4byte	.LASF42
 2473 02ee 01       		.byte	0x1
 2474 02ef 8509     		.2byte	0x985
 2475 02f1 00000000 		.4byte	.LFB20
 2476 02f5 14000000 		.4byte	.LFE20-.LFB20
 2477 02f9 01       		.uleb128 0x1
 2478 02fa 9C       		.byte	0x9c
 2479 02fb 10030000 		.4byte	0x310
 2480 02ff 0B       		.uleb128 0xb
 2481 0300 9C030000 		.4byte	.LASF43
 2482 0304 01       		.byte	0x1
 2483 0305 8509     		.2byte	0x985
 2484 0307 6B000000 		.4byte	0x6b
 2485 030b EB000000 		.4byte	.LLST8
 2486 030f 00       		.byte	0
 2487 0310 0F       		.uleb128 0xf
 2488 0311 70010000 		.4byte	.LASF44
 2489 0315 01       		.byte	0x1
 2490 0316 9709     		.2byte	0x997
 2491 0318 6B000000 		.4byte	0x6b
 2492 031c 00000000 		.4byte	.LFB21
 2493 0320 18000000 		.4byte	.LFE21-.LFB21
 2494 0324 01       		.uleb128 0x1
 2495 0325 9C       		.byte	0x9c
 2496 0326 3B030000 		.4byte	0x33b
 2497 032a 0B       		.uleb128 0xb
 2498 032b 9C030000 		.4byte	.LASF43
 2499 032f 01       		.byte	0x1
 2500 0330 9709     		.2byte	0x997
 2501 0332 6B000000 		.4byte	0x6b
 2502 0336 0C010000 		.4byte	.LLST9
 2503 033a 00       		.byte	0
 2504 033b 0A       		.uleb128 0xa
 2505 033c CF010000 		.4byte	.LASF45
 2506 0340 01       		.byte	0x1
 2507 0341 A709     		.2byte	0x9a7
 2508 0343 00000000 		.4byte	.LFB22
 2509 0347 14000000 		.4byte	.LFE22-.LFB22
 2510 034b 01       		.uleb128 0x1
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 100


 2511 034c 9C       		.byte	0x9c
 2512 034d 62030000 		.4byte	0x362
 2513 0351 0B       		.uleb128 0xb
 2514 0352 9C030000 		.4byte	.LASF43
 2515 0356 01       		.byte	0x1
 2516 0357 A709     		.2byte	0x9a7
 2517 0359 6B000000 		.4byte	0x6b
 2518 035d 2D010000 		.4byte	.LLST10
 2519 0361 00       		.byte	0
 2520 0362 0A       		.uleb128 0xa
 2521 0363 56030000 		.4byte	.LASF46
 2522 0367 01       		.byte	0x1
 2523 0368 B509     		.2byte	0x9b5
 2524 036a 00000000 		.4byte	.LFB23
 2525 036e 14000000 		.4byte	.LFE23-.LFB23
 2526 0372 01       		.uleb128 0x1
 2527 0373 9C       		.byte	0x9c
 2528 0374 89030000 		.4byte	0x389
 2529 0378 0B       		.uleb128 0xb
 2530 0379 9C030000 		.4byte	.LASF43
 2531 037d 01       		.byte	0x1
 2532 037e B509     		.2byte	0x9b5
 2533 0380 6B000000 		.4byte	0x6b
 2534 0384 4E010000 		.4byte	.LLST11
 2535 0388 00       		.byte	0
 2536 0389 0A       		.uleb128 0xa
 2537 038a 13040000 		.4byte	.LASF47
 2538 038e 01       		.byte	0x1
 2539 038f C409     		.2byte	0x9c4
 2540 0391 00000000 		.4byte	.LFB24
 2541 0395 14000000 		.4byte	.LFE24-.LFB24
 2542 0399 01       		.uleb128 0x1
 2543 039a 9C       		.byte	0x9c
 2544 039b B0030000 		.4byte	0x3b0
 2545 039f 0B       		.uleb128 0xb
 2546 03a0 9C030000 		.4byte	.LASF43
 2547 03a4 01       		.byte	0x1
 2548 03a5 C409     		.2byte	0x9c4
 2549 03a7 6B000000 		.4byte	0x6b
 2550 03ab 6F010000 		.4byte	.LLST12
 2551 03af 00       		.byte	0
 2552 03b0 0A       		.uleb128 0xa
 2553 03b1 0F050000 		.4byte	.LASF48
 2554 03b5 01       		.byte	0x1
 2555 03b6 D309     		.2byte	0x9d3
 2556 03b8 00000000 		.4byte	.LFB25
 2557 03bc 04000000 		.4byte	.LFE25-.LFB25
 2558 03c0 01       		.uleb128 0x1
 2559 03c1 9C       		.byte	0x9c
 2560 03c2 D5030000 		.4byte	0x3d5
 2561 03c6 0E       		.uleb128 0xe
 2562 03c7 60050000 		.4byte	.LASF36
 2563 03cb 01       		.byte	0x1
 2564 03cc D309     		.2byte	0x9d3
 2565 03ce 6B000000 		.4byte	0x6b
 2566 03d2 01       		.uleb128 0x1
 2567 03d3 50       		.byte	0x50
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 101


 2568 03d4 00       		.byte	0
 2569 03d5 0F       		.uleb128 0xf
 2570 03d6 C1030000 		.4byte	.LASF49
 2571 03da 01       		.byte	0x1
 2572 03db E708     		.2byte	0x8e7
 2573 03dd C6000000 		.4byte	0xc6
 2574 03e1 00000000 		.4byte	.LFB14
 2575 03e5 20000000 		.4byte	.LFE14-.LFB14
 2576 03e9 01       		.uleb128 0x1
 2577 03ea 9C       		.byte	0x9c
 2578 03eb 3D040000 		.4byte	0x43d
 2579 03ef 0B       		.uleb128 0xb
 2580 03f0 9C030000 		.4byte	.LASF43
 2581 03f4 01       		.byte	0x1
 2582 03f5 E708     		.2byte	0x8e7
 2583 03f7 6B000000 		.4byte	0x6b
 2584 03fb 90010000 		.4byte	.LLST13
 2585 03ff 0B       		.uleb128 0xb
 2586 0400 31040000 		.4byte	.LASF50
 2587 0404 01       		.byte	0x1
 2588 0405 E708     		.2byte	0x8e7
 2589 0407 C6000000 		.4byte	0xc6
 2590 040b B1010000 		.4byte	.LLST14
 2591 040f 12       		.uleb128 0x12
 2592 0410 53000000 		.4byte	.LASF51
 2593 0414 01       		.byte	0x1
 2594 0415 E908     		.2byte	0x8e9
 2595 0417 C6000000 		.4byte	0xc6
 2596 041b 01       		.uleb128 0x1
 2597 041c 50       		.byte	0x50
 2598 041d 13       		.uleb128 0x13
 2599 041e 00000000 		.4byte	.LASF52
 2600 0422 01       		.byte	0x1
 2601 0423 EA08     		.2byte	0x8ea
 2602 0425 3D040000 		.4byte	0x43d
 2603 0429 00000020 		.4byte	0x20000000
 2604 042d 14       		.uleb128 0x14
 2605 042e 10000000 		.4byte	.LVL36
 2606 0432 B0030000 		.4byte	0x3b0
 2607 0436 15       		.uleb128 0x15
 2608 0437 01       		.uleb128 0x1
 2609 0438 50       		.byte	0x50
 2610 0439 01       		.uleb128 0x1
 2611 043a 30       		.byte	0x30
 2612 043b 00       		.byte	0
 2613 043c 00       		.byte	0
 2614 043d 06       		.uleb128 0x6
 2615 043e 04       		.byte	0x4
 2616 043f C6000000 		.4byte	0xc6
 2617 0443 0F       		.uleb128 0xf
 2618 0444 3A050000 		.4byte	.LASF53
 2619 0448 01       		.byte	0x1
 2620 0449 0909     		.2byte	0x909
 2621 044b C6000000 		.4byte	0xc6
 2622 044f 00000000 		.4byte	.LFB15
 2623 0453 1C000000 		.4byte	.LFE15-.LFB15
 2624 0457 01       		.uleb128 0x1
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 102


 2625 0458 9C       		.byte	0x9c
 2626 0459 8D040000 		.4byte	0x48d
 2627 045d 0B       		.uleb128 0xb
 2628 045e 9C030000 		.4byte	.LASF43
 2629 0462 01       		.byte	0x1
 2630 0463 0909     		.2byte	0x909
 2631 0465 6B000000 		.4byte	0x6b
 2632 0469 DD010000 		.4byte	.LLST15
 2633 046d 13       		.uleb128 0x13
 2634 046e 00000000 		.4byte	.LASF52
 2635 0472 01       		.byte	0x1
 2636 0473 0B09     		.2byte	0x90b
 2637 0475 3D040000 		.4byte	0x43d
 2638 0479 00000020 		.4byte	0x20000000
 2639 047d 14       		.uleb128 0x14
 2640 047e 0E000000 		.4byte	.LVL42
 2641 0482 B0030000 		.4byte	0x3b0
 2642 0486 15       		.uleb128 0x15
 2643 0487 01       		.uleb128 0x1
 2644 0488 50       		.byte	0x50
 2645 0489 01       		.uleb128 0x1
 2646 048a 30       		.byte	0x30
 2647 048b 00       		.byte	0
 2648 048c 00       		.byte	0
 2649 048d 0F       		.uleb128 0xf
 2650 048e 8D030000 		.4byte	.LASF54
 2651 0492 01       		.byte	0x1
 2652 0493 1F09     		.2byte	0x91f
 2653 0495 C6000000 		.4byte	0xc6
 2654 0499 00000000 		.4byte	.LFB16
 2655 049d 22000000 		.4byte	.LFE16-.LFB16
 2656 04a1 01       		.uleb128 0x1
 2657 04a2 9C       		.byte	0x9c
 2658 04a3 F5040000 		.4byte	0x4f5
 2659 04a7 0B       		.uleb128 0xb
 2660 04a8 9C030000 		.4byte	.LASF43
 2661 04ac 01       		.byte	0x1
 2662 04ad 1F09     		.2byte	0x91f
 2663 04af 6B000000 		.4byte	0x6b
 2664 04b3 FE010000 		.4byte	.LLST16
 2665 04b7 0B       		.uleb128 0xb
 2666 04b8 31040000 		.4byte	.LASF50
 2667 04bc 01       		.byte	0x1
 2668 04bd 1F09     		.2byte	0x91f
 2669 04bf C6000000 		.4byte	0xc6
 2670 04c3 1F020000 		.4byte	.LLST17
 2671 04c7 12       		.uleb128 0x12
 2672 04c8 53000000 		.4byte	.LASF51
 2673 04cc 01       		.byte	0x1
 2674 04cd 2109     		.2byte	0x921
 2675 04cf C6000000 		.4byte	0xc6
 2676 04d3 01       		.uleb128 0x1
 2677 04d4 50       		.byte	0x50
 2678 04d5 13       		.uleb128 0x13
 2679 04d6 00000000 		.4byte	.LASF52
 2680 04da 01       		.byte	0x1
 2681 04db 2209     		.2byte	0x922
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 103


 2682 04dd 3D040000 		.4byte	0x43d
 2683 04e1 00000020 		.4byte	0x20000000
 2684 04e5 14       		.uleb128 0x14
 2685 04e6 10000000 		.4byte	.LVL46
 2686 04ea B0030000 		.4byte	0x3b0
 2687 04ee 15       		.uleb128 0x15
 2688 04ef 01       		.uleb128 0x1
 2689 04f0 50       		.byte	0x50
 2690 04f1 01       		.uleb128 0x1
 2691 04f2 30       		.byte	0x30
 2692 04f3 00       		.byte	0
 2693 04f4 00       		.byte	0
 2694 04f5 0F       		.uleb128 0xf
 2695 04f6 D6040000 		.4byte	.LASF55
 2696 04fa 01       		.byte	0x1
 2697 04fb 3B09     		.2byte	0x93b
 2698 04fd C6000000 		.4byte	0xc6
 2699 0501 00000000 		.4byte	.LFB17
 2700 0505 1E000000 		.4byte	.LFE17-.LFB17
 2701 0509 01       		.uleb128 0x1
 2702 050a 9C       		.byte	0x9c
 2703 050b 3F050000 		.4byte	0x53f
 2704 050f 0B       		.uleb128 0xb
 2705 0510 9C030000 		.4byte	.LASF43
 2706 0514 01       		.byte	0x1
 2707 0515 3B09     		.2byte	0x93b
 2708 0517 6B000000 		.4byte	0x6b
 2709 051b 4B020000 		.4byte	.LLST18
 2710 051f 13       		.uleb128 0x13
 2711 0520 00000000 		.4byte	.LASF52
 2712 0524 01       		.byte	0x1
 2713 0525 3D09     		.2byte	0x93d
 2714 0527 3D040000 		.4byte	0x43d
 2715 052b 00000020 		.4byte	0x20000000
 2716 052f 14       		.uleb128 0x14
 2717 0530 0E000000 		.4byte	.LVL52
 2718 0534 B0030000 		.4byte	0x3b0
 2719 0538 15       		.uleb128 0x15
 2720 0539 01       		.uleb128 0x1
 2721 053a 50       		.byte	0x50
 2722 053b 01       		.uleb128 0x1
 2723 053c 30       		.byte	0x30
 2724 053d 00       		.byte	0
 2725 053e 00       		.byte	0
 2726 053f 0A       		.uleb128 0xa
 2727 0540 88040000 		.4byte	.LASF56
 2728 0544 01       		.byte	0x1
 2729 0545 4E09     		.2byte	0x94e
 2730 0547 00000000 		.4byte	.LFB18
 2731 054b 4C000000 		.4byte	.LFE18-.LFB18
 2732 054f 01       		.uleb128 0x1
 2733 0550 9C       		.byte	0x9c
 2734 0551 DE050000 		.4byte	0x5de
 2735 0555 0B       		.uleb128 0xb
 2736 0556 9C030000 		.4byte	.LASF43
 2737 055a 01       		.byte	0x1
 2738 055b 4E09     		.2byte	0x94e
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 104


 2739 055d 6B000000 		.4byte	0x6b
 2740 0561 6C020000 		.4byte	.LLST19
 2741 0565 0B       		.uleb128 0xb
 2742 0566 A3030000 		.4byte	.LASF57
 2743 056a 01       		.byte	0x1
 2744 056b 4E09     		.2byte	0x94e
 2745 056d 6B000000 		.4byte	0x6b
 2746 0571 8D020000 		.4byte	.LLST20
 2747 0575 0C       		.uleb128 0xc
 2748 0576 A4010000 		.4byte	.LASF23
 2749 057a 01       		.byte	0x1
 2750 057b 5009     		.2byte	0x950
 2751 057d 6B000000 		.4byte	0x6b
 2752 0581 AE020000 		.4byte	.LLST21
 2753 0585 0C       		.uleb128 0xc
 2754 0586 14020000 		.4byte	.LASF58
 2755 058a 01       		.byte	0x1
 2756 058b 5109     		.2byte	0x951
 2757 058d 83000000 		.4byte	0x83
 2758 0591 C1020000 		.4byte	.LLST22
 2759 0595 0C       		.uleb128 0xc
 2760 0596 BC020000 		.4byte	.LASF59
 2761 059a 01       		.byte	0x1
 2762 059b 5209     		.2byte	0x952
 2763 059d 83000000 		.4byte	0x83
 2764 05a1 D4020000 		.4byte	.LLST23
 2765 05a5 16       		.uleb128 0x16
 2766 05a6 10000000 		.4byte	.LVL55
 2767 05aa B0030000 		.4byte	0x3b0
 2768 05ae B8050000 		.4byte	0x5b8
 2769 05b2 15       		.uleb128 0x15
 2770 05b3 01       		.uleb128 0x1
 2771 05b4 50       		.byte	0x50
 2772 05b5 01       		.uleb128 0x1
 2773 05b6 30       		.byte	0x30
 2774 05b7 00       		.byte	0
 2775 05b8 16       		.uleb128 0x16
 2776 05b9 1A000000 		.4byte	.LVL56
 2777 05bd B0030000 		.4byte	0x3b0
 2778 05c1 CB050000 		.4byte	0x5cb
 2779 05c5 15       		.uleb128 0x15
 2780 05c6 01       		.uleb128 0x1
 2781 05c7 50       		.byte	0x50
 2782 05c8 01       		.uleb128 0x1
 2783 05c9 30       		.byte	0x30
 2784 05ca 00       		.byte	0
 2785 05cb 0D       		.uleb128 0xd
 2786 05cc 26000000 		.4byte	.LVL58
 2787 05d0 DA0A0000 		.4byte	0xada
 2788 05d4 0D       		.uleb128 0xd
 2789 05d5 46000000 		.4byte	.LVL64
 2790 05d9 E50A0000 		.4byte	0xae5
 2791 05dd 00       		.byte	0
 2792 05de 0F       		.uleb128 0xf
 2793 05df 90020000 		.4byte	.LASF60
 2794 05e3 01       		.byte	0x1
 2795 05e4 7009     		.2byte	0x970
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 105


 2796 05e6 6B000000 		.4byte	0x6b
 2797 05ea 00000000 		.4byte	.LFB19
 2798 05ee 2C000000 		.4byte	.LFE19-.LFB19
 2799 05f2 01       		.uleb128 0x1
 2800 05f3 9C       		.byte	0x9c
 2801 05f4 28060000 		.4byte	0x628
 2802 05f8 0B       		.uleb128 0xb
 2803 05f9 9C030000 		.4byte	.LASF43
 2804 05fd 01       		.byte	0x1
 2805 05fe 7009     		.2byte	0x970
 2806 0600 6B000000 		.4byte	0x6b
 2807 0604 08030000 		.4byte	.LLST24
 2808 0608 0C       		.uleb128 0xc
 2809 0609 A3030000 		.4byte	.LASF57
 2810 060d 01       		.byte	0x1
 2811 060e 7209     		.2byte	0x972
 2812 0610 6B000000 		.4byte	0x6b
 2813 0614 29030000 		.4byte	.LLST25
 2814 0618 14       		.uleb128 0x14
 2815 0619 0E000000 		.4byte	.LVL68
 2816 061d B0030000 		.4byte	0x3b0
 2817 0621 15       		.uleb128 0x15
 2818 0622 01       		.uleb128 0x1
 2819 0623 50       		.byte	0x50
 2820 0624 01       		.uleb128 0x1
 2821 0625 30       		.byte	0x30
 2822 0626 00       		.byte	0
 2823 0627 00       		.byte	0
 2824 0628 10       		.uleb128 0x10
 2825 0629 47010000 		.4byte	.LASF61
 2826 062d 01       		.byte	0x1
 2827 062e EB09     		.2byte	0x9eb
 2828 0630 00000000 		.4byte	.LFB26
 2829 0634 18000000 		.4byte	.LFE26-.LFB26
 2830 0638 01       		.uleb128 0x1
 2831 0639 9C       		.byte	0x9c
 2832 063a 0A       		.uleb128 0xa
 2833 063b DF050000 		.4byte	.LASF62
 2834 063f 01       		.byte	0x1
 2835 0640 FF09     		.2byte	0x9ff
 2836 0642 00000000 		.4byte	.LFB27
 2837 0646 30000000 		.4byte	.LFE27-.LFB27
 2838 064a 01       		.uleb128 0x1
 2839 064b 9C       		.byte	0x9c
 2840 064c 73060000 		.4byte	0x673
 2841 0650 0B       		.uleb128 0xb
 2842 0651 E5040000 		.4byte	.LASF63
 2843 0655 01       		.byte	0x1
 2844 0656 FF09     		.2byte	0x9ff
 2845 0658 83000000 		.4byte	0x83
 2846 065c 3C030000 		.4byte	.LLST26
 2847 0660 0D       		.uleb128 0xd
 2848 0661 0E000000 		.4byte	.LVL73
 2849 0665 F00A0000 		.4byte	0xaf0
 2850 0669 0D       		.uleb128 0xd
 2851 066a 26000000 		.4byte	.LVL75
 2852 066e F00A0000 		.4byte	0xaf0
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 106


 2853 0672 00       		.byte	0
 2854 0673 0A       		.uleb128 0xa
 2855 0674 56050000 		.4byte	.LASF64
 2856 0678 01       		.byte	0x1
 2857 0679 160A     		.2byte	0xa16
 2858 067b 00000000 		.4byte	.LFB28
 2859 067f 14000000 		.4byte	.LFE28-.LFB28
 2860 0683 01       		.uleb128 0x1
 2861 0684 9C       		.byte	0x9c
 2862 0685 A3060000 		.4byte	0x6a3
 2863 0689 0B       		.uleb128 0xb
 2864 068a 83060000 		.4byte	.LASF65
 2865 068e 01       		.byte	0x1
 2866 068f 160A     		.2byte	0xa16
 2867 0691 77000000 		.4byte	0x77
 2868 0695 5A030000 		.4byte	.LLST27
 2869 0699 0D       		.uleb128 0xd
 2870 069a 0C000000 		.4byte	.LVL79
 2871 069e F00A0000 		.4byte	0xaf0
 2872 06a2 00       		.byte	0
 2873 06a3 0A       		.uleb128 0xa
 2874 06a4 AC030000 		.4byte	.LASF66
 2875 06a8 01       		.byte	0x1
 2876 06a9 6F02     		.2byte	0x26f
 2877 06ab 00000000 		.4byte	.LFB6
 2878 06af 64010000 		.4byte	.LFE6-.LFB6
 2879 06b3 01       		.uleb128 0x1
 2880 06b4 9C       		.byte	0x9c
 2881 06b5 A4070000 		.4byte	0x7a4
 2882 06b9 0B       		.uleb128 0xb
 2883 06ba 98010000 		.4byte	.LASF67
 2884 06be 01       		.byte	0x1
 2885 06bf 6F02     		.2byte	0x26f
 2886 06c1 83000000 		.4byte	0x83
 2887 06c5 7B030000 		.4byte	.LLST28
 2888 06c9 0C       		.uleb128 0xc
 2889 06ca 0F000000 		.4byte	.LASF68
 2890 06ce 01       		.byte	0x1
 2891 06cf 7502     		.2byte	0x275
 2892 06d1 6B000000 		.4byte	0x6b
 2893 06d5 D0030000 		.4byte	.LLST29
 2894 06d9 0C       		.uleb128 0xc
 2895 06da 39040000 		.4byte	.LASF69
 2896 06de 01       		.byte	0x1
 2897 06df 7602     		.2byte	0x276
 2898 06e1 6B000000 		.4byte	0x6b
 2899 06e5 0F040000 		.4byte	.LLST30
 2900 06e9 0C       		.uleb128 0xc
 2901 06ea 53060000 		.4byte	.LASF70
 2902 06ee 01       		.byte	0x1
 2903 06ef 7702     		.2byte	0x277
 2904 06f1 6B000000 		.4byte	0x6b
 2905 06f5 4E040000 		.4byte	.LLST31
 2906 06f9 0C       		.uleb128 0xc
 2907 06fa 6F000000 		.4byte	.LASF71
 2908 06fe 01       		.byte	0x1
 2909 06ff 7802     		.2byte	0x278
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 107


 2910 0701 6B000000 		.4byte	0x6b
 2911 0705 61040000 		.4byte	.LLST32
 2912 0709 0C       		.uleb128 0xc
 2913 070a C8050000 		.4byte	.LASF72
 2914 070e 01       		.byte	0x1
 2915 070f 7902     		.2byte	0x279
 2916 0711 6B000000 		.4byte	0x6b
 2917 0715 80040000 		.4byte	.LLST33
 2918 0719 0C       		.uleb128 0xc
 2919 071a A4010000 		.4byte	.LASF23
 2920 071e 01       		.byte	0x1
 2921 071f 8402     		.2byte	0x284
 2922 0721 6B000000 		.4byte	0x6b
 2923 0725 B2040000 		.4byte	.LLST34
 2924 0729 0D       		.uleb128 0xd
 2925 072a 10000000 		.4byte	.LVL81
 2926 072e DA0A0000 		.4byte	0xada
 2927 0732 16       		.uleb128 0x16
 2928 0733 B0000000 		.4byte	.LVL99
 2929 0737 F00A0000 		.4byte	0xaf0
 2930 073b 45070000 		.4byte	0x745
 2931 073f 15       		.uleb128 0x15
 2932 0740 01       		.uleb128 0x1
 2933 0741 50       		.byte	0x50
 2934 0742 01       		.uleb128 0x1
 2935 0743 35       		.byte	0x35
 2936 0744 00       		.byte	0
 2937 0745 16       		.uleb128 0x16
 2938 0746 CE000000 		.4byte	.LVL102
 2939 074a F00A0000 		.4byte	0xaf0
 2940 074e 58070000 		.4byte	0x758
 2941 0752 15       		.uleb128 0x15
 2942 0753 01       		.uleb128 0x1
 2943 0754 50       		.byte	0x50
 2944 0755 01       		.uleb128 0x1
 2945 0756 35       		.byte	0x35
 2946 0757 00       		.byte	0
 2947 0758 16       		.uleb128 0x16
 2948 0759 EE000000 		.4byte	.LVL108
 2949 075d 73060000 		.4byte	0x673
 2950 0761 6B070000 		.4byte	0x76b
 2951 0765 15       		.uleb128 0x15
 2952 0766 01       		.uleb128 0x1
 2953 0767 50       		.byte	0x50
 2954 0768 01       		.uleb128 0x1
 2955 0769 35       		.byte	0x35
 2956 076a 00       		.byte	0
 2957 076b 16       		.uleb128 0x16
 2958 076c 00010000 		.4byte	.LVL109
 2959 0770 F00A0000 		.4byte	0xaf0
 2960 0774 7E070000 		.4byte	0x77e
 2961 0778 15       		.uleb128 0x15
 2962 0779 01       		.uleb128 0x1
 2963 077a 50       		.byte	0x50
 2964 077b 01       		.uleb128 0x1
 2965 077c 35       		.byte	0x35
 2966 077d 00       		.byte	0
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 108


 2967 077e 16       		.uleb128 0x16
 2968 077f 08010000 		.4byte	.LVL111
 2969 0783 B0030000 		.4byte	0x3b0
 2970 0787 91070000 		.4byte	0x791
 2971 078b 15       		.uleb128 0x15
 2972 078c 01       		.uleb128 0x1
 2973 078d 50       		.byte	0x50
 2974 078e 01       		.uleb128 0x1
 2975 078f 30       		.byte	0x30
 2976 0790 00       		.byte	0
 2977 0791 14       		.uleb128 0x14
 2978 0792 0E010000 		.4byte	.LVL112
 2979 0796 E50A0000 		.4byte	0xae5
 2980 079a 15       		.uleb128 0x15
 2981 079b 01       		.uleb128 0x1
 2982 079c 50       		.byte	0x50
 2983 079d 04       		.uleb128 0x4
 2984 079e 91       		.byte	0x91
 2985 079f 5C       		.sleb128 -36
 2986 07a0 94       		.byte	0x94
 2987 07a1 01       		.byte	0x1
 2988 07a2 00       		.byte	0
 2989 07a3 00       		.byte	0
 2990 07a4 0A       		.uleb128 0xa
 2991 07a5 B5040000 		.4byte	.LASF73
 2992 07a9 01       		.byte	0x1
 2993 07aa 4608     		.2byte	0x846
 2994 07ac 00000000 		.4byte	.LFB7
 2995 07b0 44000000 		.4byte	.LFE7-.LFB7
 2996 07b4 01       		.uleb128 0x1
 2997 07b5 9C       		.byte	0x9c
 2998 07b6 E9070000 		.4byte	0x7e9
 2999 07ba 0B       		.uleb128 0xb
 3000 07bb 05050000 		.4byte	.LASF74
 3001 07bf 01       		.byte	0x1
 3002 07c0 4608     		.2byte	0x846
 3003 07c2 83000000 		.4byte	0x83
 3004 07c6 DE040000 		.4byte	.LLST35
 3005 07ca 16       		.uleb128 0x16
 3006 07cb 2E000000 		.4byte	.LVL117
 3007 07cf 73060000 		.4byte	0x673
 3008 07d3 DF070000 		.4byte	0x7df
 3009 07d7 15       		.uleb128 0x15
 3010 07d8 01       		.uleb128 0x1
 3011 07d9 50       		.byte	0x50
 3012 07da 03       		.uleb128 0x3
 3013 07db 0A       		.byte	0xa
 3014 07dc E803     		.2byte	0x3e8
 3015 07de 00       		.byte	0
 3016 07df 0D       		.uleb128 0xd
 3017 07e0 32000000 		.4byte	.LVL118
 3018 07e4 50020000 		.4byte	0x250
 3019 07e8 00       		.byte	0
 3020 07e9 17       		.uleb128 0x17
 3021 07ea 20060000 		.4byte	.LASF75
 3022 07ee 01       		.byte	0x1
 3023 07ef 240A     		.2byte	0xa24
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 109


 3024 07f1 00000000 		.4byte	.LFB29
 3025 07f5 4C000000 		.4byte	.LFE29-.LFB29
 3026 07f9 01       		.uleb128 0x1
 3027 07fa 9C       		.byte	0x9c
 3028 07fb 10080000 		.4byte	0x810
 3029 07ff 0B       		.uleb128 0xb
 3030 0800 98010000 		.4byte	.LASF67
 3031 0804 01       		.byte	0x1
 3032 0805 240A     		.2byte	0xa24
 3033 0807 83000000 		.4byte	0x83
 3034 080b 0A050000 		.4byte	.LLST36
 3035 080f 00       		.byte	0
 3036 0810 10       		.uleb128 0x10
 3037 0811 2C060000 		.4byte	.LASF76
 3038 0815 01       		.byte	0x1
 3039 0816 900A     		.2byte	0xa90
 3040 0818 00000000 		.4byte	.LFB33
 3041 081c 10000000 		.4byte	.LFE33-.LFB33
 3042 0820 01       		.uleb128 0x1
 3043 0821 9C       		.byte	0x9c
 3044 0822 10       		.uleb128 0x10
 3045 0823 57010000 		.4byte	.LASF77
 3046 0827 01       		.byte	0x1
 3047 0828 A00A     		.2byte	0xaa0
 3048 082a 00000000 		.4byte	.LFB34
 3049 082e 10000000 		.4byte	.LFE34-.LFB34
 3050 0832 01       		.uleb128 0x1
 3051 0833 9C       		.byte	0x9c
 3052 0834 0A       		.uleb128 0xa
 3053 0835 79050000 		.4byte	.LASF78
 3054 0839 01       		.byte	0x1
 3055 083a 7F0A     		.2byte	0xa7f
 3056 083c 00000000 		.4byte	.LFB32
 3057 0840 18000000 		.4byte	.LFE32-.LFB32
 3058 0844 01       		.uleb128 0x1
 3059 0845 9C       		.byte	0x9c
 3060 0846 54080000 		.4byte	0x854
 3061 084a 0D       		.uleb128 0xd
 3062 084b 06000000 		.4byte	.LVL123
 3063 084f 22080000 		.4byte	0x822
 3064 0853 00       		.byte	0
 3065 0854 10       		.uleb128 0x10
 3066 0855 E7050000 		.4byte	.LASF79
 3067 0859 01       		.byte	0x1
 3068 085a B00A     		.2byte	0xab0
 3069 085c 00000000 		.4byte	.LFB35
 3070 0860 10000000 		.4byte	.LFE35-.LFB35
 3071 0864 01       		.uleb128 0x1
 3072 0865 9C       		.byte	0x9c
 3073 0866 0A       		.uleb128 0xa
 3074 0867 97060000 		.4byte	.LASF80
 3075 086b 01       		.byte	0x1
 3076 086c C10A     		.2byte	0xac1
 3077 086e 00000000 		.4byte	.LFB36
 3078 0872 10000000 		.4byte	.LFE36-.LFB36
 3079 0876 01       		.uleb128 0x1
 3080 0877 9C       		.byte	0x9c
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 110


 3081 0878 8D080000 		.4byte	0x88d
 3082 087c 0B       		.uleb128 0xb
 3083 087d BC020000 		.4byte	.LASF59
 3084 0881 01       		.byte	0x1
 3085 0882 C10A     		.2byte	0xac1
 3086 0884 83000000 		.4byte	0x83
 3087 0888 2B050000 		.4byte	.LLST37
 3088 088c 00       		.byte	0
 3089 088d 11       		.uleb128 0x11
 3090 088e B3010000 		.4byte	.LASF82
 3091 0892 01       		.byte	0x1
 3092 0893 D10A     		.2byte	0xad1
 3093 0895 83000000 		.4byte	0x83
 3094 0899 00000000 		.4byte	.LFB37
 3095 089d 10000000 		.4byte	.LFE37-.LFB37
 3096 08a1 01       		.uleb128 0x1
 3097 08a2 9C       		.byte	0x9c
 3098 08a3 11       		.uleb128 0x11
 3099 08a4 68040000 		.4byte	.LASF83
 3100 08a8 01       		.byte	0x1
 3101 08a9 E10A     		.2byte	0xae1
 3102 08ab 83000000 		.4byte	0x83
 3103 08af 00000000 		.4byte	.LFB38
 3104 08b3 10000000 		.4byte	.LFE38-.LFB38
 3105 08b7 01       		.uleb128 0x1
 3106 08b8 9C       		.byte	0x9c
 3107 08b9 11       		.uleb128 0x11
 3108 08ba D0020000 		.4byte	.LASF84
 3109 08be 01       		.byte	0x1
 3110 08bf 310B     		.2byte	0xb31
 3111 08c1 83000000 		.4byte	0x83
 3112 08c5 00000000 		.4byte	.LFB39
 3113 08c9 10000000 		.4byte	.LFE39-.LFB39
 3114 08cd 01       		.uleb128 0x1
 3115 08ce 9C       		.byte	0x9c
 3116 08cf 18       		.uleb128 0x18
 3117 08d0 AA060000 		.4byte	.LASF108
 3118 08d4 01       		.byte	0x1
 3119 08d5 860B     		.2byte	0xb86
 3120 08d7 00000000 		.4byte	.LFB43
 3121 08db 28000000 		.4byte	.LFE43-.LFB43
 3122 08df 01       		.uleb128 0x1
 3123 08e0 9C       		.byte	0x9c
 3124 08e1 FD080000 		.4byte	0x8fd
 3125 08e5 19       		.uleb128 0x19
 3126 08e6 6900     		.ascii	"i\000"
 3127 08e8 01       		.byte	0x1
 3128 08e9 880B     		.2byte	0xb88
 3129 08eb 83000000 		.4byte	0x83
 3130 08ef 4C050000 		.4byte	.LLST38
 3131 08f3 0D       		.uleb128 0xd
 3132 08f4 06000000 		.4byte	.LVL126
 3133 08f8 B9080000 		.4byte	0x8b9
 3134 08fc 00       		.byte	0
 3135 08fd 10       		.uleb128 0x10
 3136 08fe F3020000 		.4byte	.LASF85
 3137 0902 01       		.byte	0x1
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 111


 3138 0903 3E0B     		.2byte	0xb3e
 3139 0905 00000000 		.4byte	.LFB40
 3140 0909 0C000000 		.4byte	.LFE40-.LFB40
 3141 090d 01       		.uleb128 0x1
 3142 090e 9C       		.byte	0x9c
 3143 090f 17       		.uleb128 0x17
 3144 0910 AE020000 		.4byte	.LASF86
 3145 0914 01       		.byte	0x1
 3146 0915 610A     		.2byte	0xa61
 3147 0917 00000000 		.4byte	.LFB31
 3148 091b 40000000 		.4byte	.LFE31-.LFB31
 3149 091f 01       		.uleb128 0x1
 3150 0920 9C       		.byte	0x9c
 3151 0921 62090000 		.4byte	0x962
 3152 0925 19       		.uleb128 0x19
 3153 0926 6900     		.ascii	"i\000"
 3154 0928 01       		.byte	0x1
 3155 0929 630A     		.2byte	0xa63
 3156 092b 83000000 		.4byte	0x83
 3157 092f 6A050000 		.4byte	.LLST39
 3158 0933 16       		.uleb128 0x16
 3159 0934 1C000000 		.4byte	.LVL136
 3160 0938 D5030000 		.4byte	0x3d5
 3161 093c 4F090000 		.4byte	0x94f
 3162 0940 15       		.uleb128 0x15
 3163 0941 01       		.uleb128 0x1
 3164 0942 50       		.byte	0x50
 3165 0943 01       		.uleb128 0x1
 3166 0944 3F       		.byte	0x3f
 3167 0945 15       		.uleb128 0x15
 3168 0946 01       		.uleb128 0x1
 3169 0947 51       		.byte	0x51
 3170 0948 05       		.uleb128 0x5
 3171 0949 03       		.byte	0x3
 3172 094a 00000000 		.4byte	CySysTickServiceCallbacks
 3173 094e 00       		.byte	0
 3174 094f 0D       		.uleb128 0xd
 3175 0950 2C000000 		.4byte	.LVL138
 3176 0954 66080000 		.4byte	0x866
 3177 0958 0D       		.uleb128 0xd
 3178 0959 30000000 		.4byte	.LVL139
 3179 095d FD080000 		.4byte	0x8fd
 3180 0961 00       		.byte	0
 3181 0962 0A       		.uleb128 0xa
 3182 0963 EE030000 		.4byte	.LASF87
 3183 0967 01       		.byte	0x1
 3184 0968 440A     		.2byte	0xa44
 3185 096a 00000000 		.4byte	.LFB30
 3186 096e 20000000 		.4byte	.LFE30-.LFB30
 3187 0972 01       		.uleb128 0x1
 3188 0973 9C       		.byte	0x9c
 3189 0974 8B090000 		.4byte	0x98b
 3190 0978 0D       		.uleb128 0xd
 3191 0979 0E000000 		.4byte	.LVL140
 3192 097d 0F090000 		.4byte	0x90f
 3193 0981 0D       		.uleb128 0xd
 3194 0982 18000000 		.4byte	.LVL141
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 112


 3195 0986 34080000 		.4byte	0x834
 3196 098a 00       		.byte	0
 3197 098b 0F       		.uleb128 0xf
 3198 098c A0050000 		.4byte	.LASF88
 3199 0990 01       		.byte	0x1
 3200 0991 610B     		.2byte	0xb61
 3201 0993 E7000000 		.4byte	0xe7
 3202 0997 00000000 		.4byte	.LFB41
 3203 099b 10000000 		.4byte	.LFE41-.LFB41
 3204 099f 01       		.uleb128 0x1
 3205 09a0 9C       		.byte	0x9c
 3206 09a1 D2090000 		.4byte	0x9d2
 3207 09a5 0B       		.uleb128 0xb
 3208 09a6 9C030000 		.4byte	.LASF43
 3209 09aa 01       		.byte	0x1
 3210 09ab 610B     		.2byte	0xb61
 3211 09ad 83000000 		.4byte	0x83
 3212 09b1 89050000 		.4byte	.LLST40
 3213 09b5 0E       		.uleb128 0xe
 3214 09b6 4E040000 		.4byte	.LASF89
 3215 09ba 01       		.byte	0x1
 3216 09bb 610B     		.2byte	0xb61
 3217 09bd E7000000 		.4byte	0xe7
 3218 09c1 01       		.uleb128 0x1
 3219 09c2 51       		.byte	0x51
 3220 09c3 12       		.uleb128 0x12
 3221 09c4 5A000000 		.4byte	.LASF90
 3222 09c8 01       		.byte	0x1
 3223 09c9 630B     		.2byte	0xb63
 3224 09cb E7000000 		.4byte	0xe7
 3225 09cf 01       		.uleb128 0x1
 3226 09d0 50       		.byte	0x50
 3227 09d1 00       		.byte	0
 3228 09d2 0F       		.uleb128 0xf
 3229 09d3 DC010000 		.4byte	.LASF91
 3230 09d7 01       		.byte	0x1
 3231 09d8 790B     		.2byte	0xb79
 3232 09da E7000000 		.4byte	0xe7
 3233 09de 00000000 		.4byte	.LFB42
 3234 09e2 0C000000 		.4byte	.LFE42-.LFB42
 3235 09e6 01       		.uleb128 0x1
 3236 09e7 9C       		.byte	0x9c
 3237 09e8 FD090000 		.4byte	0x9fd
 3238 09ec 0B       		.uleb128 0xb
 3239 09ed 9C030000 		.4byte	.LASF43
 3240 09f1 01       		.byte	0x1
 3241 09f2 790B     		.2byte	0xb79
 3242 09f4 83000000 		.4byte	0x83
 3243 09f8 AA050000 		.4byte	.LLST41
 3244 09fc 00       		.byte	0
 3245 09fd 0A       		.uleb128 0xa
 3246 09fe C2020000 		.4byte	.LASF92
 3247 0a02 01       		.byte	0x1
 3248 0a03 A60B     		.2byte	0xba6
 3249 0a05 00000000 		.4byte	.LFB44
 3250 0a09 70000000 		.4byte	.LFE44-.LFB44
 3251 0a0d 01       		.uleb128 0x1
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 113


 3252 0a0e 9C       		.byte	0x9c
 3253 0a0f 220A0000 		.4byte	0xa22
 3254 0a13 0E       		.uleb128 0xe
 3255 0a14 D6050000 		.4byte	.LASF93
 3256 0a18 01       		.byte	0x1
 3257 0a19 A60B     		.2byte	0xba6
 3258 0a1b 220A0000 		.4byte	0xa22
 3259 0a1f 01       		.uleb128 0x1
 3260 0a20 50       		.byte	0x50
 3261 0a21 00       		.byte	0
 3262 0a22 06       		.uleb128 0x6
 3263 0a23 04       		.byte	0x4
 3264 0a24 83000000 		.4byte	0x83
 3265 0a28 1A       		.uleb128 0x1a
 3266 0a29 E7000000 		.4byte	0xe7
 3267 0a2d 380A0000 		.4byte	0xa38
 3268 0a31 1B       		.uleb128 0x1b
 3269 0a32 E0000000 		.4byte	0xe0
 3270 0a36 04       		.byte	0x4
 3271 0a37 00       		.byte	0
 3272 0a38 1C       		.uleb128 0x1c
 3273 0a39 B5050000 		.4byte	.LASF94
 3274 0a3d 01       		.byte	0x1
 3275 0a3e 22       		.byte	0x22
 3276 0a3f 280A0000 		.4byte	0xa28
 3277 0a43 05       		.uleb128 0x5
 3278 0a44 03       		.byte	0x3
 3279 0a45 00000000 		.4byte	CySysTickCallbacks
 3280 0a49 1D       		.uleb128 0x1d
 3281 0a4a 7A040000 		.4byte	.LASF95
 3282 0a4e 01       		.byte	0x1
 3283 0a4f 1B       		.byte	0x1b
 3284 0a50 83000000 		.4byte	0x83
 3285 0a54 05       		.uleb128 0x5
 3286 0a55 03       		.byte	0x3
 3287 0a56 00000000 		.4byte	cydelayFreqHz
 3288 0a5a 1D       		.uleb128 0x1d
 3289 0a5b F7010000 		.4byte	.LASF96
 3290 0a5f 01       		.byte	0x1
 3291 0a60 1C       		.byte	0x1c
 3292 0a61 83000000 		.4byte	0x83
 3293 0a65 05       		.uleb128 0x5
 3294 0a66 03       		.byte	0x3
 3295 0a67 00000000 		.4byte	cydelayFreqKhz
 3296 0a6b 1D       		.uleb128 0x1d
 3297 0a6c 11060000 		.4byte	.LASF97
 3298 0a70 01       		.byte	0x1
 3299 0a71 1D       		.byte	0x1d
 3300 0a72 6B000000 		.4byte	0x6b
 3301 0a76 05       		.uleb128 0x5
 3302 0a77 03       		.byte	0x3
 3303 0a78 00000000 		.4byte	cydelayFreqMhz
 3304 0a7c 1D       		.uleb128 0x1d
 3305 0a7d A1020000 		.4byte	.LASF98
 3306 0a81 01       		.byte	0x1
 3307 0a82 1E       		.byte	0x1e
 3308 0a83 83000000 		.4byte	0x83
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 114


 3309 0a87 05       		.uleb128 0x5
 3310 0a88 03       		.byte	0x3
 3311 0a89 00000000 		.4byte	cydelay32kMs
 3312 0a8d 1D       		.uleb128 0x1d
 3313 0a8e 29010000 		.4byte	.LASF99
 3314 0a92 01       		.byte	0x1
 3315 0a93 36       		.byte	0x36
 3316 0a94 83000000 		.4byte	0x83
 3317 0a98 05       		.uleb128 0x5
 3318 0a99 03       		.byte	0x3
 3319 0a9a 00000000 		.4byte	CySysTickInitVar
 3320 0a9e 1A       		.uleb128 0x1a
 3321 0a9f AE0A0000 		.4byte	0xaae
 3322 0aa3 AE0A0000 		.4byte	0xaae
 3323 0aa7 1B       		.uleb128 0x1b
 3324 0aa8 E0000000 		.4byte	0xe0
 3325 0aac 2D       		.byte	0x2d
 3326 0aad 00       		.byte	0
 3327 0aae 1E       		.uleb128 0x1e
 3328 0aaf 6B000000 		.4byte	0x6b
 3329 0ab3 1D       		.uleb128 0x1d
 3330 0ab4 57040000 		.4byte	.LASF100
 3331 0ab8 01       		.byte	0x1
 3332 0ab9 3B       		.byte	0x3b
 3333 0aba C40A0000 		.4byte	0xac4
 3334 0abe 05       		.uleb128 0x5
 3335 0abf 03       		.byte	0x3
 3336 0ac0 00000000 		.4byte	cyImoFreqMhz2Reg
 3337 0ac4 1E       		.uleb128 0x1e
 3338 0ac5 9E0A0000 		.4byte	0xa9e
 3339 0ac9 1D       		.uleb128 0x1d
 3340 0aca 40000000 		.4byte	.LASF101
 3341 0ace 01       		.byte	0x1
 3342 0acf 5B       		.byte	0x5b
 3343 0ad0 83000000 		.4byte	0x83
 3344 0ad4 05       		.uleb128 0x5
 3345 0ad5 03       		.byte	0x3
 3346 0ad6 00000000 		.4byte	CySysClkPumpConfig
 3347 0ada 1F       		.uleb128 0x1f
 3348 0adb 3F030000 		.4byte	.LASF102
 3349 0adf 3F030000 		.4byte	.LASF102
 3350 0ae3 03       		.byte	0x3
 3351 0ae4 E5       		.byte	0xe5
 3352 0ae5 1F       		.uleb128 0x1f
 3353 0ae6 9F040000 		.4byte	.LASF103
 3354 0aea 9F040000 		.4byte	.LASF103
 3355 0aee 03       		.byte	0x3
 3356 0aef E6       		.byte	0xe6
 3357 0af0 1F       		.uleb128 0x1f
 3358 0af1 F2040000 		.4byte	.LASF104
 3359 0af5 F2040000 		.4byte	.LASF104
 3360 0af9 03       		.byte	0x3
 3361 0afa DC       		.byte	0xdc
 3362 0afb 00       		.byte	0
 3363              		.section	.debug_abbrev,"",%progbits
 3364              	.Ldebug_abbrev0:
 3365 0000 01       		.uleb128 0x1
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 115


 3366 0001 11       		.uleb128 0x11
 3367 0002 01       		.byte	0x1
 3368 0003 25       		.uleb128 0x25
 3369 0004 0E       		.uleb128 0xe
 3370 0005 13       		.uleb128 0x13
 3371 0006 0B       		.uleb128 0xb
 3372 0007 03       		.uleb128 0x3
 3373 0008 0E       		.uleb128 0xe
 3374 0009 1B       		.uleb128 0x1b
 3375 000a 0E       		.uleb128 0xe
 3376 000b 55       		.uleb128 0x55
 3377 000c 17       		.uleb128 0x17
 3378 000d 11       		.uleb128 0x11
 3379 000e 01       		.uleb128 0x1
 3380 000f 10       		.uleb128 0x10
 3381 0010 17       		.uleb128 0x17
 3382 0011 00       		.byte	0
 3383 0012 00       		.byte	0
 3384 0013 02       		.uleb128 0x2
 3385 0014 24       		.uleb128 0x24
 3386 0015 00       		.byte	0
 3387 0016 0B       		.uleb128 0xb
 3388 0017 0B       		.uleb128 0xb
 3389 0018 3E       		.uleb128 0x3e
 3390 0019 0B       		.uleb128 0xb
 3391 001a 03       		.uleb128 0x3
 3392 001b 0E       		.uleb128 0xe
 3393 001c 00       		.byte	0
 3394 001d 00       		.byte	0
 3395 001e 03       		.uleb128 0x3
 3396 001f 24       		.uleb128 0x24
 3397 0020 00       		.byte	0
 3398 0021 0B       		.uleb128 0xb
 3399 0022 0B       		.uleb128 0xb
 3400 0023 3E       		.uleb128 0x3e
 3401 0024 0B       		.uleb128 0xb
 3402 0025 03       		.uleb128 0x3
 3403 0026 08       		.uleb128 0x8
 3404 0027 00       		.byte	0
 3405 0028 00       		.byte	0
 3406 0029 04       		.uleb128 0x4
 3407 002a 16       		.uleb128 0x16
 3408 002b 00       		.byte	0
 3409 002c 03       		.uleb128 0x3
 3410 002d 0E       		.uleb128 0xe
 3411 002e 3A       		.uleb128 0x3a
 3412 002f 0B       		.uleb128 0xb
 3413 0030 3B       		.uleb128 0x3b
 3414 0031 05       		.uleb128 0x5
 3415 0032 49       		.uleb128 0x49
 3416 0033 13       		.uleb128 0x13
 3417 0034 00       		.byte	0
 3418 0035 00       		.byte	0
 3419 0036 05       		.uleb128 0x5
 3420 0037 35       		.uleb128 0x35
 3421 0038 00       		.byte	0
 3422 0039 49       		.uleb128 0x49
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 116


 3423 003a 13       		.uleb128 0x13
 3424 003b 00       		.byte	0
 3425 003c 00       		.byte	0
 3426 003d 06       		.uleb128 0x6
 3427 003e 0F       		.uleb128 0xf
 3428 003f 00       		.byte	0
 3429 0040 0B       		.uleb128 0xb
 3430 0041 0B       		.uleb128 0xb
 3431 0042 49       		.uleb128 0x49
 3432 0043 13       		.uleb128 0x13
 3433 0044 00       		.byte	0
 3434 0045 00       		.byte	0
 3435 0046 07       		.uleb128 0x7
 3436 0047 15       		.uleb128 0x15
 3437 0048 00       		.byte	0
 3438 0049 27       		.uleb128 0x27
 3439 004a 19       		.uleb128 0x19
 3440 004b 00       		.byte	0
 3441 004c 00       		.byte	0
 3442 004d 08       		.uleb128 0x8
 3443 004e 16       		.uleb128 0x16
 3444 004f 00       		.byte	0
 3445 0050 03       		.uleb128 0x3
 3446 0051 0E       		.uleb128 0xe
 3447 0052 3A       		.uleb128 0x3a
 3448 0053 0B       		.uleb128 0xb
 3449 0054 3B       		.uleb128 0x3b
 3450 0055 0B       		.uleb128 0xb
 3451 0056 49       		.uleb128 0x49
 3452 0057 13       		.uleb128 0x13
 3453 0058 00       		.byte	0
 3454 0059 00       		.byte	0
 3455 005a 09       		.uleb128 0x9
 3456 005b 2E       		.uleb128 0x2e
 3457 005c 00       		.byte	0
 3458 005d 3F       		.uleb128 0x3f
 3459 005e 19       		.uleb128 0x19
 3460 005f 03       		.uleb128 0x3
 3461 0060 0E       		.uleb128 0xe
 3462 0061 3A       		.uleb128 0x3a
 3463 0062 0B       		.uleb128 0xb
 3464 0063 3B       		.uleb128 0x3b
 3465 0064 0B       		.uleb128 0xb
 3466 0065 27       		.uleb128 0x27
 3467 0066 19       		.uleb128 0x19
 3468 0067 11       		.uleb128 0x11
 3469 0068 01       		.uleb128 0x1
 3470 0069 12       		.uleb128 0x12
 3471 006a 06       		.uleb128 0x6
 3472 006b 40       		.uleb128 0x40
 3473 006c 18       		.uleb128 0x18
 3474 006d 9742     		.uleb128 0x2117
 3475 006f 19       		.uleb128 0x19
 3476 0070 00       		.byte	0
 3477 0071 00       		.byte	0
 3478 0072 0A       		.uleb128 0xa
 3479 0073 2E       		.uleb128 0x2e
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 117


 3480 0074 01       		.byte	0x1
 3481 0075 3F       		.uleb128 0x3f
 3482 0076 19       		.uleb128 0x19
 3483 0077 03       		.uleb128 0x3
 3484 0078 0E       		.uleb128 0xe
 3485 0079 3A       		.uleb128 0x3a
 3486 007a 0B       		.uleb128 0xb
 3487 007b 3B       		.uleb128 0x3b
 3488 007c 05       		.uleb128 0x5
 3489 007d 27       		.uleb128 0x27
 3490 007e 19       		.uleb128 0x19
 3491 007f 11       		.uleb128 0x11
 3492 0080 01       		.uleb128 0x1
 3493 0081 12       		.uleb128 0x12
 3494 0082 06       		.uleb128 0x6
 3495 0083 40       		.uleb128 0x40
 3496 0084 18       		.uleb128 0x18
 3497 0085 9742     		.uleb128 0x2117
 3498 0087 19       		.uleb128 0x19
 3499 0088 01       		.uleb128 0x1
 3500 0089 13       		.uleb128 0x13
 3501 008a 00       		.byte	0
 3502 008b 00       		.byte	0
 3503 008c 0B       		.uleb128 0xb
 3504 008d 05       		.uleb128 0x5
 3505 008e 00       		.byte	0
 3506 008f 03       		.uleb128 0x3
 3507 0090 0E       		.uleb128 0xe
 3508 0091 3A       		.uleb128 0x3a
 3509 0092 0B       		.uleb128 0xb
 3510 0093 3B       		.uleb128 0x3b
 3511 0094 05       		.uleb128 0x5
 3512 0095 49       		.uleb128 0x49
 3513 0096 13       		.uleb128 0x13
 3514 0097 02       		.uleb128 0x2
 3515 0098 17       		.uleb128 0x17
 3516 0099 00       		.byte	0
 3517 009a 00       		.byte	0
 3518 009b 0C       		.uleb128 0xc
 3519 009c 34       		.uleb128 0x34
 3520 009d 00       		.byte	0
 3521 009e 03       		.uleb128 0x3
 3522 009f 0E       		.uleb128 0xe
 3523 00a0 3A       		.uleb128 0x3a
 3524 00a1 0B       		.uleb128 0xb
 3525 00a2 3B       		.uleb128 0x3b
 3526 00a3 05       		.uleb128 0x5
 3527 00a4 49       		.uleb128 0x49
 3528 00a5 13       		.uleb128 0x13
 3529 00a6 02       		.uleb128 0x2
 3530 00a7 17       		.uleb128 0x17
 3531 00a8 00       		.byte	0
 3532 00a9 00       		.byte	0
 3533 00aa 0D       		.uleb128 0xd
 3534 00ab 898201   		.uleb128 0x4109
 3535 00ae 00       		.byte	0
 3536 00af 11       		.uleb128 0x11
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 118


 3537 00b0 01       		.uleb128 0x1
 3538 00b1 31       		.uleb128 0x31
 3539 00b2 13       		.uleb128 0x13
 3540 00b3 00       		.byte	0
 3541 00b4 00       		.byte	0
 3542 00b5 0E       		.uleb128 0xe
 3543 00b6 05       		.uleb128 0x5
 3544 00b7 00       		.byte	0
 3545 00b8 03       		.uleb128 0x3
 3546 00b9 0E       		.uleb128 0xe
 3547 00ba 3A       		.uleb128 0x3a
 3548 00bb 0B       		.uleb128 0xb
 3549 00bc 3B       		.uleb128 0x3b
 3550 00bd 05       		.uleb128 0x5
 3551 00be 49       		.uleb128 0x49
 3552 00bf 13       		.uleb128 0x13
 3553 00c0 02       		.uleb128 0x2
 3554 00c1 18       		.uleb128 0x18
 3555 00c2 00       		.byte	0
 3556 00c3 00       		.byte	0
 3557 00c4 0F       		.uleb128 0xf
 3558 00c5 2E       		.uleb128 0x2e
 3559 00c6 01       		.byte	0x1
 3560 00c7 3F       		.uleb128 0x3f
 3561 00c8 19       		.uleb128 0x19
 3562 00c9 03       		.uleb128 0x3
 3563 00ca 0E       		.uleb128 0xe
 3564 00cb 3A       		.uleb128 0x3a
 3565 00cc 0B       		.uleb128 0xb
 3566 00cd 3B       		.uleb128 0x3b
 3567 00ce 05       		.uleb128 0x5
 3568 00cf 27       		.uleb128 0x27
 3569 00d0 19       		.uleb128 0x19
 3570 00d1 49       		.uleb128 0x49
 3571 00d2 13       		.uleb128 0x13
 3572 00d3 11       		.uleb128 0x11
 3573 00d4 01       		.uleb128 0x1
 3574 00d5 12       		.uleb128 0x12
 3575 00d6 06       		.uleb128 0x6
 3576 00d7 40       		.uleb128 0x40
 3577 00d8 18       		.uleb128 0x18
 3578 00d9 9742     		.uleb128 0x2117
 3579 00db 19       		.uleb128 0x19
 3580 00dc 01       		.uleb128 0x1
 3581 00dd 13       		.uleb128 0x13
 3582 00de 00       		.byte	0
 3583 00df 00       		.byte	0
 3584 00e0 10       		.uleb128 0x10
 3585 00e1 2E       		.uleb128 0x2e
 3586 00e2 00       		.byte	0
 3587 00e3 3F       		.uleb128 0x3f
 3588 00e4 19       		.uleb128 0x19
 3589 00e5 03       		.uleb128 0x3
 3590 00e6 0E       		.uleb128 0xe
 3591 00e7 3A       		.uleb128 0x3a
 3592 00e8 0B       		.uleb128 0xb
 3593 00e9 3B       		.uleb128 0x3b
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 119


 3594 00ea 05       		.uleb128 0x5
 3595 00eb 27       		.uleb128 0x27
 3596 00ec 19       		.uleb128 0x19
 3597 00ed 11       		.uleb128 0x11
 3598 00ee 01       		.uleb128 0x1
 3599 00ef 12       		.uleb128 0x12
 3600 00f0 06       		.uleb128 0x6
 3601 00f1 40       		.uleb128 0x40
 3602 00f2 18       		.uleb128 0x18
 3603 00f3 9742     		.uleb128 0x2117
 3604 00f5 19       		.uleb128 0x19
 3605 00f6 00       		.byte	0
 3606 00f7 00       		.byte	0
 3607 00f8 11       		.uleb128 0x11
 3608 00f9 2E       		.uleb128 0x2e
 3609 00fa 00       		.byte	0
 3610 00fb 3F       		.uleb128 0x3f
 3611 00fc 19       		.uleb128 0x19
 3612 00fd 03       		.uleb128 0x3
 3613 00fe 0E       		.uleb128 0xe
 3614 00ff 3A       		.uleb128 0x3a
 3615 0100 0B       		.uleb128 0xb
 3616 0101 3B       		.uleb128 0x3b
 3617 0102 05       		.uleb128 0x5
 3618 0103 27       		.uleb128 0x27
 3619 0104 19       		.uleb128 0x19
 3620 0105 49       		.uleb128 0x49
 3621 0106 13       		.uleb128 0x13
 3622 0107 11       		.uleb128 0x11
 3623 0108 01       		.uleb128 0x1
 3624 0109 12       		.uleb128 0x12
 3625 010a 06       		.uleb128 0x6
 3626 010b 40       		.uleb128 0x40
 3627 010c 18       		.uleb128 0x18
 3628 010d 9742     		.uleb128 0x2117
 3629 010f 19       		.uleb128 0x19
 3630 0110 00       		.byte	0
 3631 0111 00       		.byte	0
 3632 0112 12       		.uleb128 0x12
 3633 0113 34       		.uleb128 0x34
 3634 0114 00       		.byte	0
 3635 0115 03       		.uleb128 0x3
 3636 0116 0E       		.uleb128 0xe
 3637 0117 3A       		.uleb128 0x3a
 3638 0118 0B       		.uleb128 0xb
 3639 0119 3B       		.uleb128 0x3b
 3640 011a 05       		.uleb128 0x5
 3641 011b 49       		.uleb128 0x49
 3642 011c 13       		.uleb128 0x13
 3643 011d 02       		.uleb128 0x2
 3644 011e 18       		.uleb128 0x18
 3645 011f 00       		.byte	0
 3646 0120 00       		.byte	0
 3647 0121 13       		.uleb128 0x13
 3648 0122 34       		.uleb128 0x34
 3649 0123 00       		.byte	0
 3650 0124 03       		.uleb128 0x3
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 120


 3651 0125 0E       		.uleb128 0xe
 3652 0126 3A       		.uleb128 0x3a
 3653 0127 0B       		.uleb128 0xb
 3654 0128 3B       		.uleb128 0x3b
 3655 0129 05       		.uleb128 0x5
 3656 012a 49       		.uleb128 0x49
 3657 012b 13       		.uleb128 0x13
 3658 012c 1C       		.uleb128 0x1c
 3659 012d 06       		.uleb128 0x6
 3660 012e 00       		.byte	0
 3661 012f 00       		.byte	0
 3662 0130 14       		.uleb128 0x14
 3663 0131 898201   		.uleb128 0x4109
 3664 0134 01       		.byte	0x1
 3665 0135 11       		.uleb128 0x11
 3666 0136 01       		.uleb128 0x1
 3667 0137 31       		.uleb128 0x31
 3668 0138 13       		.uleb128 0x13
 3669 0139 00       		.byte	0
 3670 013a 00       		.byte	0
 3671 013b 15       		.uleb128 0x15
 3672 013c 8A8201   		.uleb128 0x410a
 3673 013f 00       		.byte	0
 3674 0140 02       		.uleb128 0x2
 3675 0141 18       		.uleb128 0x18
 3676 0142 9142     		.uleb128 0x2111
 3677 0144 18       		.uleb128 0x18
 3678 0145 00       		.byte	0
 3679 0146 00       		.byte	0
 3680 0147 16       		.uleb128 0x16
 3681 0148 898201   		.uleb128 0x4109
 3682 014b 01       		.byte	0x1
 3683 014c 11       		.uleb128 0x11
 3684 014d 01       		.uleb128 0x1
 3685 014e 31       		.uleb128 0x31
 3686 014f 13       		.uleb128 0x13
 3687 0150 01       		.uleb128 0x1
 3688 0151 13       		.uleb128 0x13
 3689 0152 00       		.byte	0
 3690 0153 00       		.byte	0
 3691 0154 17       		.uleb128 0x17
 3692 0155 2E       		.uleb128 0x2e
 3693 0156 01       		.byte	0x1
 3694 0157 3F       		.uleb128 0x3f
 3695 0158 19       		.uleb128 0x19
 3696 0159 03       		.uleb128 0x3
 3697 015a 0E       		.uleb128 0xe
 3698 015b 3A       		.uleb128 0x3a
 3699 015c 0B       		.uleb128 0xb
 3700 015d 3B       		.uleb128 0x3b
 3701 015e 05       		.uleb128 0x5
 3702 015f 27       		.uleb128 0x27
 3703 0160 19       		.uleb128 0x19
 3704 0161 11       		.uleb128 0x11
 3705 0162 01       		.uleb128 0x1
 3706 0163 12       		.uleb128 0x12
 3707 0164 06       		.uleb128 0x6
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 121


 3708 0165 40       		.uleb128 0x40
 3709 0166 18       		.uleb128 0x18
 3710 0167 9642     		.uleb128 0x2116
 3711 0169 19       		.uleb128 0x19
 3712 016a 01       		.uleb128 0x1
 3713 016b 13       		.uleb128 0x13
 3714 016c 00       		.byte	0
 3715 016d 00       		.byte	0
 3716 016e 18       		.uleb128 0x18
 3717 016f 2E       		.uleb128 0x2e
 3718 0170 01       		.byte	0x1
 3719 0171 03       		.uleb128 0x3
 3720 0172 0E       		.uleb128 0xe
 3721 0173 3A       		.uleb128 0x3a
 3722 0174 0B       		.uleb128 0xb
 3723 0175 3B       		.uleb128 0x3b
 3724 0176 05       		.uleb128 0x5
 3725 0177 27       		.uleb128 0x27
 3726 0178 19       		.uleb128 0x19
 3727 0179 11       		.uleb128 0x11
 3728 017a 01       		.uleb128 0x1
 3729 017b 12       		.uleb128 0x12
 3730 017c 06       		.uleb128 0x6
 3731 017d 40       		.uleb128 0x40
 3732 017e 18       		.uleb128 0x18
 3733 017f 9642     		.uleb128 0x2116
 3734 0181 19       		.uleb128 0x19
 3735 0182 01       		.uleb128 0x1
 3736 0183 13       		.uleb128 0x13
 3737 0184 00       		.byte	0
 3738 0185 00       		.byte	0
 3739 0186 19       		.uleb128 0x19
 3740 0187 34       		.uleb128 0x34
 3741 0188 00       		.byte	0
 3742 0189 03       		.uleb128 0x3
 3743 018a 08       		.uleb128 0x8
 3744 018b 3A       		.uleb128 0x3a
 3745 018c 0B       		.uleb128 0xb
 3746 018d 3B       		.uleb128 0x3b
 3747 018e 05       		.uleb128 0x5
 3748 018f 49       		.uleb128 0x49
 3749 0190 13       		.uleb128 0x13
 3750 0191 02       		.uleb128 0x2
 3751 0192 17       		.uleb128 0x17
 3752 0193 00       		.byte	0
 3753 0194 00       		.byte	0
 3754 0195 1A       		.uleb128 0x1a
 3755 0196 01       		.uleb128 0x1
 3756 0197 01       		.byte	0x1
 3757 0198 49       		.uleb128 0x49
 3758 0199 13       		.uleb128 0x13
 3759 019a 01       		.uleb128 0x1
 3760 019b 13       		.uleb128 0x13
 3761 019c 00       		.byte	0
 3762 019d 00       		.byte	0
 3763 019e 1B       		.uleb128 0x1b
 3764 019f 21       		.uleb128 0x21
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 122


 3765 01a0 00       		.byte	0
 3766 01a1 49       		.uleb128 0x49
 3767 01a2 13       		.uleb128 0x13
 3768 01a3 2F       		.uleb128 0x2f
 3769 01a4 0B       		.uleb128 0xb
 3770 01a5 00       		.byte	0
 3771 01a6 00       		.byte	0
 3772 01a7 1C       		.uleb128 0x1c
 3773 01a8 34       		.uleb128 0x34
 3774 01a9 00       		.byte	0
 3775 01aa 03       		.uleb128 0x3
 3776 01ab 0E       		.uleb128 0xe
 3777 01ac 3A       		.uleb128 0x3a
 3778 01ad 0B       		.uleb128 0xb
 3779 01ae 3B       		.uleb128 0x3b
 3780 01af 0B       		.uleb128 0xb
 3781 01b0 49       		.uleb128 0x49
 3782 01b1 13       		.uleb128 0x13
 3783 01b2 02       		.uleb128 0x2
 3784 01b3 18       		.uleb128 0x18
 3785 01b4 00       		.byte	0
 3786 01b5 00       		.byte	0
 3787 01b6 1D       		.uleb128 0x1d
 3788 01b7 34       		.uleb128 0x34
 3789 01b8 00       		.byte	0
 3790 01b9 03       		.uleb128 0x3
 3791 01ba 0E       		.uleb128 0xe
 3792 01bb 3A       		.uleb128 0x3a
 3793 01bc 0B       		.uleb128 0xb
 3794 01bd 3B       		.uleb128 0x3b
 3795 01be 0B       		.uleb128 0xb
 3796 01bf 49       		.uleb128 0x49
 3797 01c0 13       		.uleb128 0x13
 3798 01c1 3F       		.uleb128 0x3f
 3799 01c2 19       		.uleb128 0x19
 3800 01c3 02       		.uleb128 0x2
 3801 01c4 18       		.uleb128 0x18
 3802 01c5 00       		.byte	0
 3803 01c6 00       		.byte	0
 3804 01c7 1E       		.uleb128 0x1e
 3805 01c8 26       		.uleb128 0x26
 3806 01c9 00       		.byte	0
 3807 01ca 49       		.uleb128 0x49
 3808 01cb 13       		.uleb128 0x13
 3809 01cc 00       		.byte	0
 3810 01cd 00       		.byte	0
 3811 01ce 1F       		.uleb128 0x1f
 3812 01cf 2E       		.uleb128 0x2e
 3813 01d0 00       		.byte	0
 3814 01d1 3F       		.uleb128 0x3f
 3815 01d2 19       		.uleb128 0x19
 3816 01d3 3C       		.uleb128 0x3c
 3817 01d4 19       		.uleb128 0x19
 3818 01d5 6E       		.uleb128 0x6e
 3819 01d6 0E       		.uleb128 0xe
 3820 01d7 03       		.uleb128 0x3
 3821 01d8 0E       		.uleb128 0xe
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 123


 3822 01d9 3A       		.uleb128 0x3a
 3823 01da 0B       		.uleb128 0xb
 3824 01db 3B       		.uleb128 0x3b
 3825 01dc 0B       		.uleb128 0xb
 3826 01dd 00       		.byte	0
 3827 01de 00       		.byte	0
 3828 01df 00       		.byte	0
 3829              		.section	.debug_loc,"",%progbits
 3830              	.Ldebug_loc0:
 3831              	.LLST0:
 3832 0000 00000000 		.4byte	.LVL0
 3833 0004 07000000 		.4byte	.LVL1-1
 3834 0008 0100     		.2byte	0x1
 3835 000a 50       		.byte	0x50
 3836 000b 07000000 		.4byte	.LVL1-1
 3837 000f 12000000 		.4byte	.LVL3
 3838 0013 0100     		.2byte	0x1
 3839 0015 54       		.byte	0x54
 3840 0016 12000000 		.4byte	.LVL3
 3841 001a 20000000 		.4byte	.LFE2
 3842 001e 0400     		.2byte	0x4
 3843 0020 F3       		.byte	0xf3
 3844 0021 01       		.uleb128 0x1
 3845 0022 50       		.byte	0x50
 3846 0023 9F       		.byte	0x9f
 3847 0024 00000000 		.4byte	0
 3848 0028 00000000 		.4byte	0
 3849              	.LLST1:
 3850 002c 08000000 		.4byte	.LVL1
 3851 0030 19000000 		.4byte	.LVL5-1
 3852 0034 0100     		.2byte	0x1
 3853 0036 50       		.byte	0x50
 3854 0037 00000000 		.4byte	0
 3855 003b 00000000 		.4byte	0
 3856              	.LLST2:
 3857 003f 10000000 		.4byte	.LVL2
 3858 0043 14000000 		.4byte	.LVL4
 3859 0047 0100     		.2byte	0x1
 3860 0049 53       		.byte	0x53
 3861 004a 14000000 		.4byte	.LVL4
 3862 004e 1A000000 		.4byte	.LVL6
 3863 0052 0100     		.2byte	0x1
 3864 0054 54       		.byte	0x54
 3865 0055 00000000 		.4byte	0
 3866 0059 00000000 		.4byte	0
 3867              	.LLST3:
 3868 005d 06000000 		.4byte	.LVL8
 3869 0061 11000000 		.4byte	.LVL10-1
 3870 0065 0100     		.2byte	0x1
 3871 0067 50       		.byte	0x50
 3872 0068 00000000 		.4byte	0
 3873 006c 00000000 		.4byte	0
 3874              	.LLST4:
 3875 0070 0E000000 		.4byte	.LVL9
 3876 0074 14000000 		.4byte	.LVL11
 3877 0078 0100     		.2byte	0x1
 3878 007a 54       		.byte	0x54
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 124


 3879 007b 14000000 		.4byte	.LVL11
 3880 007f 1C000000 		.4byte	.LFE4
 3881 0083 0100     		.2byte	0x1
 3882 0085 50       		.byte	0x50
 3883 0086 00000000 		.4byte	0
 3884 008a 00000000 		.4byte	0
 3885              	.LLST5:
 3886 008e 00000000 		.4byte	.LVL12
 3887 0092 07000000 		.4byte	.LVL13-1
 3888 0096 0100     		.2byte	0x1
 3889 0098 50       		.byte	0x50
 3890 0099 07000000 		.4byte	.LVL13-1
 3891 009d 14000000 		.4byte	.LVL14
 3892 00a1 0100     		.2byte	0x1
 3893 00a3 54       		.byte	0x54
 3894 00a4 14000000 		.4byte	.LVL14
 3895 00a8 30000000 		.4byte	.LFE5
 3896 00ac 0400     		.2byte	0x4
 3897 00ae F3       		.byte	0xf3
 3898 00af 01       		.uleb128 0x1
 3899 00b0 50       		.byte	0x50
 3900 00b1 9F       		.byte	0x9f
 3901 00b2 00000000 		.4byte	0
 3902 00b6 00000000 		.4byte	0
 3903              	.LLST6:
 3904 00ba 08000000 		.4byte	.LVL13
 3905 00be 23000000 		.4byte	.LVL15-1
 3906 00c2 0100     		.2byte	0x1
 3907 00c4 50       		.byte	0x50
 3908 00c5 00000000 		.4byte	0
 3909 00c9 00000000 		.4byte	0
 3910              	.LLST7:
 3911 00cd 00000000 		.4byte	.LVL16
 3912 00d1 04000000 		.4byte	.LVL17
 3913 00d5 0100     		.2byte	0x1
 3914 00d7 50       		.byte	0x50
 3915 00d8 04000000 		.4byte	.LVL17
 3916 00dc 14000000 		.4byte	.LFE11
 3917 00e0 0100     		.2byte	0x1
 3918 00e2 52       		.byte	0x52
 3919 00e3 00000000 		.4byte	0
 3920 00e7 00000000 		.4byte	0
 3921              	.LLST8:
 3922 00eb 00000000 		.4byte	.LVL22
 3923 00ef 04000000 		.4byte	.LVL23
 3924 00f3 0100     		.2byte	0x1
 3925 00f5 50       		.byte	0x50
 3926 00f6 04000000 		.4byte	.LVL23
 3927 00fa 14000000 		.4byte	.LFE20
 3928 00fe 0400     		.2byte	0x4
 3929 0100 F3       		.byte	0xf3
 3930 0101 01       		.uleb128 0x1
 3931 0102 50       		.byte	0x50
 3932 0103 9F       		.byte	0x9f
 3933 0104 00000000 		.4byte	0
 3934 0108 00000000 		.4byte	0
 3935              	.LLST9:
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 125


 3936 010c 00000000 		.4byte	.LVL24
 3937 0110 08000000 		.4byte	.LVL25
 3938 0114 0100     		.2byte	0x1
 3939 0116 50       		.byte	0x50
 3940 0117 08000000 		.4byte	.LVL25
 3941 011b 18000000 		.4byte	.LFE21
 3942 011f 0400     		.2byte	0x4
 3943 0121 F3       		.byte	0xf3
 3944 0122 01       		.uleb128 0x1
 3945 0123 50       		.byte	0x50
 3946 0124 9F       		.byte	0x9f
 3947 0125 00000000 		.4byte	0
 3948 0129 00000000 		.4byte	0
 3949              	.LLST10:
 3950 012d 00000000 		.4byte	.LVL26
 3951 0131 04000000 		.4byte	.LVL27
 3952 0135 0100     		.2byte	0x1
 3953 0137 50       		.byte	0x50
 3954 0138 04000000 		.4byte	.LVL27
 3955 013c 14000000 		.4byte	.LFE22
 3956 0140 0400     		.2byte	0x4
 3957 0142 F3       		.byte	0xf3
 3958 0143 01       		.uleb128 0x1
 3959 0144 50       		.byte	0x50
 3960 0145 9F       		.byte	0x9f
 3961 0146 00000000 		.4byte	0
 3962 014a 00000000 		.4byte	0
 3963              	.LLST11:
 3964 014e 00000000 		.4byte	.LVL28
 3965 0152 04000000 		.4byte	.LVL29
 3966 0156 0100     		.2byte	0x1
 3967 0158 50       		.byte	0x50
 3968 0159 04000000 		.4byte	.LVL29
 3969 015d 14000000 		.4byte	.LFE23
 3970 0161 0400     		.2byte	0x4
 3971 0163 F3       		.byte	0xf3
 3972 0164 01       		.uleb128 0x1
 3973 0165 50       		.byte	0x50
 3974 0166 9F       		.byte	0x9f
 3975 0167 00000000 		.4byte	0
 3976 016b 00000000 		.4byte	0
 3977              	.LLST12:
 3978 016f 00000000 		.4byte	.LVL30
 3979 0173 04000000 		.4byte	.LVL31
 3980 0177 0100     		.2byte	0x1
 3981 0179 50       		.byte	0x50
 3982 017a 04000000 		.4byte	.LVL31
 3983 017e 14000000 		.4byte	.LFE24
 3984 0182 0400     		.2byte	0x4
 3985 0184 F3       		.byte	0xf3
 3986 0185 01       		.uleb128 0x1
 3987 0186 50       		.byte	0x50
 3988 0187 9F       		.byte	0x9f
 3989 0188 00000000 		.4byte	0
 3990 018c 00000000 		.4byte	0
 3991              	.LLST13:
 3992 0190 00000000 		.4byte	.LVL33
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 126


 3993 0194 0C000000 		.4byte	.LVL35
 3994 0198 0100     		.2byte	0x1
 3995 019a 50       		.byte	0x50
 3996 019b 0C000000 		.4byte	.LVL35
 3997 019f 20000000 		.4byte	.LFE14
 3998 01a3 0400     		.2byte	0x4
 3999 01a5 F3       		.byte	0xf3
 4000 01a6 01       		.uleb128 0x1
 4001 01a7 50       		.byte	0x50
 4002 01a8 9F       		.byte	0x9f
 4003 01a9 00000000 		.4byte	0
 4004 01ad 00000000 		.4byte	0
 4005              	.LLST14:
 4006 01b1 00000000 		.4byte	.LVL33
 4007 01b5 0F000000 		.4byte	.LVL36-1
 4008 01b9 0100     		.2byte	0x1
 4009 01bb 51       		.byte	0x51
 4010 01bc 0F000000 		.4byte	.LVL36-1
 4011 01c0 1E000000 		.4byte	.LVL38
 4012 01c4 0100     		.2byte	0x1
 4013 01c6 55       		.byte	0x55
 4014 01c7 1E000000 		.4byte	.LVL38
 4015 01cb 20000000 		.4byte	.LFE14
 4016 01cf 0400     		.2byte	0x4
 4017 01d1 F3       		.byte	0xf3
 4018 01d2 01       		.uleb128 0x1
 4019 01d3 51       		.byte	0x51
 4020 01d4 9F       		.byte	0x9f
 4021 01d5 00000000 		.4byte	0
 4022 01d9 00000000 		.4byte	0
 4023              	.LLST15:
 4024 01dd 00000000 		.4byte	.LVL39
 4025 01e1 0A000000 		.4byte	.LVL41
 4026 01e5 0100     		.2byte	0x1
 4027 01e7 50       		.byte	0x50
 4028 01e8 0A000000 		.4byte	.LVL41
 4029 01ec 1C000000 		.4byte	.LFE15
 4030 01f0 0400     		.2byte	0x4
 4031 01f2 F3       		.byte	0xf3
 4032 01f3 01       		.uleb128 0x1
 4033 01f4 50       		.byte	0x50
 4034 01f5 9F       		.byte	0x9f
 4035 01f6 00000000 		.4byte	0
 4036 01fa 00000000 		.4byte	0
 4037              	.LLST16:
 4038 01fe 00000000 		.4byte	.LVL43
 4039 0202 0C000000 		.4byte	.LVL45
 4040 0206 0100     		.2byte	0x1
 4041 0208 50       		.byte	0x50
 4042 0209 0C000000 		.4byte	.LVL45
 4043 020d 22000000 		.4byte	.LFE16
 4044 0211 0400     		.2byte	0x4
 4045 0213 F3       		.byte	0xf3
 4046 0214 01       		.uleb128 0x1
 4047 0215 50       		.byte	0x50
 4048 0216 9F       		.byte	0x9f
 4049 0217 00000000 		.4byte	0
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 127


 4050 021b 00000000 		.4byte	0
 4051              	.LLST17:
 4052 021f 00000000 		.4byte	.LVL43
 4053 0223 0F000000 		.4byte	.LVL46-1
 4054 0227 0100     		.2byte	0x1
 4055 0229 51       		.byte	0x51
 4056 022a 0F000000 		.4byte	.LVL46-1
 4057 022e 20000000 		.4byte	.LVL48
 4058 0232 0100     		.2byte	0x1
 4059 0234 55       		.byte	0x55
 4060 0235 20000000 		.4byte	.LVL48
 4061 0239 22000000 		.4byte	.LFE16
 4062 023d 0400     		.2byte	0x4
 4063 023f F3       		.byte	0xf3
 4064 0240 01       		.uleb128 0x1
 4065 0241 51       		.byte	0x51
 4066 0242 9F       		.byte	0x9f
 4067 0243 00000000 		.4byte	0
 4068 0247 00000000 		.4byte	0
 4069              	.LLST18:
 4070 024b 00000000 		.4byte	.LVL49
 4071 024f 0A000000 		.4byte	.LVL51
 4072 0253 0100     		.2byte	0x1
 4073 0255 50       		.byte	0x50
 4074 0256 0A000000 		.4byte	.LVL51
 4075 025a 1E000000 		.4byte	.LFE17
 4076 025e 0400     		.2byte	0x4
 4077 0260 F3       		.byte	0xf3
 4078 0261 01       		.uleb128 0x1
 4079 0262 50       		.byte	0x50
 4080 0263 9F       		.byte	0x9f
 4081 0264 00000000 		.4byte	0
 4082 0268 00000000 		.4byte	0
 4083              	.LLST19:
 4084 026c 00000000 		.4byte	.LVL53
 4085 0270 0C000000 		.4byte	.LVL54
 4086 0274 0100     		.2byte	0x1
 4087 0276 50       		.byte	0x50
 4088 0277 0C000000 		.4byte	.LVL54
 4089 027b 4C000000 		.4byte	.LFE18
 4090 027f 0400     		.2byte	0x4
 4091 0281 F3       		.byte	0xf3
 4092 0282 01       		.uleb128 0x1
 4093 0283 50       		.byte	0x50
 4094 0284 9F       		.byte	0x9f
 4095 0285 00000000 		.4byte	0
 4096 0289 00000000 		.4byte	0
 4097              	.LLST20:
 4098 028d 00000000 		.4byte	.LVL53
 4099 0291 0F000000 		.4byte	.LVL55-1
 4100 0295 0100     		.2byte	0x1
 4101 0297 51       		.byte	0x51
 4102 0298 0F000000 		.4byte	.LVL55-1
 4103 029c 4C000000 		.4byte	.LFE18
 4104 02a0 0400     		.2byte	0x4
 4105 02a2 F3       		.byte	0xf3
 4106 02a3 01       		.uleb128 0x1
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 128


 4107 02a4 51       		.byte	0x51
 4108 02a5 9F       		.byte	0x9f
 4109 02a6 00000000 		.4byte	0
 4110 02aa 00000000 		.4byte	0
 4111              	.LLST21:
 4112 02ae 26000000 		.4byte	.LVL58
 4113 02b2 45000000 		.4byte	.LVL64-1
 4114 02b6 0100     		.2byte	0x1
 4115 02b8 50       		.byte	0x50
 4116 02b9 00000000 		.4byte	0
 4117 02bd 00000000 		.4byte	0
 4118              	.LLST22:
 4119 02c1 22000000 		.4byte	.LVL57
 4120 02c5 46000000 		.4byte	.LVL65
 4121 02c9 0100     		.2byte	0x1
 4122 02cb 55       		.byte	0x55
 4123 02cc 00000000 		.4byte	0
 4124 02d0 00000000 		.4byte	0
 4125              	.LLST23:
 4126 02d4 32000000 		.4byte	.LVL59
 4127 02d8 38000000 		.4byte	.LVL60
 4128 02dc 0100     		.2byte	0x1
 4129 02de 51       		.byte	0x51
 4130 02df 3A000000 		.4byte	.LVL61
 4131 02e3 3C000000 		.4byte	.LVL62
 4132 02e7 0100     		.2byte	0x1
 4133 02e9 51       		.byte	0x51
 4134 02ea 3C000000 		.4byte	.LVL62
 4135 02ee 40000000 		.4byte	.LVL63
 4136 02f2 0100     		.2byte	0x1
 4137 02f4 53       		.byte	0x53
 4138 02f5 40000000 		.4byte	.LVL63
 4139 02f9 45000000 		.4byte	.LVL64-1
 4140 02fd 0100     		.2byte	0x1
 4141 02ff 51       		.byte	0x51
 4142 0300 00000000 		.4byte	0
 4143 0304 00000000 		.4byte	0
 4144              	.LLST24:
 4145 0308 00000000 		.4byte	.LVL66
 4146 030c 0A000000 		.4byte	.LVL67
 4147 0310 0100     		.2byte	0x1
 4148 0312 50       		.byte	0x50
 4149 0313 0A000000 		.4byte	.LVL67
 4150 0317 2C000000 		.4byte	.LFE19
 4151 031b 0400     		.2byte	0x4
 4152 031d F3       		.byte	0xf3
 4153 031e 01       		.uleb128 0x1
 4154 031f 50       		.byte	0x50
 4155 0320 9F       		.byte	0x9f
 4156 0321 00000000 		.4byte	0
 4157 0325 00000000 		.4byte	0
 4158              	.LLST25:
 4159 0329 24000000 		.4byte	.LVL69
 4160 032d 26000000 		.4byte	.LVL70
 4161 0331 0100     		.2byte	0x1
 4162 0333 50       		.byte	0x50
 4163 0334 00000000 		.4byte	0
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 129


 4164 0338 00000000 		.4byte	0
 4165              	.LLST26:
 4166 033c 00000000 		.4byte	.LVL71
 4167 0340 06000000 		.4byte	.LVL72
 4168 0344 0100     		.2byte	0x1
 4169 0346 50       		.byte	0x50
 4170 0347 06000000 		.4byte	.LVL72
 4171 034b 26000000 		.4byte	.LVL76
 4172 034f 0100     		.2byte	0x1
 4173 0351 54       		.byte	0x54
 4174 0352 00000000 		.4byte	0
 4175 0356 00000000 		.4byte	0
 4176              	.LLST27:
 4177 035a 00000000 		.4byte	.LVL77
 4178 035e 08000000 		.4byte	.LVL78
 4179 0362 0100     		.2byte	0x1
 4180 0364 50       		.byte	0x50
 4181 0365 08000000 		.4byte	.LVL78
 4182 0369 14000000 		.4byte	.LFE28
 4183 036d 0400     		.2byte	0x4
 4184 036f F3       		.byte	0xf3
 4185 0370 01       		.uleb128 0x1
 4186 0371 50       		.byte	0x50
 4187 0372 9F       		.byte	0x9f
 4188 0373 00000000 		.4byte	0
 4189 0377 00000000 		.4byte	0
 4190              	.LLST28:
 4191 037b 00000000 		.4byte	.LVL80
 4192 037f 0F000000 		.4byte	.LVL81-1
 4193 0383 0100     		.2byte	0x1
 4194 0385 50       		.byte	0x50
 4195 0386 0F000000 		.4byte	.LVL81-1
 4196 038a D4000000 		.4byte	.LVL103
 4197 038e 0100     		.2byte	0x1
 4198 0390 54       		.byte	0x54
 4199 0391 D4000000 		.4byte	.LVL103
 4200 0395 02010000 		.4byte	.LVL110
 4201 0399 0700     		.2byte	0x7
 4202 039b 74       		.byte	0x74
 4203 039c B39C8080 		.sleb128 -268431821
 4203      7F
 4204 03a1 9F       		.byte	0x9f
 4205 03a2 02010000 		.4byte	.LVL110
 4206 03a6 08010000 		.4byte	.LVL111
 4207 03aa 0100     		.2byte	0x1
 4208 03ac 54       		.byte	0x54
 4209 03ad 08010000 		.4byte	.LVL111
 4210 03b1 10010000 		.4byte	.LVL113
 4211 03b5 0300     		.2byte	0x3
 4212 03b7 77       		.byte	0x77
 4213 03b8 03       		.sleb128 3
 4214 03b9 9F       		.byte	0x9f
 4215 03ba 10010000 		.4byte	.LVL113
 4216 03be 64010000 		.4byte	.LFE6
 4217 03c2 0400     		.2byte	0x4
 4218 03c4 F3       		.byte	0xf3
 4219 03c5 01       		.uleb128 0x1
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 130


 4220 03c6 50       		.byte	0x50
 4221 03c7 9F       		.byte	0x9f
 4222 03c8 00000000 		.4byte	0
 4223 03cc 00000000 		.4byte	0
 4224              	.LLST29:
 4225 03d0 2A000000 		.4byte	.LVL83
 4226 03d4 34000000 		.4byte	.LVL85
 4227 03d8 0100     		.2byte	0x1
 4228 03da 5A       		.byte	0x5a
 4229 03db 46000000 		.4byte	.LVL86
 4230 03df 50000000 		.4byte	.LVL88
 4231 03e3 0100     		.2byte	0x1
 4232 03e5 5A       		.byte	0x5a
 4233 03e6 62000000 		.4byte	.LVL89
 4234 03ea 6C000000 		.4byte	.LVL91
 4235 03ee 0100     		.2byte	0x1
 4236 03f0 5A       		.byte	0x5a
 4237 03f1 7E000000 		.4byte	.LVL92
 4238 03f5 88000000 		.4byte	.LVL94
 4239 03f9 0100     		.2byte	0x1
 4240 03fb 5A       		.byte	0x5a
 4241 03fc 90000000 		.4byte	.LVL95
 4242 0400 02010000 		.4byte	.LVL110
 4243 0404 0100     		.2byte	0x1
 4244 0406 5A       		.byte	0x5a
 4245 0407 00000000 		.4byte	0
 4246 040b 00000000 		.4byte	0
 4247              	.LLST30:
 4248 040f 32000000 		.4byte	.LVL84
 4249 0413 34000000 		.4byte	.LVL85
 4250 0417 0100     		.2byte	0x1
 4251 0419 59       		.byte	0x59
 4252 041a 4E000000 		.4byte	.LVL87
 4253 041e 50000000 		.4byte	.LVL88
 4254 0422 0100     		.2byte	0x1
 4255 0424 59       		.byte	0x59
 4256 0425 6A000000 		.4byte	.LVL90
 4257 0429 6C000000 		.4byte	.LVL91
 4258 042d 0100     		.2byte	0x1
 4259 042f 59       		.byte	0x59
 4260 0430 86000000 		.4byte	.LVL93
 4261 0434 88000000 		.4byte	.LVL94
 4262 0438 0100     		.2byte	0x1
 4263 043a 59       		.byte	0x59
 4264 043b 98000000 		.4byte	.LVL96
 4265 043f 02010000 		.4byte	.LVL110
 4266 0443 0100     		.2byte	0x1
 4267 0445 59       		.byte	0x59
 4268 0446 00000000 		.4byte	0
 4269 044a 00000000 		.4byte	0
 4270              	.LLST31:
 4271 044e 9C000000 		.4byte	.LVL97
 4272 0452 02010000 		.4byte	.LVL110
 4273 0456 0100     		.2byte	0x1
 4274 0458 56       		.byte	0x56
 4275 0459 00000000 		.4byte	0
 4276 045d 00000000 		.4byte	0
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 131


 4277              	.LLST32:
 4278 0461 B0000000 		.4byte	.LVL99
 4279 0465 B4000000 		.4byte	.LVL100
 4280 0469 0200     		.2byte	0x2
 4281 046b 49       		.byte	0x49
 4282 046c 9F       		.byte	0x9f
 4283 046d BC000000 		.4byte	.LVL101
 4284 0471 02010000 		.4byte	.LVL110
 4285 0475 0100     		.2byte	0x1
 4286 0477 55       		.byte	0x55
 4287 0478 00000000 		.4byte	0
 4288 047c 00000000 		.4byte	0
 4289              	.LLST33:
 4290 0480 D8000000 		.4byte	.LVL104
 4291 0484 DE000000 		.4byte	.LVL105
 4292 0488 0100     		.2byte	0x1
 4293 048a 53       		.byte	0x53
 4294 048b DE000000 		.4byte	.LVL105
 4295 048f E0000000 		.4byte	.LVL106
 4296 0493 0400     		.2byte	0x4
 4297 0495 72       		.byte	0x72
 4298 0496 00       		.sleb128 0
 4299 0497 06       		.byte	0x6
 4300 0498 9F       		.byte	0x9f
 4301 0499 E0000000 		.4byte	.LVL106
 4302 049d E2000000 		.4byte	.LVL107
 4303 04a1 0700     		.2byte	0x7
 4304 04a3 0C       		.byte	0xc
 4305 04a4 28FF0B40 		.4byte	0x400bff28
 4306 04a8 06       		.byte	0x6
 4307 04a9 9F       		.byte	0x9f
 4308 04aa 00000000 		.4byte	0
 4309 04ae 00000000 		.4byte	0
 4310              	.LLST34:
 4311 04b2 12000000 		.4byte	.LVL82
 4312 04b6 AA000000 		.4byte	.LVL98
 4313 04ba 0200     		.2byte	0x2
 4314 04bc 91       		.byte	0x91
 4315 04bd 5C       		.sleb128 -36
 4316 04be B4000000 		.4byte	.LVL100
 4317 04c2 BC000000 		.4byte	.LVL101
 4318 04c6 0200     		.2byte	0x2
 4319 04c8 91       		.byte	0x91
 4320 04c9 5C       		.sleb128 -36
 4321 04ca 02010000 		.4byte	.LVL110
 4322 04ce 08010000 		.4byte	.LVL111
 4323 04d2 0200     		.2byte	0x2
 4324 04d4 91       		.byte	0x91
 4325 04d5 5C       		.sleb128 -36
 4326 04d6 00000000 		.4byte	0
 4327 04da 00000000 		.4byte	0
 4328              	.LLST35:
 4329 04de 00000000 		.4byte	.LVL114
 4330 04e2 14000000 		.4byte	.LVL115
 4331 04e6 0100     		.2byte	0x1
 4332 04e8 50       		.byte	0x50
 4333 04e9 14000000 		.4byte	.LVL115
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 132


 4334 04ed 18000000 		.4byte	.LVL116
 4335 04f1 0100     		.2byte	0x1
 4336 04f3 53       		.byte	0x53
 4337 04f4 18000000 		.4byte	.LVL116
 4338 04f8 44000000 		.4byte	.LFE7
 4339 04fc 0400     		.2byte	0x4
 4340 04fe F3       		.byte	0xf3
 4341 04ff 01       		.uleb128 0x1
 4342 0500 50       		.byte	0x50
 4343 0501 9F       		.byte	0x9f
 4344 0502 00000000 		.4byte	0
 4345 0506 00000000 		.4byte	0
 4346              	.LLST36:
 4347 050a 00000000 		.4byte	.LVL119
 4348 050e 1A000000 		.4byte	.LVL120
 4349 0512 0100     		.2byte	0x1
 4350 0514 50       		.byte	0x50
 4351 0515 1A000000 		.4byte	.LVL120
 4352 0519 4C000000 		.4byte	.LFE29
 4353 051d 0400     		.2byte	0x4
 4354 051f F3       		.byte	0xf3
 4355 0520 01       		.uleb128 0x1
 4356 0521 50       		.byte	0x50
 4357 0522 9F       		.byte	0x9f
 4358 0523 00000000 		.4byte	0
 4359 0527 00000000 		.4byte	0
 4360              	.LLST37:
 4361 052b 00000000 		.4byte	.LVL124
 4362 052f 02000000 		.4byte	.LVL125
 4363 0533 0100     		.2byte	0x1
 4364 0535 50       		.byte	0x50
 4365 0536 02000000 		.4byte	.LVL125
 4366 053a 10000000 		.4byte	.LFE36
 4367 053e 0400     		.2byte	0x4
 4368 0540 F3       		.byte	0xf3
 4369 0541 01       		.uleb128 0x1
 4370 0542 50       		.byte	0x50
 4371 0543 9F       		.byte	0x9f
 4372 0544 00000000 		.4byte	0
 4373 0548 00000000 		.4byte	0
 4374              	.LLST38:
 4375 054c 0C000000 		.4byte	.LVL127
 4376 0550 1C000000 		.4byte	.LVL130
 4377 0554 0100     		.2byte	0x1
 4378 0556 54       		.byte	0x54
 4379 0557 1E000000 		.4byte	.LVL131
 4380 055b 22000000 		.4byte	.LVL132
 4381 055f 0100     		.2byte	0x1
 4382 0561 54       		.byte	0x54
 4383 0562 00000000 		.4byte	0
 4384 0566 00000000 		.4byte	0
 4385              	.LLST39:
 4386 056a 02000000 		.4byte	.LVL133
 4387 056e 06000000 		.4byte	.LVL134
 4388 0572 0200     		.2byte	0x2
 4389 0574 30       		.byte	0x30
 4390 0575 9F       		.byte	0x9f
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 133


 4391 0576 06000000 		.4byte	.LVL134
 4392 057a 1B000000 		.4byte	.LVL136-1
 4393 057e 0100     		.2byte	0x1
 4394 0580 53       		.byte	0x53
 4395 0581 00000000 		.4byte	0
 4396 0585 00000000 		.4byte	0
 4397              	.LLST40:
 4398 0589 00000000 		.4byte	.LVL142
 4399 058d 06000000 		.4byte	.LVL143
 4400 0591 0100     		.2byte	0x1
 4401 0593 50       		.byte	0x50
 4402 0594 06000000 		.4byte	.LVL143
 4403 0598 10000000 		.4byte	.LFE41
 4404 059c 0400     		.2byte	0x4
 4405 059e F3       		.byte	0xf3
 4406 059f 01       		.uleb128 0x1
 4407 05a0 50       		.byte	0x50
 4408 05a1 9F       		.byte	0x9f
 4409 05a2 00000000 		.4byte	0
 4410 05a6 00000000 		.4byte	0
 4411              	.LLST41:
 4412 05aa 00000000 		.4byte	.LVL144
 4413 05ae 02000000 		.4byte	.LVL145
 4414 05b2 0100     		.2byte	0x1
 4415 05b4 50       		.byte	0x50
 4416 05b5 02000000 		.4byte	.LVL145
 4417 05b9 0C000000 		.4byte	.LFE42
 4418 05bd 0400     		.2byte	0x4
 4419 05bf F3       		.byte	0xf3
 4420 05c0 01       		.uleb128 0x1
 4421 05c1 50       		.byte	0x50
 4422 05c2 9F       		.byte	0x9f
 4423 05c3 00000000 		.4byte	0
 4424 05c7 00000000 		.4byte	0
 4425              		.section	.debug_aranges,"",%progbits
 4426 0000 7C010000 		.4byte	0x17c
 4427 0004 0200     		.2byte	0x2
 4428 0006 00000000 		.4byte	.Ldebug_info0
 4429 000a 04       		.byte	0x4
 4430 000b 00       		.byte	0
 4431 000c 0000     		.2byte	0
 4432 000e 0000     		.2byte	0
 4433 0010 00000000 		.4byte	.LFB0
 4434 0014 14000000 		.4byte	.LFE0-.LFB0
 4435 0018 00000000 		.4byte	.LFB1
 4436 001c 10000000 		.4byte	.LFE1-.LFB1
 4437 0020 00000000 		.4byte	.LFB2
 4438 0024 20000000 		.4byte	.LFE2-.LFB2
 4439 0028 00000000 		.4byte	.LFB3
 4440 002c 38000000 		.4byte	.LFE3-.LFB3
 4441 0030 00000000 		.4byte	.LFB4
 4442 0034 1C000000 		.4byte	.LFE4-.LFB4
 4443 0038 00000000 		.4byte	.LFB5
 4444 003c 30000000 		.4byte	.LFE5-.LFB5
 4445 0040 00000000 		.4byte	.LFB8
 4446 0044 20000000 		.4byte	.LFE8-.LFB8
 4447 0048 00000000 		.4byte	.LFB9
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 134


 4448 004c 10000000 		.4byte	.LFE9-.LFB9
 4449 0050 00000000 		.4byte	.LFB10
 4450 0054 0C000000 		.4byte	.LFE10-.LFB10
 4451 0058 00000000 		.4byte	.LFB11
 4452 005c 14000000 		.4byte	.LFE11-.LFB11
 4453 0060 00000000 		.4byte	.LFB12
 4454 0064 10000000 		.4byte	.LFE12-.LFB12
 4455 0068 00000000 		.4byte	.LFB13
 4456 006c 0C000000 		.4byte	.LFE13-.LFB13
 4457 0070 00000000 		.4byte	.LFB20
 4458 0074 14000000 		.4byte	.LFE20-.LFB20
 4459 0078 00000000 		.4byte	.LFB21
 4460 007c 18000000 		.4byte	.LFE21-.LFB21
 4461 0080 00000000 		.4byte	.LFB22
 4462 0084 14000000 		.4byte	.LFE22-.LFB22
 4463 0088 00000000 		.4byte	.LFB23
 4464 008c 14000000 		.4byte	.LFE23-.LFB23
 4465 0090 00000000 		.4byte	.LFB24
 4466 0094 14000000 		.4byte	.LFE24-.LFB24
 4467 0098 00000000 		.4byte	.LFB25
 4468 009c 04000000 		.4byte	.LFE25-.LFB25
 4469 00a0 00000000 		.4byte	.LFB14
 4470 00a4 20000000 		.4byte	.LFE14-.LFB14
 4471 00a8 00000000 		.4byte	.LFB15
 4472 00ac 1C000000 		.4byte	.LFE15-.LFB15
 4473 00b0 00000000 		.4byte	.LFB16
 4474 00b4 22000000 		.4byte	.LFE16-.LFB16
 4475 00b8 00000000 		.4byte	.LFB17
 4476 00bc 1E000000 		.4byte	.LFE17-.LFB17
 4477 00c0 00000000 		.4byte	.LFB18
 4478 00c4 4C000000 		.4byte	.LFE18-.LFB18
 4479 00c8 00000000 		.4byte	.LFB19
 4480 00cc 2C000000 		.4byte	.LFE19-.LFB19
 4481 00d0 00000000 		.4byte	.LFB26
 4482 00d4 18000000 		.4byte	.LFE26-.LFB26
 4483 00d8 00000000 		.4byte	.LFB27
 4484 00dc 30000000 		.4byte	.LFE27-.LFB27
 4485 00e0 00000000 		.4byte	.LFB28
 4486 00e4 14000000 		.4byte	.LFE28-.LFB28
 4487 00e8 00000000 		.4byte	.LFB6
 4488 00ec 64010000 		.4byte	.LFE6-.LFB6
 4489 00f0 00000000 		.4byte	.LFB7
 4490 00f4 44000000 		.4byte	.LFE7-.LFB7
 4491 00f8 00000000 		.4byte	.LFB29
 4492 00fc 4C000000 		.4byte	.LFE29-.LFB29
 4493 0100 00000000 		.4byte	.LFB33
 4494 0104 10000000 		.4byte	.LFE33-.LFB33
 4495 0108 00000000 		.4byte	.LFB34
 4496 010c 10000000 		.4byte	.LFE34-.LFB34
 4497 0110 00000000 		.4byte	.LFB32
 4498 0114 18000000 		.4byte	.LFE32-.LFB32
 4499 0118 00000000 		.4byte	.LFB35
 4500 011c 10000000 		.4byte	.LFE35-.LFB35
 4501 0120 00000000 		.4byte	.LFB36
 4502 0124 10000000 		.4byte	.LFE36-.LFB36
 4503 0128 00000000 		.4byte	.LFB37
 4504 012c 10000000 		.4byte	.LFE37-.LFB37
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 135


 4505 0130 00000000 		.4byte	.LFB38
 4506 0134 10000000 		.4byte	.LFE38-.LFB38
 4507 0138 00000000 		.4byte	.LFB39
 4508 013c 10000000 		.4byte	.LFE39-.LFB39
 4509 0140 00000000 		.4byte	.LFB43
 4510 0144 28000000 		.4byte	.LFE43-.LFB43
 4511 0148 00000000 		.4byte	.LFB40
 4512 014c 0C000000 		.4byte	.LFE40-.LFB40
 4513 0150 00000000 		.4byte	.LFB31
 4514 0154 40000000 		.4byte	.LFE31-.LFB31
 4515 0158 00000000 		.4byte	.LFB30
 4516 015c 20000000 		.4byte	.LFE30-.LFB30
 4517 0160 00000000 		.4byte	.LFB41
 4518 0164 10000000 		.4byte	.LFE41-.LFB41
 4519 0168 00000000 		.4byte	.LFB42
 4520 016c 0C000000 		.4byte	.LFE42-.LFB42
 4521 0170 00000000 		.4byte	.LFB44
 4522 0174 70000000 		.4byte	.LFE44-.LFB44
 4523 0178 00000000 		.4byte	0
 4524 017c 00000000 		.4byte	0
 4525              		.section	.debug_ranges,"",%progbits
 4526              	.Ldebug_ranges0:
 4527 0000 00000000 		.4byte	.LFB0
 4528 0004 14000000 		.4byte	.LFE0
 4529 0008 00000000 		.4byte	.LFB1
 4530 000c 10000000 		.4byte	.LFE1
 4531 0010 00000000 		.4byte	.LFB2
 4532 0014 20000000 		.4byte	.LFE2
 4533 0018 00000000 		.4byte	.LFB3
 4534 001c 38000000 		.4byte	.LFE3
 4535 0020 00000000 		.4byte	.LFB4
 4536 0024 1C000000 		.4byte	.LFE4
 4537 0028 00000000 		.4byte	.LFB5
 4538 002c 30000000 		.4byte	.LFE5
 4539 0030 00000000 		.4byte	.LFB8
 4540 0034 20000000 		.4byte	.LFE8
 4541 0038 00000000 		.4byte	.LFB9
 4542 003c 10000000 		.4byte	.LFE9
 4543 0040 00000000 		.4byte	.LFB10
 4544 0044 0C000000 		.4byte	.LFE10
 4545 0048 00000000 		.4byte	.LFB11
 4546 004c 14000000 		.4byte	.LFE11
 4547 0050 00000000 		.4byte	.LFB12
 4548 0054 10000000 		.4byte	.LFE12
 4549 0058 00000000 		.4byte	.LFB13
 4550 005c 0C000000 		.4byte	.LFE13
 4551 0060 00000000 		.4byte	.LFB20
 4552 0064 14000000 		.4byte	.LFE20
 4553 0068 00000000 		.4byte	.LFB21
 4554 006c 18000000 		.4byte	.LFE21
 4555 0070 00000000 		.4byte	.LFB22
 4556 0074 14000000 		.4byte	.LFE22
 4557 0078 00000000 		.4byte	.LFB23
 4558 007c 14000000 		.4byte	.LFE23
 4559 0080 00000000 		.4byte	.LFB24
 4560 0084 14000000 		.4byte	.LFE24
 4561 0088 00000000 		.4byte	.LFB25
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 136


 4562 008c 04000000 		.4byte	.LFE25
 4563 0090 00000000 		.4byte	.LFB14
 4564 0094 20000000 		.4byte	.LFE14
 4565 0098 00000000 		.4byte	.LFB15
 4566 009c 1C000000 		.4byte	.LFE15
 4567 00a0 00000000 		.4byte	.LFB16
 4568 00a4 22000000 		.4byte	.LFE16
 4569 00a8 00000000 		.4byte	.LFB17
 4570 00ac 1E000000 		.4byte	.LFE17
 4571 00b0 00000000 		.4byte	.LFB18
 4572 00b4 4C000000 		.4byte	.LFE18
 4573 00b8 00000000 		.4byte	.LFB19
 4574 00bc 2C000000 		.4byte	.LFE19
 4575 00c0 00000000 		.4byte	.LFB26
 4576 00c4 18000000 		.4byte	.LFE26
 4577 00c8 00000000 		.4byte	.LFB27
 4578 00cc 30000000 		.4byte	.LFE27
 4579 00d0 00000000 		.4byte	.LFB28
 4580 00d4 14000000 		.4byte	.LFE28
 4581 00d8 00000000 		.4byte	.LFB6
 4582 00dc 64010000 		.4byte	.LFE6
 4583 00e0 00000000 		.4byte	.LFB7
 4584 00e4 44000000 		.4byte	.LFE7
 4585 00e8 00000000 		.4byte	.LFB29
 4586 00ec 4C000000 		.4byte	.LFE29
 4587 00f0 00000000 		.4byte	.LFB33
 4588 00f4 10000000 		.4byte	.LFE33
 4589 00f8 00000000 		.4byte	.LFB34
 4590 00fc 10000000 		.4byte	.LFE34
 4591 0100 00000000 		.4byte	.LFB32
 4592 0104 18000000 		.4byte	.LFE32
 4593 0108 00000000 		.4byte	.LFB35
 4594 010c 10000000 		.4byte	.LFE35
 4595 0110 00000000 		.4byte	.LFB36
 4596 0114 10000000 		.4byte	.LFE36
 4597 0118 00000000 		.4byte	.LFB37
 4598 011c 10000000 		.4byte	.LFE37
 4599 0120 00000000 		.4byte	.LFB38
 4600 0124 10000000 		.4byte	.LFE38
 4601 0128 00000000 		.4byte	.LFB39
 4602 012c 10000000 		.4byte	.LFE39
 4603 0130 00000000 		.4byte	.LFB43
 4604 0134 28000000 		.4byte	.LFE43
 4605 0138 00000000 		.4byte	.LFB40
 4606 013c 0C000000 		.4byte	.LFE40
 4607 0140 00000000 		.4byte	.LFB31
 4608 0144 40000000 		.4byte	.LFE31
 4609 0148 00000000 		.4byte	.LFB30
 4610 014c 20000000 		.4byte	.LFE30
 4611 0150 00000000 		.4byte	.LFB41
 4612 0154 10000000 		.4byte	.LFE41
 4613 0158 00000000 		.4byte	.LFB42
 4614 015c 0C000000 		.4byte	.LFE42
 4615 0160 00000000 		.4byte	.LFB44
 4616 0164 70000000 		.4byte	.LFE44
 4617 0168 00000000 		.4byte	0
 4618 016c 00000000 		.4byte	0
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 137


 4619              		.section	.debug_line,"",%progbits
 4620              	.Ldebug_line0:
 4621 0000 5B040000 		.section	.debug_str,"MS",%progbits,1
 4621      02004D00 
 4621      00000201 
 4621      FB0E0D00 
 4621      01010101 
 4622              	.LASF52:
 4623 0000 72616D56 		.ascii	"ramVectorTable\000"
 4623      6563746F 
 4623      72546162 
 4623      6C6500
 4624              	.LASF68:
 4625 000f 62675472 		.ascii	"bgTrim4\000"
 4625      696D3400 
 4626              	.LASF10:
 4627 0017 75696E74 		.ascii	"uint16\000"
 4627      313600
 4628              	.LASF39:
 4629 001e 696E7453 		.ascii	"intState\000"
 4629      74617465 
 4629      00
 4630              	.LASF25:
 4631 0027 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 4631      73436C6B 
 4631      57726974 
 4631      65486663 
 4631      6C6B4469 
 4632              	.LASF101:
 4633 0040 43795379 		.ascii	"CySysClkPumpConfig\000"
 4633      73436C6B 
 4633      50756D70 
 4633      436F6E66 
 4633      696700
 4634              	.LASF51:
 4635 0053 6F6C6449 		.ascii	"oldIsr\000"
 4635      737200
 4636              	.LASF90:
 4637 005a 72657456 		.ascii	"retVal\000"
 4637      616C00
 4638              	.LASF38:
 4639 0061 43794469 		.ascii	"CyDisableInts\000"
 4639      7361626C 
 4639      65496E74 
 4639      7300
 4640              	.LASF71:
 4641 006f 63757272 		.ascii	"currentImoTrim2Value\000"
 4641      656E7449 
 4641      6D6F5472 
 4641      696D3256 
 4641      616C7565 
 4642              	.LASF105:
 4643 0084 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4643      43313120 
 4643      352E342E 
 4643      31203230 
 4643      31363036 
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 138


 4644 00b7 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 4644      20726576 
 4644      6973696F 
 4644      6E203233 
 4644      37373135 
 4645 00ea 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4645      66756E63 
 4645      74696F6E 
 4645      2D736563 
 4645      74696F6E 
 4646              	.LASF7:
 4647 0112 6C6F6E67 		.ascii	"long long unsigned int\000"
 4647      206C6F6E 
 4647      6720756E 
 4647      7369676E 
 4647      65642069 
 4648              	.LASF99:
 4649 0129 43795379 		.ascii	"CySysTickInitVar\000"
 4649      73546963 
 4649      6B496E69 
 4649      74566172 
 4649      00
 4650              	.LASF40:
 4651 013a 4379456E 		.ascii	"CyEnableInts\000"
 4651      61626C65 
 4651      496E7473 
 4651      00
 4652              	.LASF61:
 4653 0147 4379536F 		.ascii	"CySoftwareReset\000"
 4653      66747761 
 4653      72655265 
 4653      73657400 
 4654              	.LASF77:
 4655 0157 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 4655      73546963 
 4655      6B456E61 
 4655      626C6549 
 4655      6E746572 
 4656              	.LASF44:
 4657 0170 4379496E 		.ascii	"CyIntGetState\000"
 4657      74476574 
 4657      53746174 
 4657      6500
 4658              	.LASF6:
 4659 017e 6C6F6E67 		.ascii	"long long int\000"
 4659      206C6F6E 
 4659      6720696E 
 4659      7400
 4660              	.LASF0:
 4661 018c 7369676E 		.ascii	"signed char\000"
 4661      65642063 
 4661      68617200 
 4662              	.LASF67:
 4663 0198 66726571 		.ascii	"freq\000"
 4663      00
 4664              	.LASF11:
 4665 019d 75696E74 		.ascii	"uint32\000"
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 139


 4665      333200
 4666              	.LASF23:
 4667 01a4 696E7465 		.ascii	"interruptState\000"
 4667      72727570 
 4667      74537461 
 4667      746500
 4668              	.LASF82:
 4669 01b3 43795379 		.ascii	"CySysTickGetReload\000"
 4669      73546963 
 4669      6B476574 
 4669      52656C6F 
 4669      616400
 4670              	.LASF4:
 4671 01c6 6C6F6E67 		.ascii	"long int\000"
 4671      20696E74 
 4671      00
 4672              	.LASF45:
 4673 01cf 4379496E 		.ascii	"CyIntDisable\000"
 4673      74446973 
 4673      61626C65 
 4673      00
 4674              	.LASF91:
 4675 01dc 43795379 		.ascii	"CySysTickGetCallback\000"
 4675      73546963 
 4675      6B476574 
 4675      43616C6C 
 4675      6261636B 
 4676              	.LASF9:
 4677 01f1 75696E74 		.ascii	"uint8\000"
 4677      3800
 4678              	.LASF96:
 4679 01f7 63796465 		.ascii	"cydelayFreqKhz\000"
 4679      6C617946 
 4679      7265714B 
 4679      687A00
 4680              	.LASF28:
 4681 0206 656E6162 		.ascii	"enable\000"
 4681      6C6500
 4682              	.LASF13:
 4683 020d 646F7562 		.ascii	"double\000"
 4683      6C6500
 4684              	.LASF58:
 4685 0214 73686966 		.ascii	"shift\000"
 4685      7400
 4686              	.LASF33:
 4687 021a 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 4687      734C7664 
 4687      436C6561 
 4687      72496E74 
 4687      65727275 
 4688              	.LASF107:
 4689 0231 443A5C5A 		.ascii	"D:\\Zuru Shaunak\\Documents\\PSoC Creator\\Workspac"
 4689      75727520 
 4689      53686175 
 4689      6E616B5C 
 4689      446F6375 
 4690 0260 6530325C 		.ascii	"e02\\Design01.cydsn\000"
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 140


 4690      44657369 
 4690      676E3031 
 4690      2E637964 
 4690      736E00
 4691              	.LASF41:
 4692 0273 6D61736B 		.ascii	"mask\000"
 4692      00
 4693              	.LASF34:
 4694 0278 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 4694      73436C6B 
 4694      47657453 
 4694      7973636C 
 4694      6B536F75 
 4695              	.LASF60:
 4696 0290 4379496E 		.ascii	"CyIntGetPriority\000"
 4696      74476574 
 4696      5072696F 
 4696      72697479 
 4696      00
 4697              	.LASF98:
 4698 02a1 63796465 		.ascii	"cydelay32kMs\000"
 4698      6C617933 
 4698      326B4D73 
 4698      00
 4699              	.LASF86:
 4700 02ae 43795379 		.ascii	"CySysTickInit\000"
 4700      73546963 
 4700      6B496E69 
 4700      7400
 4701              	.LASF59:
 4702 02bc 76616C75 		.ascii	"value\000"
 4702      6500
 4703              	.LASF92:
 4704 02c2 43794765 		.ascii	"CyGetUniqueId\000"
 4704      74556E69 
 4704      71756549 
 4704      6400
 4705              	.LASF84:
 4706 02d0 43795379 		.ascii	"CySysTickGetCountFlag\000"
 4706      73546963 
 4706      6B476574 
 4706      436F756E 
 4706      74466C61 
 4707              	.LASF8:
 4708 02e6 756E7369 		.ascii	"unsigned int\000"
 4708      676E6564 
 4708      20696E74 
 4708      00
 4709              	.LASF85:
 4710 02f3 43795379 		.ascii	"CySysTickClear\000"
 4710      73546963 
 4710      6B436C65 
 4710      617200
 4711              	.LASF5:
 4712 0302 6C6F6E67 		.ascii	"long unsigned int\000"
 4712      20756E73 
 4712      69676E65 
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 141


 4712      6420696E 
 4712      7400
 4713              	.LASF81:
 4714 0314 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 4714      734C7664 
 4714      47657449 
 4714      6E746572 
 4714      72757074 
 4715              	.LASF22:
 4716 032f 43795379 		.ascii	"CySysClkImoStop\000"
 4716      73436C6B 
 4716      496D6F53 
 4716      746F7000 
 4717              	.LASF102:
 4718 033f 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4718      74657243 
 4718      72697469 
 4718      63616C53 
 4718      65637469 
 4719              	.LASF46:
 4720 0356 4379496E 		.ascii	"CyIntSetPending\000"
 4720      74536574 
 4720      50656E64 
 4720      696E6700 
 4721              	.LASF35:
 4722 0366 43795379 		.ascii	"CySysGetResetReason\000"
 4722      73476574 
 4722      52657365 
 4722      74526561 
 4722      736F6E00 
 4723              	.LASF3:
 4724 037a 73686F72 		.ascii	"short unsigned int\000"
 4724      7420756E 
 4724      7369676E 
 4724      65642069 
 4724      6E7400
 4725              	.LASF54:
 4726 038d 4379496E 		.ascii	"CyIntSetVector\000"
 4726      74536574 
 4726      56656374 
 4726      6F7200
 4727              	.LASF43:
 4728 039c 6E756D62 		.ascii	"number\000"
 4728      657200
 4729              	.LASF57:
 4730 03a3 7072696F 		.ascii	"priority\000"
 4730      72697479 
 4730      00
 4731              	.LASF66:
 4732 03ac 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 4732      73436C6B 
 4732      57726974 
 4732      65496D6F 
 4732      46726571 
 4733              	.LASF49:
 4734 03c1 4379496E 		.ascii	"CyIntSetSysVector\000"
 4734      74536574 
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 142


 4734      53797356 
 4734      6563746F 
 4734      7200
 4735              	.LASF26:
 4736 03d3 43795379 		.ascii	"CySysEnablePumpClock\000"
 4736      73456E61 
 4736      626C6550 
 4736      756D7043 
 4736      6C6F636B 
 4737              	.LASF16:
 4738 03e8 72656733 		.ascii	"reg32\000"
 4738      3200
 4739              	.LASF87:
 4740 03ee 43795379 		.ascii	"CySysTickStart\000"
 4740      73546963 
 4740      6B537461 
 4740      727400
 4741              	.LASF37:
 4742 03fd 72657475 		.ascii	"returnStatus\000"
 4742      726E5374 
 4742      61747573 
 4742      00
 4743              	.LASF19:
 4744 040a 73697A65 		.ascii	"sizetype\000"
 4744      74797065 
 4744      00
 4745              	.LASF47:
 4746 0413 4379496E 		.ascii	"CyIntClearPending\000"
 4746      74436C65 
 4746      61725065 
 4746      6E64696E 
 4746      6700
 4747              	.LASF18:
 4748 0425 6C6F6E67 		.ascii	"long double\000"
 4748      20646F75 
 4748      626C6500 
 4749              	.LASF50:
 4750 0431 61646472 		.ascii	"address\000"
 4750      65737300 
 4751              	.LASF69:
 4752 0439 62675472 		.ascii	"bgTrim5\000"
 4752      696D3500 
 4753              	.LASF29:
 4754 0441 73797363 		.ascii	"sysclkSource\000"
 4754      6C6B536F 
 4754      75726365 
 4754      00
 4755              	.LASF89:
 4756 044e 66756E63 		.ascii	"function\000"
 4756      74696F6E 
 4756      00
 4757              	.LASF100:
 4758 0457 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 4758      6F467265 
 4758      714D687A 
 4758      32526567 
 4758      00
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 143


 4759              	.LASF83:
 4760 0468 43795379 		.ascii	"CySysTickGetValue\000"
 4760      73546963 
 4760      6B476574 
 4760      56616C75 
 4760      6500
 4761              	.LASF95:
 4762 047a 63796465 		.ascii	"cydelayFreqHz\000"
 4762      6C617946 
 4762      72657148 
 4762      7A00
 4763              	.LASF56:
 4764 0488 4379496E 		.ascii	"CyIntSetPriority\000"
 4764      74536574 
 4764      5072696F 
 4764      72697479 
 4764      00
 4765              	.LASF12:
 4766 0499 666C6F61 		.ascii	"float\000"
 4766      7400
 4767              	.LASF103:
 4768 049f 43794578 		.ascii	"CyExitCriticalSection\000"
 4768      69744372 
 4768      69746963 
 4768      616C5365 
 4768      6374696F 
 4769              	.LASF73:
 4770 04b5 43795379 		.ascii	"CySysLvdEnable\000"
 4770      734C7664 
 4770      456E6162 
 4770      6C6500
 4771              	.LASF20:
 4772 04c4 63795379 		.ascii	"cySysTickCallback\000"
 4772      73546963 
 4772      6B43616C 
 4772      6C626163 
 4772      6B00
 4773              	.LASF55:
 4774 04d6 4379496E 		.ascii	"CyIntGetVector\000"
 4774      74476574 
 4774      56656374 
 4774      6F7200
 4775              	.LASF63:
 4776 04e5 6D696C6C 		.ascii	"milliseconds\000"
 4776      69736563 
 4776      6F6E6473 
 4776      00
 4777              	.LASF104:
 4778 04f2 43794465 		.ascii	"CyDelayCycles\000"
 4778      6C617943 
 4778      79636C65 
 4778      7300
 4779              	.LASF15:
 4780 0500 72656738 		.ascii	"reg8\000"
 4780      00
 4781              	.LASF74:
 4782 0505 74687265 		.ascii	"threshold\000"
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 144


 4782      73686F6C 
 4782      6400
 4783              	.LASF48:
 4784 050f 43794861 		.ascii	"CyHalt\000"
 4784      6C7400
 4785              	.LASF1:
 4786 0516 756E7369 		.ascii	"unsigned char\000"
 4786      676E6564 
 4786      20636861 
 4786      7200
 4787              	.LASF2:
 4788 0524 73686F72 		.ascii	"short int\000"
 4788      7420696E 
 4788      7400
 4789              	.LASF42:
 4790 052e 4379496E 		.ascii	"CyIntEnable\000"
 4790      74456E61 
 4790      626C6500 
 4791              	.LASF53:
 4792 053a 4379496E 		.ascii	"CyIntGetSysVector\000"
 4792      74476574 
 4792      53797356 
 4792      6563746F 
 4792      7200
 4793              	.LASF27:
 4794 054c 636C6B53 		.ascii	"clkSelect\000"
 4794      656C6563 
 4794      7400
 4795              	.LASF64:
 4796 0556 43794465 		.ascii	"CyDelayUs\000"
 4796      6C617955 
 4796      7300
 4797              	.LASF36:
 4798 0560 72656173 		.ascii	"reason\000"
 4798      6F6E00
 4799              	.LASF14:
 4800 0567 63686172 		.ascii	"char\000"
 4800      00
 4801              	.LASF17:
 4802 056c 63796973 		.ascii	"cyisraddress\000"
 4802      72616464 
 4802      72657373 
 4802      00
 4803              	.LASF78:
 4804 0579 43795379 		.ascii	"CySysTickEnable\000"
 4804      73546963 
 4804      6B456E61 
 4804      626C6500 
 4805              	.LASF30:
 4806 0589 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 4806      73436C6B 
 4806      57726974 
 4806      65537973 
 4806      636C6B44 
 4807              	.LASF88:
 4808 05a0 43795379 		.ascii	"CySysTickSetCallback\000"
 4808      73546963 
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 145


 4808      6B536574 
 4808      43616C6C 
 4808      6261636B 
 4809              	.LASF94:
 4810 05b5 43795379 		.ascii	"CySysTickCallbacks\000"
 4810      73546963 
 4810      6B43616C 
 4810      6C626163 
 4810      6B7300
 4811              	.LASF72:
 4812 05c8 696D6F54 		.ascii	"imoTrim1Value\000"
 4812      72696D31 
 4812      56616C75 
 4812      6500
 4813              	.LASF93:
 4814 05d6 756E6971 		.ascii	"uniqueId\000"
 4814      75654964 
 4814      00
 4815              	.LASF62:
 4816 05df 43794465 		.ascii	"CyDelay\000"
 4816      6C617900 
 4817              	.LASF79:
 4818 05e7 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 4818      73546963 
 4818      6B446973 
 4818      61626C65 
 4818      496E7465 
 4819              	.LASF32:
 4820 0601 43795379 		.ascii	"CySysLvdDisable\000"
 4820      734C7664 
 4820      44697361 
 4820      626C6500 
 4821              	.LASF97:
 4822 0611 63796465 		.ascii	"cydelayFreqMhz\000"
 4822      6C617946 
 4822      7265714D 
 4822      687A00
 4823              	.LASF75:
 4824 0620 43794465 		.ascii	"CyDelayFreq\000"
 4824      6C617946 
 4824      72657100 
 4825              	.LASF76:
 4826 062c 43795379 		.ascii	"CySysTickStop\000"
 4826      73546963 
 4826      6B53746F 
 4826      7000
 4827              	.LASF31:
 4828 063a 64697669 		.ascii	"divider\000"
 4828      64657200 
 4829              	.LASF21:
 4830 0642 43795379 		.ascii	"CySysClkImoStart\000"
 4830      73436C6B 
 4830      496D6F53 
 4830      74617274 
 4830      00
 4831              	.LASF70:
 4832 0653 6E657749 		.ascii	"newImoTrim2Value\000"
ARM GAS  C:\Users\ZTIPRI~1\AppData\Local\Temp\ccHVKojz.s 			page 146


 4832      6D6F5472 
 4832      696D3256 
 4832      616C7565 
 4832      00
 4833              	.LASF106:
 4834 0664 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 4834      72617465 
 4834      645F536F 
 4834      75726365 
 4834      5C50536F 
 4835              	.LASF65:
 4836 0683 6D696372 		.ascii	"microseconds\000"
 4836      6F736563 
 4836      6F6E6473 
 4836      00
 4837              	.LASF24:
 4838 0690 746D7052 		.ascii	"tmpReg\000"
 4838      656700
 4839              	.LASF80:
 4840 0697 43795379 		.ascii	"CySysTickSetReload\000"
 4840      73546963 
 4840      6B536574 
 4840      52656C6F 
 4840      616400
 4841              	.LASF108:
 4842 06aa 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 4842      73546963 
 4842      6B536572 
 4842      76696365 
 4842      43616C6C 
 4843              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
